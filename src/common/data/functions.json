{
    "main": {
        "name": "main",
        "return_type": "void",
        "params": [],
        "desc": "When defined, this function automatically runs at the start of the game. Never define a main function with arguments!"
    },
    "xsDisableRule": {
        "name": "xsDisableRule",
        "return_type": "void",
        "params": [
            {
                "name": "ruleName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule to disable"
            }
        ],
        "desc": "Disables the given rule."
    },
    "xsDisableSelf": {
        "name": "xsDisableSelf",
        "return_type": "void",
        "params": [],
        "desc": "Disables the rule this function is called inside. Cannot be used outside of a rule's body!"
    },
    "xsEnableRule": {
        "name": "xsEnableRule",
        "return_type": "void",
        "params": [
            {
                "name": "ruleName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule to enable"
            }
        ],
        "desc": "Enables the given rule."
    },
    "xsIsRuleEnabled": {
        "name": "xsIsRuleEnabled",
        "return_type": "bool",
        "params": [
            {
                "name": "ruleName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule to check"
            }
        ],
        "desc": "Returns true if the rule is enabled, else returns false."
    },
    "xsSetRulePriority": {
        "name": "xsSetRulePriority",
        "return_type": "void",
        "params": [
            {
                "name": "ruleName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule to set the priority of"
            },
            {
                "name": "priority",
                "type": "int",
                "required": true,
                "desc": "The new priority of the rule"
            }
        ],
        "desc": "Sets the priority of the given rule."
    },
    "xsSetRulePrioritySelf": {
        "name": "xsSetRulePrioritySelf",
        "return_type": "void",
        "params": [
            {
                "name": "priority",
                "type": "int",
                "required": true,
                "desc": "The new priority of the rule"
            }
        ],
        "desc": "Sets the priority of the rule this function is called inside. Cannot be used outside of a rule's body!"
    },
    "xsSetRuleMinInterval": {
        "name": "xsSetRuleMinInterval",
        "return_type": "void",
        "params": [
            {
                "name": "ruleName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule to set the min interval of"
            },
            {
                "name": "interval",
                "type": "int",
                "required": true,
                "desc": "The new min interval of the rule"
            }
        ],
        "desc": "Sets the min interval of the given rule."
    },
    "xsSetRuleMinIntervalSelf": {
        "name": "xsSetRuleMinIntervalSelf",
        "return_type": "void",
        "params": [
            {
                "name": "interval",
                "type": "int",
                "required": true,
                "desc": "The new min interval of the rule"
            }
        ],
        "desc": "Sets the min interval of the rule this function is called inside. Cannot be used outside of a rule's body!"
    },
    "xsSetRuleMaxInterval": {
        "name": "xsSetRuleMaxInterval",
        "return_type": "void",
        "params": [
            {
                "name": "ruleName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule to set the max interval of"
            },
            {
                "name": "interval",
                "type": "int",
                "required": true,
                "desc": "The new max interval of the rule"
            }
        ],
        "desc": "Sets the max interval of the given rule."
    },
    "xsSetRuleMaxIntervalSelf": {
        "name": "xsSetRuleMaxIntervalSelf",
        "return_type": "void",
        "params": [
            {
                "name": "interval",
                "type": "int",
                "required": true,
                "desc": "The new max interval of the rule"
            }
        ],
        "desc": "Sets the max interval of the rule this function is called inside. Cannot be used outside of a rule's body!"
    },
    "xsEnableRuleGroup": {
        "name": "xsEnableRuleGroup",
        "return_type": "void",
        "params": [
            {
                "name": "ruleGroupName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule group to enable"
            }
        ],
        "desc": "Enables all the rules in the given rule group"
    },
    "xsDisableRuleGroup": {
        "name": "xsDisableRuleGroup",
        "return_type": "void",
        "params": [
            {
                "name": "ruleGroupName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule group to disable"
            }
        ],
        "desc": "Disables all the rules in the given rule group"
    },
    "xsIsRuleGroupEnabled": {
        "name": "xsIsRuleGroupEnabled",
        "return_type": "bool",
        "params": [
            {
                "name": "ruleGroupName",
                "type": "string",
                "required": true,
                "desc": "The name of the rule group to check"
            }
        ],
        "desc": "Returns true, if all the rules in the given rule group are enabled"
    },
    "xsVectorGetX": {
        "name": "xsVectorGetX",
        "return_type": "float",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to get the X coordinate of"
            }
        ],
        "desc": "The X coordinate of the vector given."
    },
    "xsVectorGetY": {
        "name": "xsVectorGetY",
        "return_type": "float",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to get the Y coordinate of"
            }
        ],
        "desc": "The Y coordinate of the vector given."
    },
    "xsVectorGetZ": {
        "name": "xsVectorGetZ",
        "return_type": "float",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to get the Z coordinate of"
            }
        ],
        "desc": "The Z coordinate of the vector given."
    },
    "xsVectorSetX": {
        "name": "xsVectorSetX",
        "return_type": "vector",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to modify the X coordinate of"
            },
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The value to set the X coordinate to"
            }
        ],
        "desc": "Returns a new vector with the X component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter!"
    },
    "xsVectorSetY": {
        "name": "xsVectorSetY",
        "return_type": "vector",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to modify the Y coordinate of"
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "The value to set the Y coordinate to"
            }
        ],
        "desc": "Returns a new vector with the Y component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter!"
    },
    "xsVectorSetZ": {
        "name": "xsVectorSetZ",
        "return_type": "vector",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to modify the Z coordinate of"
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "The value to set the Z coordinate to"
            }
        ],
        "desc": "Returns a new vector with the Z component of the given vector changed to the given value. Note: This function DOES NOT modify the vector given as the parameter!"
    },
    "xsVectorSet": {
        "name": "xsVectorSet",
        "return_type": "vector",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The value to set the X coordinate to"
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "The value to set the Y coordinate to"
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "The value to set the Z coordinate to"
            }
        ],
        "desc": "Returns a vector with the given X, Y and Z components."
    },
    "xsVectorLength": {
        "name": "xsVectorLength",
        "return_type": "float",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to calculate the length of"
            }
        ],
        "desc": "Returns the length of the given vector."
    },
    "xsVectorNormalize": {
        "name": "xsVectorNormalize",
        "return_type": "vector",
        "params": [
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "The vector to normalise"
            }
        ],
        "desc": "Returns the normalised vector in the direction of the given vector."
    },
    "xsArrayCreateInt": {
        "name": "xsArrayCreateInt",
        "return_type": "int",
        "params": [
            {
                "name": "size",
                "type": "int",
                "required": true,
                "desc": "The length of the array to create"
            },
            {
                "name": "defaultValue",
                "type": "int",
                "required": true,
                "desc": "The default value to initialise all the values in the array to"
            },
            {
                "name": "uniqueName",
                "type": "string",
                "required": true,
                "desc": "A unique name of the created array"
            }
        ],
        "desc": "Creates an array of type int and returns its ID."
    },
    "xsArrayCreateFloat": {
        "name": "xsArrayCreateFloat",
        "return_type": "int",
        "params": [
            {
                "name": "size",
                "type": "int",
                "required": true,
                "desc": "The length of the array to create"
            },
            {
                "name": "defaultValue",
                "type": "float",
                "required": true,
                "desc": "The default value to initialise all the values in the array to"
            },
            {
                "name": "uniqueName",
                "type": "string",
                "required": true,
                "desc": "A unique name of the created array"
            }
        ],
        "desc": "Creates an array of type float and returns its ID."
    },
    "xsArrayCreateBool": {
        "name": "xsArrayCreateBool",
        "return_type": "int",
        "params": [
            {
                "name": "size",
                "type": "int",
                "required": true,
                "desc": "The length of the array to create"
            },
            {
                "name": "defaultValue",
                "type": "bool",
                "required": true,
                "desc": "The default value to initialise all the values in the array to"
            },
            {
                "name": "uniqueName",
                "type": "string",
                "required": true,
                "desc": "A unique name of the created array"
            }
        ],
        "desc": "Creates an array of type bool and returns its ID."
    },
    "xsArrayCreateString": {
        "name": "xsArrayCreateString",
        "return_type": "int",
        "params": [
            {
                "name": "size",
                "type": "int",
                "required": true,
                "desc": "The length of the array to create"
            },
            {
                "name": "defaultValue",
                "type": "string",
                "required": true,
                "desc": "The default value to initialise all the values in the array to"
            },
            {
                "name": "uniqueName",
                "type": "string",
                "required": true,
                "desc": "A unique name of the created array"
            }
        ],
        "desc": "Creates an array of type String and returns its ID."
    },
    "xsArrayCreateVector": {
        "name": "xsArrayCreateVector",
        "return_type": "int",
        "params": [
            {
                "name": "size",
                "type": "int",
                "required": true,
                "desc": "The length of the array to create"
            },
            {
                "name": "defaultValue",
                "type": "vector",
                "required": true,
                "desc": "The default value to initialise all the values in the array to"
            },
            {
                "name": "uniqueName",
                "type": "string",
                "required": true,
                "desc": "A unique name of the created array"
            }
        ],
        "desc": "Creates an array of type Vector and returns its ID."
    },
    "xsArraySetInt": {
        "name": "xsArraySetInt",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to set the value in"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to set the value of"
            },
            {
                "name": "value",
                "type": "int",
                "required": true,
                "desc": "The new value to set"
            }
        ],
        "desc": "Sets the valat the specified indedx ue of the given int arrindex to the provided value and returns 1."
    },
    "xsArraySetFloat": {
        "name": "xsArraySetFloat",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to set the value in"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to set the value of"
            },
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "The new value to set"
            }
        ],
        "desc": "Sets the valueat the specified indedx  of the given float array to the provided value and returns 1."
    },
    "xsArraySetBool": {
        "name": "xsArraySetBool",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to set the value in"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to set the value of"
            },
            {
                "name": "value",
                "type": "bool",
                "required": true,
                "desc": "The new value to set"
            }
        ],
        "desc": "Sets the valuat the specified indedx e of the given bool arrindex to the provided value and returns 1."
    },
    "xsArraySetString": {
        "name": "xsArraySetString",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to set the value in"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to set the value of"
            },
            {
                "name": "value",
                "type": "string",
                "required": true,
                "desc": "The new value to set"
            }
        ],
        "desc": "Sets the value at the specified indedx of the given String array to the provided value and returns 1."
    },
    "xsArraySetVector": {
        "name": "xsArraySetVector",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to set the value in"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to set the value of"
            },
            {
                "name": "value",
                "type": "vector",
                "required": true,
                "desc": "The new value to set"
            }
        ],
        "desc": "Sets the value at the specified indedx of the given Vector array to the provided value and returns 1."
    },
    "xsArrayGetInt": {
        "name": "xsArrayGetInt",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to get the value from"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to get the value of"
            }
        ],
        "desc": "Gets and returns the value of the given int array at the specifed index."
    },
    "xsArrayGetFloat": {
        "name": "xsArrayGetFloat",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to get the value from"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to get the value of"
            }
        ],
        "desc": "Gets and returns the value of the given float array at the specifed index."
    },
    "xsArrayGetBool": {
        "name": "xsArrayGetBool",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to get the value from"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to get the value of"
            }
        ],
        "desc": "Gets and returns the value of the given bool array at the specifed index."
    },
    "xsArrayGetString": {
        "name": "xsArrayGetString",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to get the value from"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to get the value of"
            }
        ],
        "desc": "Gets and returns the value of the given String array at the specifed index."
    },
    "xsArrayGetVector": {
        "name": "xsArrayGetVector",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to get the value from"
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "The index to get the value of"
            }
        ],
        "desc": "Gets and returns the value of the given Vector array at the specifed index."
    },
    "xsArrayResizeInt": {
        "name": "xsArrayResizeInt",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to resize"
            },
            {
                "name": "newSize",
                "type": "int",
                "required": true,
                "desc": "The new size of the array"
            }
        ],
        "desc": "Resizes the the given int array to the specifed size and returns 1."
    },
    "xsArrayResizeFloat": {
        "name": "xsArrayResizeFloat",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to resize"
            },
            {
                "name": "newSize",
                "type": "int",
                "required": true,
                "desc": "The new size of the array"
            }
        ],
        "desc": "Resizes the the given float array to the specifed size and returns 1."
    },
    "xsArrayResizeBool": {
        "name": "xsArrayResizeBool",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to resize"
            },
            {
                "name": "newSize",
                "type": "int",
                "required": true,
                "desc": "The new size of the array"
            }
        ],
        "desc": "Resizes the the given bool array to the specifed size and returns 1."
    },
    "xsArrayResizeString": {
        "name": "xsArrayResizeString",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to resize"
            },
            {
                "name": "newSize",
                "type": "int",
                "required": true,
                "desc": "The new size of the array"
            }
        ],
        "desc": "Resizes the the given String array to the specifed size and returns 1."
    },
    "xsArrayResizeVector": {
        "name": "xsArrayResizeVector",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to resize"
            },
            {
                "name": "newSize",
                "type": "int",
                "required": true,
                "desc": "The new size of the array"
            }
        ],
        "desc": "Resizes the the given Vector array to the specifed size and returns 1."
    },
    "xsArrayGetSize": {
        "name": "xsArrayGetSize",
        "return_type": "int",
        "params": [
            {
                "name": "arrayID",
                "type": "int",
                "required": true,
                "desc": "The ID of the array to get the length of"
            }
        ],
        "desc": "Returns the length of the given array."
    },
    "abs": {
        "name": "abs",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The number to find the absolute value of"
            }
        ],
        "desc": "Returns the absolute value (magnitude) of the given number."
    },
    "round": {
        "name": "round",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The number to round"
            }
        ],
        "desc": "Returns the given number rounded to the nearest integer."
    },
    "sqrt": {
        "name": "sqrt",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The number to find the square root of"
            }
        ],
        "desc": "Returns the square root of the given number."
    },
    "pow": {
        "name": "pow",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The base value"
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "The exponenet to raise the base value to"
            }
        ],
        "desc": "Returns x raised to the power y (x**y)."
    },
    "sin": {
        "name": "sin",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The angle (in radians) to find the sine of"
            }
        ],
        "desc": "Returns the sine of the angle in radians."
    },
    "cos": {
        "name": "cos",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The angle (in radians) to find the cosine of"
            }
        ],
        "desc": "Returns the cosine of the angle in radians"
    },
    "tan": {
        "name": "tan",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The angle (in radians) to find the tangent of"
            }
        ],
        "desc": "Returns the tangent of the angle in radians"
    },
    "asin": {
        "name": "asin",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The value to find the inverse sine of"
            }
        ],
        "desc": "Returns the inverse sine (arcsin) of the given value"
    },
    "acos": {
        "name": "acos",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The value to find the inverse cosine of"
            }
        ],
        "desc": "Returns the inverse cosine (arccos) of the given value"
    },
    "atan": {
        "name": "atan",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The value to find the inverse tangent of"
            }
        ],
        "desc": "Returns the inverse tangent (arctan) of the given value"
    },
    "atan2": {
        "name": "atan2",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "The X coordinate of the point to find the amplitude of"
            }
        ],
        "desc": "This is supposed to be the atan2(y, x) function but apparently it only takes one input. ThxDE"
    },
    "kbGetCivForPlayer": {
        "name": "kbGetCivForPlayer",
        "return_type": "int",
        "params": [
            {
                "name": "playerId",
                "type": "int",
                "required": true,
                "desc": "The player to get the civilization of"
            }
        ],
        "desc": "Returns the civilization ID of the given player."
    },
    "xsGetTime": {
        "name": "xsGetTime",
        "return_type": "int",
        "params": [],
        "desc": "Returns the current game time in milliseconds"
    },
    "xsGetContextPlayer": {
        "name": "xsGetContextPlayer",
        "return_type": "int",
        "params": [],
        "desc": "Returns the current context player ID."
    },
    "xsSetContextPlayer": {
        "name": "xsSetContextPlayer",
        "return_type": "void",
        "params": [
            {
                "name": "playerNumber",
                "type": "int",
                "required": true,
                "desc": "The player to set the context player to"
            }
        ],
        "desc": "In other functions involving a `playerNumber` argument, the value of the context player is used if `-1` is passed as `playerNumber` to them. `xsEffectAmount` will use the value of the context player as its player if `-2` is passed to it as the player argument."
    },
    "xsGetFunctionID": {
        "name": "xsGetFunctionID",
        "return_type": "int",
        "params": [
            {
                "name": "functionName",
                "type": "string",
                "required": true,
                "desc": "The name of the function to get the hash of"
            }
        ],
        "desc": "Returns the hash of a given function. This function has no practical application and is probably for internal usage only."
    },
    "xsAddRuntimeEvent": {
        "name": "xsAddRuntimeEvent",
        "return_type": "bool",
        "params": [
            {
                "name": "runtimeName",
                "type": "string",
                "required": true,
                "desc": "This is the name of the runtime to create the event in. This should be `\"Random Map\"` for RMS and `\"Scenario Triggers\"` for scenarios. Find which one to use in a general script by using the `xsGetMapName(true)` function and checking the extension."
            },
            {
                "name": "functionName",
                "type": "string",
                "required": true,
                "desc": "This is the name of a user defined function that takes a single integer argument"
            },
            {
                "name": "functionArgument",
                "type": "int",
                "required": true,
                "desc": "This is an integer argument that is passed to the function given to the argument `functionName` when this event runs."
            }
        ],
        "desc": "A runtime event is called after all the XS code has finished executing but before rules start executing. It calls the function `functionName` given to it with the `functionArgument` passed to it as a parameter. For programmers familiar with the terminology, this is basically a way to set a callback. It also returns true if the function name given to it exists, otherwise it returns false. Does not work with built-ins"
    },
    "map": {
        "name": "map",
        "return_type": "void",
        "params": [
            {
                "name": "eventString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "contextString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "commandString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "maps input event to command, in that context.  See input mapper design.doc for more details."
    },
    "echo": {
        "name": "echo",
        "return_type": "void",
        "params": [
            {
                "name": "stringMessage",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sends a message to the console output"
    },
    "echoLocalized": {
        "name": "echoLocalized",
        "return_type": "void",
        "params": [
            {
                "name": "stringID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the game status text from a string in the string resource."
    },
    "echoNum": {
        "name": "echoNum",
        "return_type": "void",
        "params": [
            {
                "name": "stringMessage",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sends a number to the console output"
    },
    "IMEEnable": {
        "name": "IMEEnable",
        "return_type": "void",
        "params": [
            {
                "name": "enable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "enables or disables IME"
    },
    "console": {
        "name": "console",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles the state of the console dialog"
    },
    "pause": {
        "name": "pause",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "checkForAllowPause",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "with no arg, toggles pause state on/off.  otherwise, sets pause state"
    },
    "pause2": {
        "name": "pause2",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "with no arg, toggles pause state on/off.  otherwise, sets pause state"
    },
    "unpauseNoChecks": {
        "name": "unpauseNoChecks",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "forces the game to unpause"
    },
    "exit": {
        "name": "exit",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "exits the game"
    },
    "screenshot": {
        "name": "screenshot",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "take a screen shot"
    },
    "hackscreenshot": {
        "name": "hackscreenshot",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "take a screen shot"
    },
    "res": {
        "name": "res",
        "return_type": "void",
        "params": [
            {
                "name": "integerXRes",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerYRes",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes screen resolution."
    },
    "resbpp": {
        "name": "resbpp",
        "return_type": "void",
        "params": [
            {
                "name": "integerXRes",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerYRes",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerBPP",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes screen resolution and bit depth."
    },
    "undo": {
        "name": "undo",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "undoes the last editing operation."
    },
    "redo": {
        "name": "redo",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Re-does the last undone operation."
    },
    "alignResources": {
        "name": "alignResources",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "realigns all resources in the world to tile boundaries"
    },
    "alignSelectedUnits": {
        "name": "alignSelectedUnits",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "realigns all selected units to tile boundaries"
    },
    "resourceMarket": {
        "name": "resourceMarket",
        "return_type": "void",
        "params": [
            {
                "name": "intPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stringResourceTo",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "floatAmount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stringResourceFrom",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sends out a market use command for the given player, resource and amount.  Negative means selling."
    },
    "unitData": {
        "name": "unitData",
        "return_type": "void",
        "params": [
            {
                "name": "intUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "spews database values on the specified unit or the selected unit (if no argument)."
    },
    "unitSetVariation": {
        "name": "unitSetVariation",
        "return_type": "void",
        "params": [
            {
                "name": "Variation",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "UnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the current variation of the given UnitID (current selected unit(s) if UnitID is -1)."
    },
    "unitIncVariation": {
        "name": "unitIncVariation",
        "return_type": "void",
        "params": [
            {
                "name": "UnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Increments the current variation of the given UnitID (current selected unit(s) if UnitID is -1)."
    },
    "unitDecVariation": {
        "name": "unitDecVariation",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Decrements the current variation of the given UnitID (current selected unit(s) if UnitID is -1)."
    },
    "unitSetStanceAggressive": {
        "name": "unitSetStanceAggressive",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit stance for all selected units to aggressive."
    },
    "unitSetStanceDefensive": {
        "name": "unitSetStanceDefensive",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit stance for all selected units to defensive."
    },
    "unitSetStancePassive": {
        "name": "unitSetStancePassive",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit stance for all selected units to passive."
    },
    "unitSetTactic": {
        "name": "unitSetTactic",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the tactic for this unit."
    },
    "unitToggleStealth": {
        "name": "unitToggleStealth",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles stealth mode for this unit."
    },
    "squadMode": {
        "name": "squadMode",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the mode for a squad."
    },
    "setSquadMode": {
        "name": "setSquadMode",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the mode for a squad."
    },
    "squadWheel": {
        "name": "squadWheel",
        "return_type": "void",
        "params": [
            {
                "name": "angle",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "squadID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Wheels the squad."
    },
    "unitTownBell": {
        "name": "unitTownBell",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Issues a town bell for the selected unit(s)."
    },
    "unitReturnToWork": {
        "name": "unitReturnToWork",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Issues a return to work for the selected unit(s)."
    },
    "obscuredUnitToggle": {
        "name": "obscuredUnitToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles between different ways obscured units are shown."
    },
    "configDump": {
        "name": "configDump",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sends to output a list of all current config vars"
    },
    "configSet": {
        "name": "configSet",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stringValue",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets a particular config var to a string value"
    },
    "configSetInt": {
        "name": "configSetInt",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerValue",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets a config var to an integer value"
    },
    "configSetFloat": {
        "name": "configSetFloat",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "floatValue",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets a config var to a floating point value"
    },
    "configDef": {
        "name": "configDef",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "defines a config variable"
    },
    "configUndef": {
        "name": "configUndef",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "un-defines a config variable"
    },
    "configToggle": {
        "name": "configToggle",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "defined var becomes undefined, and vice versa"
    },
    "config": {
        "name": "config",
        "return_type": "void",
        "params": [
            {
                "name": "stringToken",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes config state just like a .cfg line"
    },
    "configGetByID": {
        "name": "configGetByID",
        "return_type": "void",
        "params": [
            {
                "name": "intValue",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "look up config by enum ID"
    },
    "configHelp": {
        "name": "configHelp",
        "return_type": "void",
        "params": [
            {
                "name": "symbolFilter",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "show all formally defined config variables that contain the filter string, or use no parameters for a full list."
    },
    "configHelpPrefix": {
        "name": "configHelpPrefix",
        "return_type": "void",
        "params": [
            {
                "name": "symbolFilter",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "show all formally defined config variables that start with the filter string, or use no parameters for a full list."
    },
    "saveGame": {
        "name": "saveGame",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "saves out a game in progress."
    },
    "saveScenario": {
        "name": "saveScenario",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "saves out a scenario file."
    },
    "loadGame": {
        "name": "loadGame",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "loads in a saved game."
    },
    "loadScenario": {
        "name": "loadScenario",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "loads in a scenario file."
    },
    "loadTutorial": {
        "name": "loadTutorial",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "loadMode",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "loadImage",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "textID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "isAge3Scenario",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "loads in a tutorial scenario file."
    },
    "loadCampaignScenario": {
        "name": "loadCampaignScenario",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "loads in a campaign scenario file."
    },
    "loadRecentFile": {
        "name": "loadRecentFile",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "loads the file named, interpreting whether it is a scenario, savegame, etc. dynamically"
    },
    "saveCamera": {
        "name": "saveCamera",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save camera to file."
    },
    "saveCurrentHomeCityCamera": {
        "name": "saveCurrentHomeCityCamera",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save camera to file."
    },
    "saveCurrentHomeCityWidescreenCamera": {
        "name": "saveCurrentHomeCityWidescreenCamera",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save widescreen camera to file."
    },
    "loadCamera": {
        "name": "loadCamera",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "load camera from file."
    },
    "restart": {
        "name": "restart",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "re-launch current scenario."
    },
    "terrainFilter": {
        "name": "terrainFilter",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "filters the entire terrain."
    },
    "terrainFilterArea": {
        "name": "terrainFilterArea",
        "return_type": "void",
        "params": [
            {
                "name": "integerX1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerY1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerX2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerY2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "filters a sub-area of the terrain."
    },
    "terrainFlatten": {
        "name": "terrainFlatten",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "flattens the entire terrain."
    },
    "terrainFlattenArea": {
        "name": "terrainFlattenArea",
        "return_type": "void",
        "params": [
            {
                "name": "integerX1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerY1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerX2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerY2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "flattens a sub-area of the terrain."
    },
    "terrainSetType": {
        "name": "terrainSetType",
        "return_type": "void",
        "params": [
            {
                "name": "integerType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the terrain type to paint."
    },
    "terrainSetSubtype": {
        "name": "terrainSetSubtype",
        "return_type": "void",
        "params": [
            {
                "name": "integerType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the terrain subtype to paint."
    },
    "terrainSetMix": {
        "name": "terrainSetMix",
        "return_type": "void",
        "params": [
            {
                "name": "integerType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the terrain mix to paint."
    },
    "terrainPaint": {
        "name": "terrainPaint",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "paint whole terrain with given texture."
    },
    "terrainPaintMix": {
        "name": "terrainPaintMix",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "paint whole terrain with given mix."
    },
    "terrainAmbient": {
        "name": "terrainAmbient",
        "return_type": "void",
        "params": [
            {
                "name": "integerR",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerG",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerB",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set terrain ambient reflectivity to the given RGB (0-255)"
    },
    "terrainAdjustGlobalHeight": {
        "name": "terrainAdjustGlobalHeight",
        "return_type": "void",
        "params": [
            {
                "name": "meters",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adjusts (raise/lower) the terrain height by the specified meters."
    },
    "cameraRotate": {
        "name": "cameraRotate",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets whether camera limiting is on."
    },
    "cameraNice": {
        "name": "cameraNice",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "puts the camera in a reasonable orientation."
    },
    "cameraForward": {
        "name": "cameraForward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera forward key has gone up or down."
    },
    "cameraWorldForward": {
        "name": "cameraWorldForward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera world forward key has gone up or down."
    },
    "cameraWorldForwardLeft": {
        "name": "cameraWorldForwardLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera world forward & left key has gone up or down."
    },
    "cameraWorldForwardRight": {
        "name": "cameraWorldForwardRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera world forward & right key has gone up or down."
    },
    "cameraBackward": {
        "name": "cameraBackward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera backward key has gone up or down."
    },
    "cameraWorldBackward": {
        "name": "cameraWorldBackward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera world backward key has gone up or down."
    },
    "cameraWorldBackwardLeft": {
        "name": "cameraWorldBackwardLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera world backward & left key has gone up or down."
    },
    "cameraWorldBackwardRight": {
        "name": "cameraWorldBackwardRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera world backward & right key has gone up or down."
    },
    "cameraRight": {
        "name": "cameraRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera right key has gone up or down."
    },
    "cameraLeft": {
        "name": "cameraLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera left key has gone up or down."
    },
    "cameraUp": {
        "name": "cameraUp",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera up key has gone up or down."
    },
    "cameraDown": {
        "name": "cameraDown",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera down key has gone up or down."
    },
    "cameraPitchForward": {
        "name": "cameraPitchForward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera pitch forward key has gone up or down."
    },
    "cameraPitchBackward": {
        "name": "cameraPitchBackward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera pitch backward key has gone up or down."
    },
    "cameraRollLeft": {
        "name": "cameraRollLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera roll left key has gone up or down."
    },
    "cameraRollRight": {
        "name": "cameraRollRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera roll right key has gone up or down."
    },
    "cameraYawRight": {
        "name": "cameraYawRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera yaw right key has gone up or down."
    },
    "cameraYawLeft": {
        "name": "cameraYawLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera yaw left key has gone up or down."
    },
    "cameraLocalYawRight": {
        "name": "cameraLocalYawRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera 'Local Yaw right' key has gone up or down."
    },
    "cameraLocalYawLeft": {
        "name": "cameraLocalYawLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that camera 'Local Yaw left' key has gone up or down."
    },
    "cameraDump": {
        "name": "cameraDump",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "debug command to spew info about the current state of the game camera"
    },
    "trackLoad": {
        "name": "trackLoad",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "loads a camera track and makes it current"
    },
    "trackSave": {
        "name": "trackSave",
        "return_type": "void",
        "params": [
            {
                "name": "stringFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "saves the current camera track"
    },
    "trackClear": {
        "name": "trackClear",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "clears all tracks."
    },
    "trackStepForward": {
        "name": "trackStepForward",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "steps the current camera track 1 step forward."
    },
    "trackStepBackward": {
        "name": "trackStepBackward",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "steps the current camera track 1 step backward."
    },
    "trackToggleShow": {
        "name": "trackToggleShow",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles rendering of the camera track on and off."
    },
    "trackAddWaypoint": {
        "name": "trackAddWaypoint",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adds the camera's current position and orientation to the current camera track."
    },
    "trackEditWaypoint": {
        "name": "trackEditWaypoint",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "edits the currently selected camera track."
    },
    "trackSetSelectedWaypoint": {
        "name": "trackSetSelectedWaypoint",
        "return_type": "void",
        "params": [
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the current waypoint to the button with the same index."
    },
    "trackGotoSelectedWaypoint": {
        "name": "trackGotoSelectedWaypoint",
        "return_type": "void",
        "params": [
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to the current waypoint."
    },
    "trackRemoveWaypoint": {
        "name": "trackRemoveWaypoint",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "removes the most recently added track waypoint from the current camera track."
    },
    "trackInsert": {
        "name": "trackInsert",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adds a new camera track."
    },
    "trackRemove": {
        "name": "trackRemove",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "removes selected track."
    },
    "trackPlay": {
        "name": "trackPlay",
        "return_type": "void",
        "params": [
            {
                "name": "duration",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "plays a track file (otherwise if \"none\" than plays the current track.) with no arg uses current duration, otherwise sets duration"
    },
    "trackPause": {
        "name": "trackPause",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "pauses the current camera track."
    },
    "trackStop": {
        "name": "trackStop",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "stops the current camera track."
    },
    "trackAdvance": {
        "name": "trackAdvance",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "advances the camera track to a specific location."
    },
    "trackGotoSelectedEvent": {
        "name": "trackGotoSelectedEvent",
        "return_type": "void",
        "params": [
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to the current event."
    },
    "areaIncrementAreaToRender": {
        "name": "areaIncrementAreaToRender",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "increments the area to render."
    },
    "toggleShadows": {
        "name": "toggleShadows",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggle shadows on/off"
    },
    "setShadowQuality": {
        "name": "setShadowQuality",
        "return_type": "void",
        "params": [
            {
                "name": "qualityLevel",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set the quality level of shadows"
    },
    "setShadowBiasMul": {
        "name": "setShadowBiasMul",
        "return_type": "void",
        "params": [
            {
                "name": "biasMultiplier",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set the shadow buffer bias multipler (supaScreenshot only)"
    },
    "setShadowSnapping": {
        "name": "setShadowSnapping",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "controls shadow matrix snapping"
    },
    "setShadowRotationOp": {
        "name": "setShadowRotationOp",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "controls shadow projection rotation optimization"
    },
    "renderWindow": {
        "name": "renderWindow",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "with no arg, toggles window/fullscreen.  otherwise, sets mode to window(1)/fullscreen(0)"
    },
    "renderBaseID": {
        "name": "renderBaseID",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the render state of the given base (no integerState toggles)."
    },
    "renderAreas": {
        "name": "renderAreas",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the render state for all areas (no arg toggles)."
    },
    "renderAreaDangerLevels": {
        "name": "renderAreaDangerLevels",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "state",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "draws areas and color-codes them by danger level."
    },
    "renderAreaID": {
        "name": "renderAreaID",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the render state of the given area (no integerState toggles)."
    },
    "renderAreaGroupID": {
        "name": "renderAreaGroupID",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaGroupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the render state of the given area (no integerState toggles)."
    },
    "renderAnisotropic": {
        "name": "renderAnisotropic",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets desired anisotropy"
    },
    "setHDRMultisampleFactor": {
        "name": "setHDRMultisampleFactor",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets HDR multisample factor [1,8] - 1 is disabled"
    },
    "setSuperSampleFactors": {
        "name": "setSuperSampleFactors",
        "return_type": "void",
        "params": [
            {
                "name": "floatX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "floatY",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets HDR supersampling factors (1.0 to 2.0, both 1.0 is off)"
    },
    "setSuperSampleFilterScales": {
        "name": "setSuperSampleFilterScales",
        "return_type": "void",
        "params": [
            {
                "name": "floatX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "floatY",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets supersample kernel scales(1.0 = normal, less = blurrier, higher = sharper)"
    },
    "setSuperSampleFilterIndex": {
        "name": "setSuperSampleFilterIndex",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets supersample filter kernel"
    },
    "renderTrilinear": {
        "name": "renderTrilinear",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets trilinear filtering on/off"
    },
    "renderFriendOrFoe": {
        "name": "renderFriendOrFoe",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "with no arg, toggles friend or foe colors.  otherwise, sets it"
    },
    "ambientColor": {
        "name": "ambientColor",
        "return_type": "void",
        "params": [
            {
                "name": "integerR",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerG",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerB",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set ambient color to given RGB (0-255)"
    },
    "ambientGetColor": {
        "name": "ambientGetColor",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Get ambient color"
    },
    "resetAmbientColor": {
        "name": "resetAmbientColor",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "reset the sun color to full"
    },
    "ambientColor2": {
        "name": "ambientColor2",
        "return_type": "void",
        "params": [
            {
                "name": "integerR",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerG",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerB",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set ambient color 2 to given RGB (0-255)"
    },
    "shadowDarkness": {
        "name": "shadowDarkness",
        "return_type": "void",
        "params": [
            {
                "name": "integerDarkness",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pcfFilterScalar",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "biasNV",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "biasATI",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "slope",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set shadow darkness (0-255) - (PCF Filter Sclar 0-16)"
    },
    "sunColor": {
        "name": "sunColor",
        "return_type": "void",
        "params": [
            {
                "name": "integerR",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerG",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerB",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set sun color to given RGB (0-255)"
    },
    "sunGetColor": {
        "name": "sunGetColor",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Get sun color"
    },
    "resetSunColor": {
        "name": "resetSunColor",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "reset the sun color to full"
    },
    "fakeSunParams": {
        "name": "fakeSunParams",
        "return_type": "void",
        "params": [
            {
                "name": "intensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "specIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "specPower",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "inclination",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "rotation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set fake sun params for water"
    },
    "setHemiLight": {
        "name": "setHemiLight",
        "return_type": "void",
        "params": [
            {
                "name": "topColorR",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "topColorG",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "topColorB",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bottomColorR",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bottomColorG",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bottomColorB",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "axisYaw",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "axisPitch",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "intensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrainIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets a hemilight"
    },
    "setSceneLightParams": {
        "name": "setSceneLightParams",
        "return_type": "void",
        "params": [
            {
                "name": "sunIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "power",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "specIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "metalness",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fogColorR",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fogColorG",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fogColorB",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fogDensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fogStart",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets scene light params"
    },
    "setFogParams": {
        "name": "setFogParams",
        "return_type": "void",
        "params": [
            {
                "name": "planarfogColorR",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planarfogColorG",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planarfogColorB",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planarfogDensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planarfogHeight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set Planar Height Params"
    },
    "setBumpScale": {
        "name": "setBumpScale",
        "return_type": "void",
        "params": [
            {
                "name": "scale",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets scene bump scale"
    },
    "unitPlayerFakify": {
        "name": "unitPlayerFakify",
        "return_type": "void",
        "params": [
            {
                "name": "fakePlayerIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the selected units to use the fake player indicated."
    },
    "unitPlayerDefakify": {
        "name": "unitPlayerDefakify",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the selected units to stop using a fake player."
    },
    "setToneMapParams": {
        "name": "setToneMapParams",
        "return_type": "void",
        "params": [
            {
                "name": "exposure",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dispGamma",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "greyFStops",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "kneeLow",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "kneeHigh",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "ditherNoiseInten",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets tonemap params"
    },
    "setBloomParams": {
        "name": "setBloomParams",
        "return_type": "void",
        "params": [
            {
                "name": "bloomThreshold",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomColorR",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomColorG",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomColorB",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomPass",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomSigma",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets tonemap params"
    },
    "setLDRBloomParams": {
        "name": "setLDRBloomParams",
        "return_type": "void",
        "params": [
            {
                "name": "bloomColorR",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomColorG",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomColorB",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bloomSigma",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets LDR Bloom params"
    },
    "setBloomStreakParams": {
        "name": "setBloomStreakParams",
        "return_type": "void",
        "params": [
            {
                "name": "streakCount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Passes",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "ElementOffset",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Exposure",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Intensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Falloff",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "streakRed",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "streakGreen",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "streakBlue",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "threshold",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets bloom streak params"
    },
    "setBloomFeedbackParams": {
        "name": "setBloomFeedbackParams",
        "return_type": "void",
        "params": [
            {
                "name": "currentFrameContribution",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "lastFrameContribution",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets bloom feedback params"
    },
    "setTerrainLightingParams": {
        "name": "setTerrainLightingParams",
        "return_type": "void",
        "params": [
            {
                "name": "bumpScale",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "specularPower",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "specularIntensity",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrainMetalness",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets Terrain Lighting Params"
    },
    "applyLightingSet": {
        "name": "applyLightingSet",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Applies a Lighting set"
    },
    "saveLightingSet": {
        "name": "saveLightingSet",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Saves the current status of lighting values as a set"
    },
    "loadLightingSet": {
        "name": "loadLightingSet",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "apply",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "loads the specified lighting set"
    },
    "brushCircularSize": {
        "name": "brushCircularSize",
        "return_type": "void",
        "params": [
            {
                "name": "floatValue",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the circular brush size"
    },
    "musicStop": {
        "name": "musicStop",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "stop playing music"
    },
    "musicSetVolume": {
        "name": "musicSetVolume",
        "return_type": "void",
        "params": [
            {
                "name": "volume",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set the current music volume (0.0 - 1.0)"
    },
    "musicPlaySong": {
        "name": "musicPlaySong",
        "return_type": "void",
        "params": [
            {
                "name": "songname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fadetime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "play a sound as if it were a music track"
    },
    "musicToggleBattleMode": {
        "name": "musicToggleBattleMode",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles between battle mode and normal mode"
    },
    "displayType": {
        "name": "displayType",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "with no arg, cycles through the various status display modes.  otherwise sets display type"
    },
    "player": {
        "name": "player",
        "return_type": "void",
        "params": [
            {
                "name": "integerPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "with no arg, outputs current player.  otherwise, sets current player to given argument"
    },
    "fog": {
        "name": "fog",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles or sets LOS fog."
    },
    "blackmap": {
        "name": "blackmap",
        "return_type": "void",
        "params": [
            {
                "name": "integerState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles or sets unexplored black map rendering."
    },
    "modeEnter": {
        "name": "modeEnter",
        "return_type": "void",
        "params": [
            {
                "name": "stringMode",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "enters the named mode."
    },
    "startCampaign": {
        "name": "startCampaign",
        "return_type": "void",
        "params": [
            {
                "name": "campaignName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "starts the given campaign."
    },
    "uiEnterGameMenuModeIfNotResigned": {
        "name": "uiEnterGameMenuModeIfNotResigned",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Wrapper that enters GameMenu mode if the player isn't resigned."
    },
    "modeToggleBetweenIfNotMP": {
        "name": "modeToggleBetweenIfNotMP",
        "return_type": "void",
        "params": [
            {
                "name": "stringMode1",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stringMode2",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles between the two modes only if we're not in a BMultiplayer game."
    },
    "helpPrefix": {
        "name": "helpPrefix",
        "return_type": "void",
        "params": [
            {
                "name": "commandPrefix",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Lists all of the commands that start with the given prefix"
    },
    "help": {
        "name": "help",
        "return_type": "void",
        "params": [
            {
                "name": "commandSubstring",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Lists all of the commands that contain the given substring"
    },
    "helpText": {
        "name": "helpText",
        "return_type": "void",
        "params": [
            {
                "name": "helptextSubstring",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Lists all of the commands that contain the given substring in their help text."
    },
    "lookAt": {
        "name": "lookAt",
        "return_type": "void",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "looks at given x,z location on terrain."
    },
    "lookAtArmy": {
        "name": "lookAtArmy",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "armyName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "looks at given kb army."
    },
    "resetDefaultPlayerColors": {
        "name": "resetDefaultPlayerColors",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "reloads the player colors from the XML file"
    },
    "setMinimapUnitFilter": {
        "name": "setMinimapUnitFilter",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the minimap filter for units"
    },
    "setGraphicDetail": {
        "name": "setGraphicDetail",
        "return_type": "void",
        "params": [
            {
                "name": "detailLevel",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the graphic detail.  (0 = HIGH, 1 = MEDIUM, 2 = LOW)"
    },
    "setWorldDifficulty": {
        "name": "setWorldDifficulty",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the world difficulty level."
    },
    "startAutoPatcher": {
        "name": "startAutoPatcher",
        "return_type": "void",
        "params": [
            {
                "name": "manualMode",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Start the auto patcher."
    },
    "cancelAutoPatcher": {
        "name": "cancelAutoPatcher",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Cancel the auto patcher."
    },
    "confirmAutoPatcher": {
        "name": "confirmAutoPatcher",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Used to tell autpatcher user pressed OK on exit or error dialog."
    },
    "playMovie": {
        "name": "playMovie",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays movies from a playlist in the AVI directory"
    },
    "toggleHomeCityView": {
        "name": "toggleHomeCityView",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles home city view for the current player."
    },
    "toggleHomeCityViewTech": {
        "name": "toggleHomeCityViewTech",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles tech home city view for the current player."
    },
    "lookAtHomeCityBuilding": {
        "name": "lookAtHomeCityBuilding",
        "return_type": "void",
        "params": [
            {
                "name": "building",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "View the specific home city building."
    },
    "homeCityTrain": {
        "name": "homeCityTrain",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "puid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Trains the given PUID from the given home city building."
    },
    "homeCityTrain2": {
        "name": "homeCityTrain2",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sends the given HC card in the home city."
    },
    "homeCityTransport": {
        "name": "homeCityTransport",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Transports units from the home city."
    },
    "fourOfAKind": {
        "name": "fourOfAKind",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "starts the four of a kind victory if valid."
    },
    "relicCapture": {
        "name": "relicCapture",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "starts the Relic Capture victory if valid."
    },
    "kothVictory": {
        "name": "kothVictory",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "starts the King of the Hill victory if valid."
    },
    "tradeRouteCommand": {
        "name": "tradeRouteCommand",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "tradeRoutUnit",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "commandID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the given command to the trade post bucket."
    },
    "tradeRouteTrain": {
        "name": "tradeRouteTrain",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "tradeRoutUnit",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "puid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Trains the given PUID from the given trade post on the trade route."
    },
    "commandResearch": {
        "name": "commandResearch",
        "return_type": "void",
        "params": [
            {
                "name": "commandID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Researches the given command from the given unit."
    },
    "mercTrain": {
        "name": "mercTrain",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "puid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Trains the given merc from the given home city building."
    },
    "homeCityShipEject": {
        "name": "homeCityShipEject",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "puid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Cancels the given unit out of the ship."
    },
    "loadGrouping": {
        "name": "loadGrouping",
        "return_type": "void",
        "params": [
            {
                "name": "groupingName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Loads a grouping.  No parameter pops up dialog."
    },
    "loadUserDefinedGrouping": {
        "name": "loadUserDefinedGrouping",
        "return_type": "void",
        "params": [
            {
                "name": "groupingName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Loads a grouping from the user writable grouping directory."
    },
    "loadGroupingUnicode": {
        "name": "loadGroupingUnicode",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For UI use only."
    },
    "loadGroupingUnicodeLUA": {
        "name": "loadGroupingUnicodeLUA",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For UI use only."
    },
    "repairUnit": {
        "name": "repairUnit",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Starts the auto repair on the specified unit."
    },
    "cancelRepairUnit": {
        "name": "cancelRepairUnit",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Cancels the auto repair on the specified unit."
    },
    "setHomeCityGatherUnit": {
        "name": "setHomeCityGatherUnit",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the home city gather point to the specified unit."
    },
    "convertCoveredWagon": {
        "name": "convertCoveredWagon",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Convert a covered wagon into a Town Center"
    },
    "breakTreaty": {
        "name": "breakTreaty",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "break your treaties"
    },
    "ransomExplorer": {
        "name": "ransomExplorer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "ransoms your explorer"
    },
    "toggleWorldTooltipClipRect": {
        "name": "toggleWorldTooltipClipRect",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles whether or not world tooltips are using the restricted screen rectangle."
    },
    "drawWorldTooltipClipRect": {
        "name": "drawWorldTooltipClipRect",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles whether or not to draw the world tooltip restricted screen rectangle."
    },
    "setWorldTooltipRectDims1024": {
        "name": "setWorldTooltipRectDims1024",
        "return_type": "void",
        "params": [
            {
                "name": "minX",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minY",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxX",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxY",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the world tooltip restricted screen rectangle to the given dimensions relative to 1024x768 resolution."
    },
    "upgradeTradeRoute": {
        "name": "upgradeTradeRoute",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "UI use - upgrade the trade route associated with this unit."
    },
    "spawnUnits": {
        "name": "spawnUnits",
        "return_type": "void",
        "params": [
            {
                "name": "protoname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Spawn Units from the UnitID building."
    },
    "ability": {
        "name": "ability",
        "return_type": "void",
        "params": [
            {
                "name": "abilityId",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "doWhenNotSelected",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Explorer Abilities use."
    },
    "doAbilityInType": {
        "name": "doAbilityInType",
        "return_type": "void",
        "params": [
            {
                "name": "protoPowerName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "use ability in proto unit type if the player has one"
    },
    "doAbilityInSelected": {
        "name": "doAbilityInSelected",
        "return_type": "void",
        "params": [
            {
                "name": "protoPowerName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "use ability in current unit selection."
    },
    "doCommandInSelected": {
        "name": "doCommandInSelected",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "use command in current unit selection."
    },
    "specialPower": {
        "name": "specialPower",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "powerEntryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "powerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Special power use."
    },
    "vsync": {
        "name": "vsync",
        "return_type": "void",
        "params": [
            {
                "name": "state",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set vertical syncing (-1 toggles, 0 is off, 1 is on)."
    },
    "startMoviePlayback": {
        "name": "startMoviePlayback",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "sizing",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fadeIn",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fadeOut",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Start fullscreen playback of a movie."
    },
    "trainReinforcement": {
        "name": "trainReinforcement",
        "return_type": "void",
        "params": [
            {
                "name": "armyID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Trains a reinforcement."
    },
    "cancelTrainReinforcement": {
        "name": "cancelTrainReinforcement",
        "return_type": "void",
        "params": [
            {
                "name": "armyID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Cancel training of a reinforcement."
    },
    "setDropDefaultMips": {
        "name": "setDropDefaultMips",
        "return_type": "void",
        "params": [
            {
                "name": "num",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set mip levels to skip for default category textures."
    },
    "setDropTerrainMips": {
        "name": "setDropTerrainMips",
        "return_type": "void",
        "params": [
            {
                "name": "num",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set mip levels to skip for terrain category textures."
    },
    "showSPCNote": {
        "name": "showSPCNote",
        "return_type": "void",
        "params": [
            {
                "name": "title",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "text",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Display's the SPC Note Dialog with the specified title and text."
    },
    "renderForceReset": {
        "name": "renderForceReset",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "forces the renderer to reset."
    },
    "editorSetTechStatus": {
        "name": "editorSetTechStatus",
        "return_type": "void",
        "params": [
            {
                "name": "techToActivate",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Editor only function that activates/deactivates a given tech"
    },
    "editorUpdateUnitVisuals": {
        "name": "editorUpdateUnitVisuals",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Editor only functions. goes thru all the units and updates thier visuals."
    },
    "editorSetAllTradeRoutesToDef": {
        "name": "editorSetAllTradeRoutesToDef",
        "return_type": "void",
        "params": [
            {
                "name": "newDefName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Editor use - sets all trade route definitons to the spedified definition."
    },
    "researchByID": {
        "name": "researchByID",
        "return_type": "void",
        "params": [
            {
                "name": "TechID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "ResearchingUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Start the research of TechID from ResearchingUnitID for the current player (if no player is specified)"
    },
    "researchTechInSelected": {
        "name": "researchTechInSelected",
        "return_type": "void",
        "params": [
            {
                "name": "techName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "research a tech in current unit selection."
    },
    "trainByID": {
        "name": "trainByID",
        "return_type": "void",
        "params": [
            {
                "name": "ProtoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "TrainingUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Start the training of a unit of ProtoUnitID from TrainingUnitID for the current player (if no player is specified)"
    },
    "trainInSelected": {
        "name": "trainInSelected",
        "return_type": "void",
        "params": [
            {
                "name": "stringProtoName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "traincount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "tries to train the selected unit type in any valid selected unit"
    },
    "cancelTrainInSelected": {
        "name": "cancelTrainInSelected",
        "return_type": "void",
        "params": [
            {
                "name": "ProtoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "All",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "cancel training of a unit type in any valid selected unit"
    },
    "cancelResearchInSelected": {
        "name": "cancelResearchInSelected",
        "return_type": "void",
        "params": [
            {
                "name": "TechID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "cancel researching of a tech in any valid selected unit"
    },
    "trainInSelectedByID": {
        "name": "trainInSelectedByID",
        "return_type": "void",
        "params": [
            {
                "name": "protoID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "traincount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "just like train in selected, but fastAr because it takes a protoID"
    },
    "click": {
        "name": "click",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "plays the default UI click sound."
    },
    "homeCityResearch": {
        "name": "homeCityResearch",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Researches the given home city tech."
    },
    "homeCityResearchByID": {
        "name": "homeCityResearchByID",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techName",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Researches the given home city tech."
    },
    "homeCityMakeActiveByID": {
        "name": "homeCityMakeActiveByID",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techName",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Activates the given home city tech."
    },
    "homeCityResearchByIDOutsideGame": {
        "name": "homeCityResearchByIDOutsideGame",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techName",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Researches the given home city tech when a game is not active."
    },
    "homeCityResearchByIDPregame": {
        "name": "homeCityResearchByIDPregame",
        "return_type": "void",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Researches the given home city tech when you are *really* completely out side of the game."
    },
    "editMode": {
        "name": "editMode",
        "return_type": "void",
        "params": [
            {
                "name": "symbolModeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the edit mode"
    },
    "uiBuildAtPointer": {
        "name": "uiBuildAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "instructs the currently selected unit(s) to build the current proto unit cursor building type at the pointer location."
    },
    "uiFormationOrientation": {
        "name": "uiFormationOrientation",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the orientation of a formation."
    },
    "uiBuildWallAtPointer": {
        "name": "uiBuildWallAtPointer",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "instructs the currently selected unit(s) to build the current proto unit cursor building type at the pointer location, with wall-like endpoint behavior."
    },
    "uiWheelRotateRiverShallow": {
        "name": "uiWheelRotateRiverShallow",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Rotate river shallow with wheel -- i.e. intended to be mapped to wheel"
    },
    "uiSetGatherPointAtPointer": {
        "name": "uiSetGatherPointAtPointer",
        "return_type": "void",
        "params": [
            {
                "name": "homeCity",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "water",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the gather points for the selected unit(s) to the pointer position."
    },
    "uiSetHomeCityWaterSpawnPointAtPointer": {
        "name": "uiSetHomeCityWaterSpawnPointAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the HC spawn point."
    },
    "uiClearGatherPoint": {
        "name": "uiClearGatherPoint",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Clears the gather point for the selected unit(s), returning it to a default state."
    },
    "uiTransformSelectedUnit": {
        "name": "uiTransformSelectedUnit",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "transforms the selected unit into the specified proto unit."
    },
    "uiFlareAtPointer": {
        "name": "uiFlareAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sends out a flare at the pointer position."
    },
    "uiCommsFlareAtPointer": {
        "name": "uiCommsFlareAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Used when flaring a position for player comms dialog."
    },
    "uiHelpAtPointer": {
        "name": "uiHelpAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sends out a Help at the pointer position."
    },
    "uiGarrisonToPointer": {
        "name": "uiGarrisonToPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Commands the selected unit(s) to garrison in a building at the pointer position."
    },
    "uiRepairAtPointer": {
        "name": "uiRepairAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Commands the selected unit(s) to repair the target building at the pointer position."
    },
    "uiEmpowerAtPointer": {
        "name": "uiEmpowerAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Commands the selected unit(s) to Empower the target building at the pointer position."
    },
    "uiSetProtoCursor": {
        "name": "uiSetProtoCursor",
        "return_type": "void",
        "params": [
            {
                "name": "stringProtoName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "setPlacement",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the cursor to a proto-unit."
    },
    "uiSetProtoCursorID": {
        "name": "uiSetProtoCursorID",
        "return_type": "void",
        "params": [
            {
                "name": "integerProtoID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the cursor to a proto-unit."
    },
    "uiEnterContext": {
        "name": "uiEnterContext",
        "return_type": "void",
        "params": [
            {
                "name": "stringContext",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "enters the specified UI context."
    },
    "uiLeaveContext": {
        "name": "uiLeaveContext",
        "return_type": "void",
        "params": [
            {
                "name": "stringContext",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "leaves the specified UI context."
    },
    "uiClearCursor": {
        "name": "uiClearCursor",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "resets the cursor to the basic pointer."
    },
    "uiYawUnitRight": {
        "name": "uiYawUnitRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the yaw unit right key has gone up/down."
    },
    "uiYawUnitLeft": {
        "name": "uiYawUnitLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the yaw unit left key has gone up/down."
    },
    "uiPitchUnitUp": {
        "name": "uiPitchUnitUp",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the pitch unit up key has gone up/down."
    },
    "uiPitchUnitDown": {
        "name": "uiPitchUnitDown",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the pitch unit down key has gone up/down."
    },
    "uiRollUnitRight": {
        "name": "uiRollUnitRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the roll unit right key has gone up/down."
    },
    "uiRollUnitLeft": {
        "name": "uiRollUnitLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the roll unit left key has gone up/down."
    },
    "uiMoveUnitForward": {
        "name": "uiMoveUnitForward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the move unit forward key has gone up/down."
    },
    "uiMoveUnitBackward": {
        "name": "uiMoveUnitBackward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the move unit backward key has gone up/down."
    },
    "uiMoveUnitRight": {
        "name": "uiMoveUnitRight",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the move unit right key has gone up/down."
    },
    "uiMoveUnitLeft": {
        "name": "uiMoveUnitLeft",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the move unit left key has gone up/down."
    },
    "uiMoveUnitUp": {
        "name": "uiMoveUnitUp",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the move unit up key has gone up/down."
    },
    "uiMoveUnitDown": {
        "name": "uiMoveUnitDown",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the move unit down key has gone up/down."
    },
    "uiWheelRotatePlacedUnit": {
        "name": "uiWheelRotatePlacedUnit",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Rotate placed unit with wheel -- i.e. intended to be mapped to wheel"
    },
    "uiSelectWaterAtPointer": {
        "name": "uiSelectWaterAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Selects water at pointer location."
    },
    "uiUnSelectWater": {
        "name": "uiUnSelectWater",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Unselects currently selected water."
    },
    "uiPaintWaterObjects": {
        "name": "uiPaintWaterObjects",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Paint objects on the currently selected water."
    },
    "uiRotateWaterLeft": {
        "name": "uiRotateWaterLeft",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the rotate water left button has gone up/down."
    },
    "uiRotateWaterRight": {
        "name": "uiRotateWaterRight",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the rotate water right button has gone up/down."
    },
    "uiSelectionButtonDown": {
        "name": "uiSelectionButtonDown",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that selection button has been pressed."
    },
    "uiSelectionButtonUp": {
        "name": "uiSelectionButtonUp",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that selection button has been released."
    },
    "uiCreateNumberGroup": {
        "name": "uiCreateNumberGroup",
        "return_type": "void",
        "params": [
            {
                "name": "integerGroup",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "creates a number group with the currently selected units."
    },
    "uiClearNumberGroup": {
        "name": "uiClearNumberGroup",
        "return_type": "void",
        "params": [
            {
                "name": "integerGroup",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "erases the given number group."
    },
    "uiSelectNumberGroup": {
        "name": "uiSelectNumberGroup",
        "return_type": "void",
        "params": [
            {
                "name": "integerGroup",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "selects the units in the given number group."
    },
    "uiAddSelectNumberGroup": {
        "name": "uiAddSelectNumberGroup",
        "return_type": "void",
        "params": [
            {
                "name": "integerGroup",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adds the units in the given number group to current selection."
    },
    "uiRemoveFromAnyNumberGroup": {
        "name": "uiRemoveFromAnyNumberGroup",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "removes current selection from any army."
    },
    "uiDoubleClickSelect": {
        "name": "uiDoubleClickSelect",
        "return_type": "void",
        "params": [
            {
                "name": "integerAdd",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "checkAction",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Double click select at pointer location."
    },
    "uiAddSelectionButtonDown": {
        "name": "uiAddSelectionButtonDown",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the add selection button has been pressed."
    },
    "uiAddSelectionButtonUp": {
        "name": "uiAddSelectionButtonUp",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the add selection button has been released."
    },
    "uiToggleSelectionButton": {
        "name": "uiToggleSelectionButton",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  "
    },
    "uiRotateSelection": {
        "name": "uiRotateSelection",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  rotates the selected UNIT."
    },
    "uiMoveSelectionButtonDown": {
        "name": "uiMoveSelectionButtonDown",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that selection button has been pressed."
    },
    "uiMoveSelectionButtonUp": {
        "name": "uiMoveSelectionButtonUp",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that selection button has been released."
    },
    "uiMoveSelectionAddButtonDown": {
        "name": "uiMoveSelectionAddButtonDown",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that selection button has been pressed."
    },
    "uiMoveSelectionAddButtonUp": {
        "name": "uiMoveSelectionAddButtonUp",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that selection button has been released."
    },
    "uiWorkAtPointer": {
        "name": "uiWorkAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Issues \"work\" at pointer location."
    },
    "uiWheelRotate": {
        "name": "uiWheelRotate",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Rotate with wheel -- i.e. intended to be mapped to wheel"
    },
    "uiWheelRotateCamera": {
        "name": "uiWheelRotateCamera",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Rotate with wheel -- i.e. intended to be mapped to wheel"
    },
    "uiChangeElevationToSample": {
        "name": "uiChangeElevationToSample",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the change elevation to sample button has gone up/down."
    },
    "uiSampleElevationAtPointer": {
        "name": "uiSampleElevationAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Samples elevation height at pointer."
    },
    "uiSampleCliffElevationAtPointer": {
        "name": "uiSampleCliffElevationAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Samples Cliff elevation height at pointer."
    },
    "uiPaintTerrainToSample": {
        "name": "uiPaintTerrainToSample",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the sample terrain button has gone up/down."
    },
    "uiSampleTerrainAtPointer": {
        "name": "uiSampleTerrainAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Samples terrain type at pointer."
    },
    "uiDeleteSelectedUnit": {
        "name": "uiDeleteSelectedUnit",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "deletes selected unit."
    },
    "uiDeleteSelectedUnit2": {
        "name": "uiDeleteSelectedUnit2",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "deletes selected unit."
    },
    "uiDeleteAllSelectedUnits": {
        "name": "uiDeleteAllSelectedUnits",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "deletes all selected unit."
    },
    "uiRemoveSelectedUnit": {
        "name": "uiRemoveSelectedUnit",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes specified unit, or selected unit if not ID is specified."
    },
    "uiStopSelectedUnits": {
        "name": "uiStopSelectedUnits",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "stop selected units."
    },
    "uiRaiseElevation": {
        "name": "uiRaiseElevation",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the raise elevation button has gone up/down."
    },
    "uiLowerElevation": {
        "name": "uiLowerElevation",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the lower elevation button has gone up/down."
    },
    "uiUniformRaiseElevation": {
        "name": "uiUniformRaiseElevation",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "raises the terrain height uniformly in the brush region"
    },
    "uiUniformLowerElevation": {
        "name": "uiUniformLowerElevation",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "lowers the terrain height uniformly in the brush region"
    },
    "uiSmooth": {
        "name": "uiSmooth",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the smooth button has gone up/down."
    },
    "uiPaintWater": {
        "name": "uiPaintWater",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the paint water button has gone up/down."
    },
    "uiPaintWaterArea": {
        "name": "uiPaintWaterArea",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only. Painting water area."
    },
    "uiPaintCliff": {
        "name": "uiPaintCliff",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the paint cliff button has gone up/down."
    },
    "uiTerrainSelection": {
        "name": "uiTerrainSelection",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the terrain selection button has gone up/down."
    },
    "uiRaiseTerrainSelection": {
        "name": "uiRaiseTerrainSelection",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the raise terrain selection button has gone up/down."
    },
    "uiLowerTerrainSelection": {
        "name": "uiLowerTerrainSelection",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the lower terrain selection button has gone up/down."
    },
    "uiFlattenTerrainSelection": {
        "name": "uiFlattenTerrainSelection",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "flatten the current terrain selection."
    },
    "uiFilterTerrainSelection": {
        "name": "uiFilterTerrainSelection",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "filter the current terrain selection."
    },
    "uiOpenScenarioBrowser": {
        "name": "uiOpenScenarioBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "open a scenario from the scenario directory"
    },
    "uiSaveScenarioBrowser": {
        "name": "uiSaveScenarioBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save a scenario to the scenario directory"
    },
    "uiSaveAsScenarioBrowser": {
        "name": "uiSaveAsScenarioBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save a scenario to the scenario directory"
    },
    "uiOpenGrandConquestBrowser": {
        "name": "uiOpenGrandConquestBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "opens a Grand Conquest saved game"
    },
    "uiScenarioLoad": {
        "name": "uiScenarioLoad",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "load a scenario, checking dirty bit on world."
    },
    "uiStartScenarioTest": {
        "name": "uiStartScenarioTest",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "test a scenario."
    },
    "uiStopScenarioTest": {
        "name": "uiStopScenarioTest",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "test a scenario."
    },
    "uiStartBuildCinematic": {
        "name": "uiStartBuildCinematic",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "test a scenario."
    },
    "uiStopBuildCinematic": {
        "name": "uiStopBuildCinematic",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "test a scenario."
    },
    "uiClearCinematicInfo": {
        "name": "uiClearCinematicInfo",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "clears cinematic trigger info."
    },
    "uiClearAllCinematicInfo": {
        "name": "uiClearAllCinematicInfo",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "clears all cinematic info including model/texture precache info."
    },
    "uiOpenCameraTrackBrowser": {
        "name": "uiOpenCameraTrackBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "open a camera track from the data directory"
    },
    "uiSaveCameraTrackBrowser": {
        "name": "uiSaveCameraTrackBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save a camera track to the data directory"
    },
    "uiOpenSavedGameBrowser": {
        "name": "uiOpenSavedGameBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "open a game from the saved game directory"
    },
    "uiSaveSavedGameBrowser": {
        "name": "uiSaveSavedGameBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save a game to the saved game directory"
    },
    "uiZoomToProto": {
        "name": "uiZoomToProto",
        "return_type": "void",
        "params": [
            {
                "name": "stringProto",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "zooms to the first instance of proto unit X owned by the current player."
    },
    "uiOpenRecordGameBrowser": {
        "name": "uiOpenRecordGameBrowser",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "open a record game from the saved game directory"
    },
    "uiLookAtSelection": {
        "name": "uiLookAtSelection",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to see the first selected unit."
    },
    "uiLookAtUnit": {
        "name": "uiLookAtUnit",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to see the specified Unit."
    },
    "uiLookAtBattle": {
        "name": "uiLookAtBattle",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to see the specified battle."
    },
    "uiLookAtAndSelectUnit": {
        "name": "uiLookAtAndSelectUnit",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to see the specified unit and selects it."
    },
    "uiLookAtUnitByName": {
        "name": "uiLookAtUnitByName",
        "return_type": "void",
        "params": [
            {
                "name": "scenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to see the specified Unit."
    },
    "uiLookAtProto": {
        "name": "uiLookAtProto",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to see the first instance of proto unit X owned by the current player."
    },
    "uiLookAtNumberGroup": {
        "name": "uiLookAtNumberGroup",
        "return_type": "void",
        "params": [
            {
                "name": "integerGroup",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves the camera to see the given number group."
    },
    "uiRoughen": {
        "name": "uiRoughen",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the roughen button has gone up/down."
    },
    "uiDeleteUnits": {
        "name": "uiDeleteUnits",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the delete units button has gone up/down."
    },
    "uiPaint": {
        "name": "uiPaint",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the paint button has gone up/down."
    },
    "uiPaintForest": {
        "name": "uiPaintForest",
        "return_type": "void",
        "params": [
            {
                "name": "paint",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "offset",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the paint button has gone up/down."
    },
    "uiPaintTerrainOverlay": {
        "name": "uiPaintTerrainOverlay",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the paint terrain overlay button has gone up/down."
    },
    "uiPlaceAtPointer": {
        "name": "uiPlaceAtPointer",
        "return_type": "void",
        "params": [
            {
                "name": "boolChangeVariation",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Places unit at pointer location."
    },
    "uiSetProtoID": {
        "name": "uiSetProtoID",
        "return_type": "void",
        "params": [
            {
                "name": "integerType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the proto ID to place."
    },
    "uiIncPlaceVariation": {
        "name": "uiIncPlaceVariation",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "increments the variation to place."
    },
    "uiBuildMode": {
        "name": "uiBuildMode",
        "return_type": "void",
        "params": [
            {
                "name": "integerType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does and editMode and setProtoID, after verifying sufficient resources for the current player."
    },
    "uiFindIdleType": {
        "name": "uiFindIdleType",
        "return_type": "void",
        "params": [
            {
                "name": "typeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds the next idle unit of the given type in the arbitrary order of unit ID, so that it can be called repeatedly to cycle."
    },
    "uiFindAllOfSelectedType": {
        "name": "uiFindAllOfSelectedType",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds all units of the same type as the selected unit"
    },
    "uiFindAllOfType": {
        "name": "uiFindAllOfType",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds all units of the same type"
    },
    "uiFindAllOfTypeIdle": {
        "name": "uiFindAllOfTypeIdle",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds all idle units of the same type"
    },
    "uiHandleIdleBanner": {
        "name": "uiHandleIdleBanner",
        "return_type": "void",
        "params": [
            {
                "name": "typeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does the right thing."
    },
    "uiFindTownBellTC": {
        "name": "uiFindTownBellTC",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds the next town center that has the town bell active, so that it can be called repeatedly to cycle."
    },
    "uiFindType": {
        "name": "uiFindType",
        "return_type": "void",
        "params": [
            {
                "name": "typeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds the next unit (idle or not) of the given type in the arbitrary order of unit ID, so that it can be called repeatedly to cycle."
    },
    "uiCycleGadget": {
        "name": "uiCycleGadget",
        "return_type": "void",
        "params": [
            {
                "name": "integerDelta",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "cycles through the 'active' child gadget of a deluxe gadget."
    },
    "uiCloseFieldSet": {
        "name": "uiCloseFieldSet",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "closes (as if clicked on the close button) any active field set"
    },
    "uiCloseDialog": {
        "name": "uiCloseDialog",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "closes (as if clicked on the close button) any active dialog"
    },
    "uiMessageBox": {
        "name": "uiMessageBox",
        "return_type": "void",
        "params": [
            {
                "name": "stringText",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stringCommand",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "pops up a message box with text that activated the cmd when the ok button is hit"
    },
    "uiMessageBox2": {
        "name": "uiMessageBox2",
        "return_type": "void",
        "params": [
            {
                "name": "stringID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stringCommand",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "pops up a message box with text that activated the cmd when the ok button is hit"
    },
    "uiCopyToClipboard": {
        "name": "uiCopyToClipboard",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "copies the brush selection to the clipboard."
    },
    "uiPasteFromClipboard": {
        "name": "uiPasteFromClipboard",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "pastes the contents of the clipboard to the brush selection."
    },
    "uiSetClipboardRotation": {
        "name": "uiSetClipboardRotation",
        "return_type": "void",
        "params": [
            {
                "name": "degrees",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the clipboard rotation amount."
    },
    "uiRotateClipboard": {
        "name": "uiRotateClipboard",
        "return_type": "void",
        "params": [
            {
                "name": "degrees",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "rotate the clipboard by amount."
    },
    "uiEjectGarrisonedUnits": {
        "name": "uiEjectGarrisonedUnits",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for UI use only.  Sends an ejection command for the selected unit."
    },
    "uiEjectAtPointer": {
        "name": "uiEjectAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for UI use only.  Sends an ejection command with waypoint for the selected unit."
    },
    "uiPatrolAtPointer": {
        "name": "uiPatrolAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for UI use only.  Sends an patrol order."
    },
    "uiApplyLightingSet": {
        "name": "uiApplyLightingSet",
        "return_type": "void",
        "params": [
            {
                "name": "integerIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for UI use only.  Applies a Lighting Set"
    },
    "uiSetBrushType": {
        "name": "uiSetBrushType",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "p1",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "p2",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "p3",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "p4",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "makes the current brush based on the name and parameters."
    },
    "uiChangeBrushType": {
        "name": "uiChangeBrushType",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the brush to the named type"
    },
    "uiChangeBrushSize": {
        "name": "uiChangeBrushSize",
        "return_type": "void",
        "params": [
            {
                "name": "p1",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "p2",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "p3",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "p4",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the size of the current brush"
    },
    "uiScrollBrushSize": {
        "name": "uiScrollBrushSize",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only. Increament the size of the current brush up/down"
    },
    "uiChangeBrushCornerMode": {
        "name": "uiChangeBrushCornerMode",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the ability to modify corner tiles: 0-All, 1-Corners only, 2-No corners"
    },
    "uiChangeCliffModMode": {
        "name": "uiChangeCliffModMode",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the ability to modify vertices on cliff edges: 0-No clamping, 1-Clamp Low Edge, 2-Clamp High Edge, 3 - Clamp All Edges"
    },
    "uiScrollCliffHeight": {
        "name": "uiScrollCliffHeight",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only. Increment the height of the cliff brush up/down"
    },
    "uiIgnoreNextKey": {
        "name": "uiIgnoreNextKey",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "used when activating a text box with a key to avoid having that key go into the text box too."
    },
    "uiCycleCurrentActivate": {
        "name": "uiCycleCurrentActivate",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "acts like the current cycle gadget has been pressed"
    },
    "uiClearMenu": {
        "name": "uiClearMenu",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "removes any dangling child menus off of the given gadget"
    },
    "uiClearSelection": {
        "name": "uiClearSelection",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "deselects all selected units"
    },
    "uiDumpKeyMappings": {
        "name": "uiDumpKeyMappings",
        "return_type": "void",
        "params": [
            {
                "name": "stringContext",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "spews all key mappings out to the console."
    },
    "uiDumpAllUnitHotKeyMappings": {
        "name": "uiDumpAllUnitHotKeyMappings",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "spews all hot key mappings that create units to the console"
    },
    "uiDumpUnmappedKeys": {
        "name": "uiDumpUnmappedKeys",
        "return_type": "void",
        "params": [
            {
                "name": "stringContext",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "spews all empty keys out to the console"
    },
    "uiFindKeyMapping": {
        "name": "uiFindKeyMapping",
        "return_type": "void",
        "params": [
            {
                "name": "stringKeyname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds all key mappings for a given key"
    },
    "uiHandleUserTab": {
        "name": "uiHandleUserTab",
        "return_type": "void",
        "params": [
            {
                "name": "listSel",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "parent",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "handles toggle of user textures"
    },
    "uiCoverTerrainWithWater": {
        "name": "uiCoverTerrainWithWater",
        "return_type": "void",
        "params": [
            {
                "name": "floatWaterHeight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "floatDepth",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waterName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "flattens terrain and paints water over the entire map."
    },
    "uiSetCliffType": {
        "name": "uiSetCliffType",
        "return_type": "bool",
        "params": [
            {
                "name": "stringCliffName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the cliff type by name."
    },
    "uiSetCliffTypeNum": {
        "name": "uiSetCliffTypeNum",
        "return_type": "bool",
        "params": [
            {
                "name": "longCliffType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the cliff type by index."
    },
    "uiSetWaterType": {
        "name": "uiSetWaterType",
        "return_type": "bool",
        "params": [
            {
                "name": "stringWaterName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the water type by name."
    },
    "uiSetWaterTypeNum": {
        "name": "uiSetWaterTypeNum",
        "return_type": "bool",
        "params": [
            {
                "name": "longWaterType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the water type by index."
    },
    "uiSetForestType": {
        "name": "uiSetForestType",
        "return_type": "bool",
        "params": [
            {
                "name": "stringForestName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the forest type by name."
    },
    "uiSetForestTypeNum": {
        "name": "uiSetForestTypeNum",
        "return_type": "bool",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the forest type by index."
    },
    "uiSelectForestAtPointer": {
        "name": "uiSelectForestAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "selects the forest under the pointer."
    },
    "uiUnselectForest": {
        "name": "uiUnselectForest",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "de-selects the forest under the pointer."
    },
    "uiSelectCliffAtPointer": {
        "name": "uiSelectCliffAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "selects the cliff under the pointer."
    },
    "uiUnselectCliff": {
        "name": "uiUnselectCliff",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "de-selects the forest under the pointer."
    },
    "uiToggleCliff": {
        "name": "uiToggleCliff",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles cliff pieces on or off under the pointer."
    },
    "gadgetScrollUp": {
        "name": "gadgetScrollUp",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "scrolls the gadget up one unit"
    },
    "gadgetScrollDown": {
        "name": "gadgetScrollDown",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "scrolls the gadget up one unit"
    },
    "gadgetScrollLeft": {
        "name": "gadgetScrollLeft",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "scrolls the gadget to the left one unit"
    },
    "gadgetScrollRight": {
        "name": "gadgetScrollRight",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "scrolls the gadget to the Right one unit"
    },
    "gadgetReal": {
        "name": "gadgetReal",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "makes real the named gadget."
    },
    "gadgetUnreal": {
        "name": "gadgetUnreal",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "makes un-real the named gadget."
    },
    "gadgetToggle": {
        "name": "gadgetToggle",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles the reality of the named gadget."
    },
    "gadgetToggleIfNotMP": {
        "name": "gadgetToggleIfNotMP",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles the reality of the named gadget."
    },
    "gadgetRefresh": {
        "name": "gadgetRefresh",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "refresh the contents of the named gadget."
    },
    "gadgetFlash": {
        "name": "gadgetFlash",
        "return_type": "void",
        "params": [
            {
                "name": "stringName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flash",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turns gadget flashing on/off."
    },
    "techFlash": {
        "name": "techFlash",
        "return_type": "void",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flash",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turns gadget flashing on/off."
    },
    "trainFlash": {
        "name": "trainFlash",
        "return_type": "void",
        "params": [
            {
                "name": "protoID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flash",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turns gadget flashing on/off."
    },
    "categoryFlash": {
        "name": "categoryFlash",
        "return_type": "void",
        "params": [
            {
                "name": "ID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flash",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turns gadget flashing on/off."
    },
    "fadeToColor": {
        "name": "fadeToColor",
        "return_type": "void",
        "params": [
            {
                "name": "r",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "g",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "duration",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "delay",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "inout",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "fade in/out using color specified."
    },
    "setGameFadeIn": {
        "name": "setGameFadeIn",
        "return_type": "void",
        "params": [
            {
                "name": "r",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "g",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "duration",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "delay",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "inout",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turn fade in on/off, set color duration."
    },
    "uiLoadTriggers": {
        "name": "uiLoadTriggers",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "load some triggers."
    },
    "uiSaveTriggers": {
        "name": "uiSaveTriggers",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save some triggers."
    },
    "uiImportTriggers": {
        "name": "uiImportTriggers",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "load some triggers."
    },
    "doTriggerImport": {
        "name": "doTriggerImport",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "load some triggers."
    },
    "uiExportTriggers": {
        "name": "uiExportTriggers",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save some triggers."
    },
    "uiExportGrouping": {
        "name": "uiExportGrouping",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save a group."
    },
    "uiSaveGrouping": {
        "name": "uiSaveGrouping",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save some groups."
    },
    "uiSaveGroupingLUA": {
        "name": "uiSaveGroupingLUA",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "save some groups."
    },
    "uiHideCursor": {
        "name": "uiHideCursor",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "testing only"
    },
    "uiLeaveModeOnUnshift": {
        "name": "uiLeaveModeOnUnshift",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "causes game to return to editMode none when shift hotkey is released"
    },
    "uiToggleBrushMask": {
        "name": "uiToggleBrushMask",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "This is not what you are looking for."
    },
    "uiToggleTerrainPasteMode": {
        "name": "uiToggleTerrainPasteMode",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "This is not what you are looking for."
    },
    "uiUnitDetailHelp": {
        "name": "uiUnitDetailHelp",
        "return_type": "void",
        "params": [
            {
                "name": "protoID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "civID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the detail help UI for the given proto ID, or -1 for current unit selection proto."
    },
    "uiTechDetailHelp": {
        "name": "uiTechDetailHelp",
        "return_type": "void",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the detail help UI for the given tech node ID"
    },
    "uiTechCivDetailHelp": {
        "name": "uiTechCivDetailHelp",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the detail help UI for the given tech node ID"
    },
    "uiTopicDetailHelp": {
        "name": "uiTopicDetailHelp",
        "return_type": "void",
        "params": [
            {
                "name": "topicName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the detail help UI for the given help topic"
    },
    "uiLastDetailHelp": {
        "name": "uiLastDetailHelp",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "goes back to the most recent help entry."
    },
    "AIDebugInfoRefresh": {
        "name": "AIDebugInfoRefresh",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "shows the ai debug menu with new data."
    },
    "AIDebugInfoToggle": {
        "name": "AIDebugInfoToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles whether the ai debug menu is up, refreshing if first showing."
    },
    "AIDebugOutputToggle": {
        "name": "AIDebugOutputToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles whether the ai output window is up, refreshing if first showing."
    },
    "AIDebugGathererToggle": {
        "name": "AIDebugGathererToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles whether the ai gatherer distribution window is up, refreshing if first showing."
    },
    "AIDebugPopToggle": {
        "name": "AIDebugPopToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles whether the ai pop distribution window is up, refreshing if first showing."
    },
    "AIDebugPastResourceNeedToggle": {
        "name": "AIDebugPastResourceNeedToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles whether the ai past resource needs window is up, refreshing if first showing."
    },
    "AIDebugTimedStatsToggle": {
        "name": "AIDebugTimedStatsToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles whether the kb timed stats window is up, refreshing if first showing."
    },
    "AIDebugShowBasesToggle": {
        "name": "AIDebugShowBasesToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles the display of bases"
    },
    "AIDebugToggleBPText": {
        "name": "AIDebugToggleBPText",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "toggles the showing of Building placement value text."
    },
    "uiShowAIDebugInfoPlan": {
        "name": "uiShowAIDebugInfoPlan",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the plan debug text for the given plan ID"
    },
    "uiShowAIDebugInfoPlacement": {
        "name": "uiShowAIDebugInfoPlacement",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the building placement info for the given ID"
    },
    "uiShowAIDebugInfoProgression": {
        "name": "uiShowAIDebugInfoProgression",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the progression info for the given ID"
    },
    "uiShowAIDebugInfoKBUnit": {
        "name": "uiShowAIDebugInfoKBUnit",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the kbunit info for the given ID"
    },
    "uiShowAIDebugInfoBase": {
        "name": "uiShowAIDebugInfoBase",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the base info for the given ID"
    },
    "uiShowAIDebugInfoArea": {
        "name": "uiShowAIDebugInfoArea",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the area info for the given ID"
    },
    "uiShowAIDebugInfoAreaGroup": {
        "name": "uiShowAIDebugInfoAreaGroup",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the area info for the given ID"
    },
    "uiSetKBAttackRouteRender": {
        "name": "uiSetKBAttackRouteRender",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "render the attackRoute info for the given ID"
    },
    "uiShowAIDebugInfoAttackRoute": {
        "name": "uiShowAIDebugInfoAttackRoute",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the attackRoute info for the given ID"
    },
    "uiSetKBResourceRender": {
        "name": "uiSetKBResourceRender",
        "return_type": "void",
        "params": [
            {
                "name": "resID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "set",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "render the kbResource info for the given ID. If not set given, will not render the resource."
    },
    "uiShowAIDebugInfoKBResource": {
        "name": "uiShowAIDebugInfoKBResource",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the kbResource info for the given ID"
    },
    "uiSetKBArmyRender": {
        "name": "uiSetKBArmyRender",
        "return_type": "void",
        "params": [
            {
                "name": "id",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "set",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "render the kbArmy info for the given ID. If not set given, will not render the army."
    },
    "uiShowAIDebugInfoKBArmy": {
        "name": "uiShowAIDebugInfoKBArmy",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the kbArmy info for the given ID"
    },
    "uiShowAIDebugInfoKBUnitPick": {
        "name": "uiShowAIDebugInfoKBUnitPick",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the kbUnitPick info for the given ID"
    },
    "uiShowAIDebugInfoEscrow": {
        "name": "uiShowAIDebugInfoEscrow",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "brings up the escrow info for the given ID"
    },
    "uiSetBuildingPlacementRender": {
        "name": "uiSetBuildingPlacementRender",
        "return_type": "void",
        "params": [
            {
                "name": "id",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "controls rendering of the building placement info for the given ID"
    },
    "uiChatScrollBack": {
        "name": "uiChatScrollBack",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Scrolls chat back one."
    },
    "uiChatScrollForward": {
        "name": "uiChatScrollForward",
        "return_type": "void",
        "params": [
            {
                "name": "integerKeyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Scrolls chat forward one."
    },
    "uiChatDisplayModeToggle": {
        "name": "uiChatDisplayModeToggle",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles the chat display mode."
    },
    "uiChatDisplayModeToRecent": {
        "name": "uiChatDisplayModeToRecent",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles the chat display mode to recent mode."
    },
    "uiChatDisplayModeToHistory": {
        "name": "uiChatDisplayModeToHistory",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles the chat display mode to history mode."
    },
    "uiClearChat": {
        "name": "uiClearChat",
        "return_type": "void",
        "params": [
            {
                "name": "clearOnly",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Clears the chat and resets to recent mode.  clearOnly == true if you don't want it to populate the chat, but only clear it."
    },
    "uiAddChatNotification": {
        "name": "uiAddChatNotification",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "d",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a notification to the game's chat output, can play a sound too."
    },
    "uiSetHCNotifyText": {
        "name": "uiSetHCNotifyText",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds notify text, can play a sound too."
    },
    "uiReleaseDownKeys": {
        "name": "uiReleaseDownKeys",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "pops up all downed keys."
    },
    "uiSpewDownKeys": {
        "name": "uiSpewDownKeys",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "spews all down keys."
    },
    "uiSendIngameChat": {
        "name": "uiSendIngameChat",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "used direcly by UI"
    },
    "uiPoliticianUI": {
        "name": "uiPoliticianUI",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Used to activate the politician UI"
    },
    "uiPoliticianUIInSelected": {
        "name": "uiPoliticianUIInSelected",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Used to activate the politician UI in current selection"
    },
    "uiConsulateUI": {
        "name": "uiConsulateUI",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Used to activate the consulate UI"
    },
    "uiConsulateUIInSelected": {
        "name": "uiConsulateUIInSelected",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Used to activate the consulate UI from hotkeys"
    },
    "uiExpireCurrentObjectiveNotification": {
        "name": "uiExpireCurrentObjectiveNotification",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Causes the currently displaying objective notification to fade out (or disappear), depending on the param passed in."
    },
    "uiFindResourceGatherers": {
        "name": "uiFindResourceGatherers",
        "return_type": "void",
        "params": [
            {
                "name": "typeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds the next resource gatherer unit of the given resource type in the arbitrary order of unit ID, so that it can be called repeatedly to cycle."
    },
    "uiFindGatherersNotGathering": {
        "name": "uiFindGatherersNotGathering",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds the gatherer unit that's not gathering in the arbitrary order of unit ID, so that it can be called repeatedly to cycle."
    },
    "uiFindDancers": {
        "name": "uiFindDancers",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds the next native settler dancing at the firepit in the arbitrary order of unit ID, so that it can be called repeatedly to cycle."
    },
    "uiSelectFirepit": {
        "name": "uiSelectFirepit",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "selects the users firepit if it exists"
    },
    "uiFindAlliedNatives": {
        "name": "uiFindAlliedNatives",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds allied natives of the current player in order, so that it can be called repeatedly to cycle."
    },
    "uiVPAccelClick": {
        "name": "uiVPAccelClick",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Shows the VP accel building from the unitID."
    },
    "uiCameraScroll": {
        "name": "uiCameraScroll",
        "return_type": "void",
        "params": [
            {
                "name": "fast",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Scrolls the game view."
    },
    "uiCameraControl": {
        "name": "uiCameraControl",
        "return_type": "void",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Controls camera with gamepad stick."
    },
    "uiMapPointerControl": {
        "name": "uiMapPointerControl",
        "return_type": "void",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "doGoto",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves the map pointer."
    },
    "uiMapPointerGoto": {
        "name": "uiMapPointerGoto",
        "return_type": "void",
        "params": [
            {
                "name": "activeCheck",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Jump to map pointer location."
    },
    "uiCircleSelect": {
        "name": "uiCircleSelect",
        "return_type": "void",
        "params": [
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "doubleClick",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "leaveSelected",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Start/stop circle selection."
    },
    "uiCircleSelectResize": {
        "name": "uiCircleSelectResize",
        "return_type": "void",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Circle selection resizing."
    },
    "uiCenterPointer": {
        "name": "uiCenterPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Centers mouse pointer."
    },
    "uiForceShift": {
        "name": "uiForceShift",
        "return_type": "void",
        "params": [
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Force shift key on or off."
    },
    "uiScreenSelect": {
        "name": "uiScreenSelect",
        "return_type": "void",
        "params": [
            {
                "name": "modifier",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "screen selection."
    },
    "uiResetScreenSelect": {
        "name": "uiResetScreenSelect",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "resets screen selection."
    },
    "uiMoveAllMilitaryAtPointer": {
        "name": "uiMoveAllMilitaryAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves all military units to the pointer position."
    },
    "sendAttackSentence": {
        "name": "sendAttackSentence",
        "return_type": "void",
        "params": [
            {
                "name": "sendingPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "receivingPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targetPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targetUnit",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xPos",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zPos",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "send attack sentence from one player to another; specify targetPlayer, or targetUnit, or xPos and zPos."
    },
    "sendDefendSentence": {
        "name": "sendDefendSentence",
        "return_type": "void",
        "params": [
            {
                "name": "sendingPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "receivingPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xPos",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zPos",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "send defend sentence from one player to another; specify target xPos and zPos."
    },
    "sendTributeSentence": {
        "name": "sendTributeSentence",
        "return_type": "void",
        "params": [
            {
                "name": "sendingPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "receivingPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "send tribute sentence from one player to another; specify desired resource."
    },
    "sendPromptType": {
        "name": "sendPromptType",
        "return_type": "void",
        "params": [
            {
                "name": "sendingPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "promptType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "send AIChat to current player from sendingPlayer; specify desired AIChatPromptType."
    },
    "startRandomGame": {
        "name": "startRandomGame",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "begins a new random game."
    },
    "startRandomGame2": {
        "name": "startRandomGame2",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "players",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "random",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "seed",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "scenarioFilename",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "debug",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "teamCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "mapsize",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resources",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "begins a new random game with the given parms."
    },
    "startRandomGameMapCode": {
        "name": "startRandomGameMapCode",
        "return_type": "void",
        "params": [
            {
                "name": "mapcode",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Generates a random map game with the given map code."
    },
    "startRandomGameAgeAndMapCode": {
        "name": "startRandomGameAgeAndMapCode",
        "return_type": "void",
        "params": [
            {
                "name": "startingage",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "nomad",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "mapcode",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Generates a random map game with the given starting age, nomad start(true/false), and map code."
    },
    "restartCurrentGame": {
        "name": "restartCurrentGame",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "restarts current game."
    },
    "leaveGame": {
        "name": "leaveGame",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "destroys the world and returns to main menu."
    },
    "handlePostGame": {
        "name": "handlePostGame",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does what needs to be done."
    },
    "showGameFromPostGame": {
        "name": "showGameFromPostGame",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does what needs to be done."
    },
    "postGamePlayAgain": {
        "name": "postGamePlayAgain",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does what needs to be done."
    },
    "minimapZoomDelta": {
        "name": "minimapZoomDelta",
        "return_type": "void",
        "params": [
            {
                "name": "floatZoomDelta",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the zoom factor of the minimap up or down by that amount (remaining centered on the current view)"
    },
    "minimapZoom": {
        "name": "minimapZoom",
        "return_type": "void",
        "params": [
            {
                "name": "floatZoom",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the zoom factor of the minimap."
    },
    "minimapRotateMode": {
        "name": "minimapRotateMode",
        "return_type": "void",
        "params": [
            {
                "name": "integerMode",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the minimap rotation mode.  No arg means toggle."
    },
    "chat": {
        "name": "chat",
        "return_type": "void",
        "params": [
            {
                "name": "stringText",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "integerPlayer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adds a line of chat text from the given player (current if not provided."
    },
    "uiSpecialPowerAtPointer": {
        "name": "uiSpecialPowerAtPointer",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Use a special power at targeted location."
    },
    "uiToggleGame": {
        "name": "uiToggleGame",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turns off and on the game UI."
    },
    "uiZoomToMinimapEvent": {
        "name": "uiZoomToMinimapEvent",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "zooms to the most recent minimap event"
    },
    "uiRefreshEditorMenu": {
        "name": "uiRefreshEditorMenu",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "reconstitutes the entire editor menu"
    },
    "uiShowTributeDialog": {
        "name": "uiShowTributeDialog",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "minimizes main UI and brings up the minimized UI"
    },
    "uiHideTributeDialog": {
        "name": "uiHideTributeDialog",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "maximizes main UI"
    },
    "uiShowPlayerSummaryDialog": {
        "name": "uiShowPlayerSummaryDialog",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Shows the player summary dialog."
    },
    "uiHidePlayerSummaryDialog": {
        "name": "uiHidePlayerSummaryDialog",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Hides the player summary dialog."
    },
    "uiNewScenario": {
        "name": "uiNewScenario",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "creates a new blank scenario"
    },
    "sunIncreaseInclination": {
        "name": "sunIncreaseInclination",
        "return_type": "void",
        "params": [
            {
                "name": "keyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the increase sun inclination key has gone up/down."
    },
    "sunDecreaseInclination": {
        "name": "sunDecreaseInclination",
        "return_type": "void",
        "params": [
            {
                "name": "keyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the decrease sun inclination key has gone up/down."
    },
    "sunIncreaseRotation": {
        "name": "sunIncreaseRotation",
        "return_type": "void",
        "params": [
            {
                "name": "keyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the increase sun rotation key has gone up/down."
    },
    "sunDecreaseRotation": {
        "name": "sunDecreaseRotation",
        "return_type": "void",
        "params": [
            {
                "name": "keyState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "intended for ui use only.  Indicates that the decrease sun rotation key has gone up/down."
    },
    "setSunPosition": {
        "name": "setSunPosition",
        "return_type": "void",
        "params": [
            {
                "name": "sunInclination",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "sunRotation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "relative",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the sun height above the horizon and position in the world, The bool tells if the changes are relative"
    },
    "abortCinematic": {
        "name": "abortCinematic",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "abort the current cinematic."
    },
    "scoreUpdate": {
        "name": "scoreUpdate",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "causes score to update even if it isn't supposed to yet, time wise"
    },
    "toggleScore": {
        "name": "toggleScore",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "handles the score toggling"
    },
    "toggleTime": {
        "name": "toggleTime",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "handles the time display toggling"
    },
    "toggleDebugTime": {
        "name": "toggleDebugTime",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "handles the time display toggling"
    },
    "doSPSetup": {
        "name": "doSPSetup",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Enter Single player setup."
    },
    "doMPSetup": {
        "name": "doMPSetup",
        "return_type": "void",
        "params": [
            {
                "name": "useESO",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Enter BMultiplayer setup."
    },
    "exitMPSetupSubScreen": {
        "name": "exitMPSetupSubScreen",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Leave the current MP screen and return to the MP setup menu."
    },
    "enterRecordGameMode": {
        "name": "enterRecordGameMode",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": ""
    },
    "enterGCGameMode": {
        "name": "enterGCGameMode",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": ""
    },
    "showCampaignDialog": {
        "name": "showCampaignDialog",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "msg",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "UI used only"
    },
    "playerResign": {
        "name": "playerResign",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "resigns the currently controlled player."
    },
    "showGameMenu": {
        "name": "showGameMenu",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "show the in-game menu."
    },
    "hideGameMenu": {
        "name": "hideGameMenu",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "hide the in-game menu."
    },
    "uiSaveCampaignGameBrowser": {
        "name": "uiSaveCampaignGameBrowser",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "show the in-game menu."
    },
    "uiInitOptionsScreenProfileEditDialog": {
        "name": "uiInitOptionsScreenProfileEditDialog",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "initializes the Profile Edit Dialog inside the OptionsScreen"
    },
    "uiBMultiplayerSave": {
        "name": "uiBMultiplayerSave",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "stop playing stupid music at 11pm."
    },
    "dropToMainMenu": {
        "name": "dropToMainMenu",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "drop back to the main menu"
    },
    "changeCliffType": {
        "name": "changeCliffType",
        "return_type": "void",
        "params": [
            {
                "name": "cliffName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "change the cliff type for all cliffs on the map"
    },
    "uiCommandPanelControl": {
        "name": "uiCommandPanelControl",
        "return_type": "void",
        "params": [
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turn on/off gamepad command panel control."
    },
    "uiCommandPanelMove": {
        "name": "uiCommandPanelMove",
        "return_type": "void",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "move between selections in the command panel."
    },
    "uiCommandPanelExecute": {
        "name": "uiCommandPanelExecute",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gamepad command panel execute."
    },
    "winScenario": {
        "name": "winScenario",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "executes the trYouWin trigger func, allowing you to win the scenario."
    },
    "rmEchoWarning": {
        "name": "rmEchoWarning",
        "return_type": "void",
        "params": [
            {
                "name": "echoString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Random map echo."
    },
    "rmEchoError": {
        "name": "rmEchoError",
        "return_type": "void",
        "params": [
            {
                "name": "echoString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Random map echo."
    },
    "rmRandFloat": {
        "name": "rmRandFloat",
        "return_type": "float",
        "params": [
            {
                "name": "min",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "max",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a random float between min and max."
    },
    "rmRandInt": {
        "name": "rmRandInt",
        "return_type": "int",
        "params": [
            {
                "name": "min",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "max",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a random integer between min and max."
    },
    "rmGetNomadStart": {
        "name": "rmGetNomadStart",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if this map is to place a covered wagon instead of a town center."
    },
    "rmGetIsFFA": {
        "name": "rmGetIsFFA",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if this map is set to be a FFA game which means each player on their own team."
    },
    "rmGetIsRelicCapture": {
        "name": "rmGetIsRelicCapture",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if this map is set to be a relic game.."
    },
    "rmGetIsKOTH": {
        "name": "rmGetIsKOTH",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if this map is set to be a King of the Hill game."
    },
    "rmSetMapSize": {
        "name": "rmSetMapSize",
        "return_type": "bool",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the size of the map."
    },
    "rmGetMapXSize": {
        "name": "rmGetMapXSize",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the X size of the map."
    },
    "rmGetMapZSize": {
        "name": "rmGetMapZSize",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Z size of the map."
    },
    "rmSetSeaLevel": {
        "name": "rmSetSeaLevel",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the sea level for the map."
    },
    "rmGetSeaLevel": {
        "name": "rmGetSeaLevel",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the sea level for the map."
    },
    "rmSetSeaType": {
        "name": "rmSetSeaType",
        "return_type": "bool",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the sea type for the map.  This is used if terrain is initialized to water."
    },
    "rmSetMapElevationParameters": {
        "name": "rmSetMapElevationParameters",
        "return_type": "bool",
        "params": [
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "freq",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "octaves",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "persistence",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets up terrain for initializing with a noise layer."
    },
    "rmSetBaseTerrainMix": {
        "name": "rmSetBaseTerrainMix",
        "return_type": "bool",
        "params": [
            {
                "name": "mixName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Initializes the base terrain with the requested mix.  Call before rmTerrainInitialize."
    },
    "rmAddMapTerrainByHeightInfo": {
        "name": "rmAddMapTerrainByHeightInfo",
        "return_type": "bool",
        "params": [
            {
                "name": "terrain",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minHeight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxHeight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "outerRange",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a terrain to paint between the specified heights, modified by a random number between 0.0 and outerRange."
    },
    "rmAddMapTerrainByAngleInfo": {
        "name": "rmAddMapTerrainByAngleInfo",
        "return_type": "bool",
        "params": [
            {
                "name": "terrain",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minSlope",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxSlope",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "outerRange",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a terrain to paint on tiles that are sloped between the specified angles (0 degrees is flat terrain, 90 degrees is sheer terrain), modified by a random number between 0.0 and outerRange."
    },
    "rmSetMapElevationHeightBlend": {
        "name": "rmSetMapElevationHeightBlend",
        "return_type": "bool",
        "params": [
            {
                "name": "blend",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets how much to smooth the overall terrain after initializing with noise."
    },
    "rmPlaceMapClusters": {
        "name": "rmPlaceMapClusters",
        "return_type": "bool",
        "params": [
            {
                "name": "terrain",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protounit",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "place object clusters (of the specified protounit) around the map, and also optionally paint with the specified terrain."
    },
    "rmSetMapClusteringPlacementParams": {
        "name": "rmSetMapClusteringPlacementParams",
        "return_type": "bool",
        "params": [
            {
                "name": "paintThreshold",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeMinVal",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeMaxVal",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets up cluster system; valid ranges are from -1.0 to 1.0 and are compared to the internal noise field for deciding where to paint terrain and place clusters. Type is cClusterLand, or cClusterWater, or cClusterShallowWater, or cClusterEverywhere."
    },
    "rmSetMapClusteringObjectParams": {
        "name": "rmSetMapClusteringObjectParams",
        "return_type": "bool",
        "params": [
            {
                "name": "minObjectCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxObjectCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxPosOffset",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets up cluster system; min/max objects per tile (default: 0-3), and max random offset when placing (default: 0.5 tiles)."
    },
    "rmSetMapClusteringNoiseParams": {
        "name": "rmSetMapClusteringNoiseParams",
        "return_type": "bool",
        "params": [
            {
                "name": "minFrequency",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "octaves",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "persistence",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets up cluster system; standard inputs to noise generator used to determine cluster placement."
    },
    "rmAreaFractionToTiles": {
        "name": "rmAreaFractionToTiles",
        "return_type": "int",
        "params": [
            {
                "name": "fraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts an area from fraction of the map to tile count."
    },
    "rmAreaTilesToFraction": {
        "name": "rmAreaTilesToFraction",
        "return_type": "float",
        "params": [
            {
                "name": "tiles",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts area tile count to fraction of map."
    },
    "rmXFractionToTiles": {
        "name": "rmXFractionToTiles",
        "return_type": "int",
        "params": [
            {
                "name": "fraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts an fraction of the map in the x direction to tile count."
    },
    "rmXTilesToFraction": {
        "name": "rmXTilesToFraction",
        "return_type": "float",
        "params": [
            {
                "name": "tiles",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts tile count in the x direction to fraction of map."
    },
    "rmZFractionToTiles": {
        "name": "rmZFractionToTiles",
        "return_type": "int",
        "params": [
            {
                "name": "fraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts an fraction of the map in the z direction to tile count."
    },
    "rmZTilesToFraction": {
        "name": "rmZTilesToFraction",
        "return_type": "float",
        "params": [
            {
                "name": "tiles",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts tile count in the z direction to fraction of map."
    },
    "rmDegreesToRadians": {
        "name": "rmDegreesToRadians",
        "return_type": "float",
        "params": [
            {
                "name": "degrees",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts an angle in degrees to radians."
    },
    "rmMetersToTiles": {
        "name": "rmMetersToTiles",
        "return_type": "int",
        "params": [
            {
                "name": "meters",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts a distance in meters to a number of tiles."
    },
    "rmXMetersToFraction": {
        "name": "rmXMetersToFraction",
        "return_type": "float",
        "params": [
            {
                "name": "meters",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts meters into a fraction of the map in the x direction."
    },
    "rmZMetersToFraction": {
        "name": "rmZMetersToFraction",
        "return_type": "float",
        "params": [
            {
                "name": "meters",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts meters into a fraction of the map in the z direction."
    },
    "rmXFractionToMeters": {
        "name": "rmXFractionToMeters",
        "return_type": "float",
        "params": [
            {
                "name": "meters",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts a fraction of the map in the x direction to meters."
    },
    "rmZFractionToMeters": {
        "name": "rmZFractionToMeters",
        "return_type": "float",
        "params": [
            {
                "name": "meters",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Converts meters a fraction of the map in the z direction to meters."
    },
    "rmCreateArea": {
        "name": "rmCreateArea",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "parentAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates an area."
    },
    "rmSetAreaSize": {
        "name": "rmSetAreaSize",
        "return_type": "bool",
        "params": [
            {
                "name": "minFraction",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the area size to a min/max fraction of the map."
    },
    "rmSetAreaEdgeFilling": {
        "name": "rmSetAreaEdgeFilling",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "borderSize",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Enable edge filling and set a border search size (for Carolina and similar maps with a big continent)."
    },
    "rmSetAreaLocation": {
        "name": "rmSetAreaLocation",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the area location."
    },
    "rmSetAreaLocPlayer": {
        "name": "rmSetAreaLocPlayer",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the area location to player's location."
    },
    "rmSetAreaLocTeam": {
        "name": "rmSetAreaLocTeam",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "teamID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the area location to team's location."
    },
    "rmBuildArea": {
        "name": "rmBuildArea",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Builds the specified area."
    },
    "rmBuildAllAreas": {
        "name": "rmBuildAllAreas",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Simulatenously builds all unbuilt areas."
    },
    "rmSetAreaTerrainType": {
        "name": "rmSetAreaTerrainType",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrainTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the terrain type for an area."
    },
    "rmSetAreaMix": {
        "name": "rmSetAreaMix",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "mixName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the mix for an area.  Overrides terrain type if it is also set."
    },
    "rmPaintAreaTerrain": {
        "name": "rmPaintAreaTerrain",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Paints the terrain for a specified area."
    },
    "rmPaintAreaTerrainByHeight": {
        "name": "rmPaintAreaTerrainByHeight",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrain",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minHeight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxHeight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "outerRange",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Paints the area's tiles in the specified height range with specified terrain (with outerRange buffer if feathering is desired)."
    },
    "rmPaintAreaTerrainByAngle": {
        "name": "rmPaintAreaTerrainByAngle",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrain",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minAngle",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxAngle",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "outerRange",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Paints the area's tiles in the specified angle range with specified terrain (with outerRange buffer if feathering is desired)."
    },
    "rmSetAreaBaseHeight": {
        "name": "rmSetAreaBaseHeight",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "height",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the base height for an area."
    },
    "rmSetAreaWarnFailure": {
        "name": "rmSetAreaWarnFailure",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "warn",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets whether the area build process will warn if it fails."
    },
    "rmSetAreaForestType": {
        "name": "rmSetAreaForestType",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "forestName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the forest type for an area."
    },
    "rmSetAreaForestDensity": {
        "name": "rmSetAreaForestDensity",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "density",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the forest density for an area."
    },
    "rmSetAreaForestClumpiness": {
        "name": "rmSetAreaForestClumpiness",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "density",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the forest density for an area."
    },
    "rmSetAreaForestUnderbrush": {
        "name": "rmSetAreaForestUnderbrush",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "density",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the forest density for an area."
    },
    "rmSetAreaWaterType": {
        "name": "rmSetAreaWaterType",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waterName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the water type for an area."
    },
    "rmGetAreaClosestPoint": {
        "name": "rmGetAreaClosestPoint",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "point",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pullback",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the point in areaID that's closest to the given point, optionally requiring that it pass the given constraint."
    },
    "rmSetAreaCliffType": {
        "name": "rmSetAreaCliffType",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cliffName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the cliff type for an area."
    },
    "rmSetAreaCliffPainting": {
        "name": "rmSetAreaCliffPainting",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "paintGround",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "paintOutsideEdge",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "paintSide",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minSideHeight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "paintInsideEdge",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set cliff painting options for an area."
    },
    "rmSetAreaCliffEdge": {
        "name": "rmSetAreaCliffEdge",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "size",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "spacing",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "mapEdge",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set cliff edge parameters for an area."
    },
    "rmSetAreaCliffHeight": {
        "name": "rmSetAreaCliffHeight",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "val",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "ramp",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set an area's cliff height."
    },
    "rmAddAreaCliffEdgeAvoidClass": {
        "name": "rmAddAreaCliffEdgeAvoidClass",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "avoidID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a class for an area's cliff edge to avoid."
    },
    "rmRiverCreate": {
        "name": "rmRiverCreate",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waterType",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "breaks",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "offset",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minR",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxR",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "make a river dude."
    },
    "rmRiverAddWaypoint": {
        "name": "rmRiverAddWaypoint",
        "return_type": "bool",
        "params": [
            {
                "name": "riverID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add waypoint to a river.  Don't mix with rmRiverSetConnections or rmRiverConnectRiver"
    },
    "rmRiverReveal": {
        "name": "rmRiverReveal",
        "return_type": "bool",
        "params": [
            {
                "name": "riverID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "extraTiles",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "reveals a river plus the specified number of extra tiles around it."
    },
    "rmSetRiverFoundationParams": {
        "name": "rmSetRiverFoundationParams",
        "return_type": "bool",
        "params": [
            {
                "name": "tileBuffer",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "heightOffset",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "the terrain buffer around the river, and the height of the banks above water level"
    },
    "rmSetWorldCircleConstraint": {
        "name": "rmSetWorldCircleConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "constrain",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets whether RM activities should be constrained to the main world circle."
    },
    "rmSetAreaObeyWorldCircleConstraint": {
        "name": "rmSetAreaObeyWorldCircleConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constrain",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Determines whether an area obeys world circle constraint."
    },
    "rmAddAreaTerrainLayer": {
        "name": "rmAddAreaTerrainLayer",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrain",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxDist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a terrain layer to an area."
    },
    "rmSetAreaTerrainLayerVariance": {
        "name": "rmSetAreaTerrainLayerVariance",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variance",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Specifies if the area should vary the terrain layer edges."
    },
    "rmSetAreaMinBlobs": {
        "name": "rmSetAreaMinBlobs",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "blobs",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets minimum number of area blobs."
    },
    "rmSetAreaMaxBlobs": {
        "name": "rmSetAreaMaxBlobs",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "blobs",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets maximum number of area blobs."
    },
    "rmSetAreaMinBlobDistance": {
        "name": "rmSetAreaMinBlobDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets minimum blob distance."
    },
    "rmSetAreaMaxBlobDistance": {
        "name": "rmSetAreaMaxBlobDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets maximum blob distance."
    },
    "rmSetAreaCoherence": {
        "name": "rmSetAreaCoherence",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "coherence",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets area coherence (0-1)."
    },
    "rmSetAreaSmoothDistance": {
        "name": "rmSetAreaSmoothDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "smoothDistance",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets area edge smoothing distance (distance is number of neighboring points to consider in each direction)."
    },
    "rmSetAreaHeightBlend": {
        "name": "rmSetAreaHeightBlend",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "heightBlend",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets how smoothly area height blends into surroundings."
    },
    "rmAreaID": {
        "name": "rmAreaID",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets area ID for given area name."
    },
    "rmAddAreaInfluencePoint": {
        "name": "rmAddAreaInfluencePoint",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds an area influence point."
    },
    "rmAddAreaInfluenceSegment": {
        "name": "rmAddAreaInfluenceSegment",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction1",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction1",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction2",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction2",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds an area influence segment."
    },
    "rmAddAreaRemoveType": {
        "name": "rmAddAreaRemoveType",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "typeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add an unit type that the specified area removes."
    },
    "rmAddAreaTerrainReplacement": {
        "name": "rmAddAreaTerrainReplacement",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrainTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "newTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a terrain replacement rule to the area."
    },
    "rmSetAreaElevationType": {
        "name": "rmSetAreaElevationType",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area elevation variation type (cElevNormal, cElevFractalSum, cElevTurbulence)."
    },
    "rmSetAreaElevationMinFrequency": {
        "name": "rmSetAreaElevationMinFrequency",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "freq",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area elevation variation noise frequency (best >0 and <1)."
    },
    "rmSetAreaElevationOctaves": {
        "name": "rmSetAreaElevationOctaves",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "octaves",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area elevation variation noise octaves."
    },
    "rmSetAreaElevationPersistence": {
        "name": "rmSetAreaElevationPersistence",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "persistence",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area elevation variation noise persistence (best >0 and <1)."
    },
    "rmSetAreaElevationVariation": {
        "name": "rmSetAreaElevationVariation",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area elevation variation height (amount to vary +- from area base height)."
    },
    "rmSetAreaElevationEdgeFalloffDist": {
        "name": "rmSetAreaElevationEdgeFalloffDist",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area elevation noise to falloff as it gets closer to the area edge."
    },
    "rmSetAreaElevationNoiseBias": {
        "name": "rmSetAreaElevationNoiseBias",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bias",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area elevation variation noise bias (-1 means down only, 0 means +- equally, 1 means up only.)"
    },
    "rmSetAreaReveal": {
        "name": "rmSetAreaReveal",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "tiles",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area to be revealed (-1 means don't reveal, 0 means reveal, >0 means reveal plus that number of extra tiles."
    },
    "rmSetGlobalSnow": {
        "name": "rmSetGlobalSnow",
        "return_type": "void",
        "params": [
            {
                "name": "percent",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the global snow percent."
    },
    "rmSetGlobalRain": {
        "name": "rmSetGlobalRain",
        "return_type": "void",
        "params": [
            {
                "name": "percent",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the global rain percent."
    },
    "rmSetGlobalStormLength": {
        "name": "rmSetGlobalStormLength",
        "return_type": "void",
        "params": [
            {
                "name": "length",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "timeBetweenStorms",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets storm length and time between storm in seconds."
    },
    "rmSetWindMagnitude": {
        "name": "rmSetWindMagnitude",
        "return_type": "void",
        "params": [
            {
                "name": "magnitude",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the global wind magnitude (1.0f is default)."
    },
    "rmTerrainInitialize": {
        "name": "rmTerrainInitialize",
        "return_type": "void",
        "params": [
            {
                "name": "baseTerrain",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "height",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Initializes the terrain to the base type and height."
    },
    "rmFillMapCorners": {
        "name": "rmFillMapCorners",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Fill map corners with blackmap."
    },
    "rmDoLightingFade": {
        "name": "rmDoLightingFade",
        "return_type": "void",
        "params": [
            {
                "name": "lightSetName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fadeTime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "applies a lighting set fade."
    },
    "rmDoLightingEffect": {
        "name": "rmDoLightingEffect",
        "return_type": "void",
        "params": [
            {
                "name": "lightSetName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "blendInTime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "effectTime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "blendOutTime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "applies a lighting set effect."
    },
    "rmSetGaiaCiv": {
        "name": "rmSetGaiaCiv",
        "return_type": "void",
        "params": [
            {
                "name": "civ",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets Gaia's civilization"
    },
    "rmAllocateSubCivs": {
        "name": "rmAllocateSubCivs",
        "return_type": "bool",
        "params": [
            {
                "name": "number",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Allocates the number of sub civs in the world."
    },
    "rmSetSubCiv": {
        "name": "rmSetSubCiv",
        "return_type": "bool",
        "params": [
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "civName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "big",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets a given sub civ in the world."
    },
    "rmGetCivID": {
        "name": "rmGetCivID",
        "return_type": "int",
        "params": [
            {
                "name": "civName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the civ ID."
    },
    "rmAddMerc": {
        "name": "rmAddMerc",
        "return_type": "int",
        "params": [
            {
                "name": "unitName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minCount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxCount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "countIncrement",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "multipleUses",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds mercs of to the merc manager for this game."
    },
    "rmSetPlayerLocation": {
        "name": "rmSetPlayerLocation",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Manually sets a player's starting location."
    },
    "rmSetPlayerPlacementArea": {
        "name": "rmSetPlayerPlacementArea",
        "return_type": "void",
        "params": [
            {
                "name": "minX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the area of the map to use for player placement."
    },
    "rmSetTeamSpacingModifier": {
        "name": "rmSetTeamSpacingModifier",
        "return_type": "void",
        "params": [
            {
                "name": "modifier",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the team spacing modifier."
    },
    "rmSetPlacementTeam": {
        "name": "rmSetPlacementTeam",
        "return_type": "void",
        "params": [
            {
                "name": "teamID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the team to place."
    },
    "rmSetPlacementSection": {
        "name": "rmSetPlacementSection",
        "return_type": "void",
        "params": [
            {
                "name": "fromPercent",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "toPercent",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the section of the placement line to use."
    },
    "rmPlacePlayersCircular": {
        "name": "rmPlacePlayersCircular",
        "return_type": "bool",
        "params": [
            {
                "name": "minFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "angleVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes a circle of player locations."
    },
    "rmPlacePlayersSquare": {
        "name": "rmPlacePlayersSquare",
        "return_type": "bool",
        "params": [
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "spacingVariationfloat",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes a square of player locations."
    },
    "rmPlacePlayersLine": {
        "name": "rmPlacePlayersLine",
        "return_type": "bool",
        "params": [
            {
                "name": "x1",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z1",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "x2",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z2",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "spacingVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes a line of player locations."
    },
    "rmPlacePlayersRiver": {
        "name": "rmPlacePlayersRiver",
        "return_type": "bool",
        "params": [
            {
                "name": "riverID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "spacingVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "edgeDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes a line of player locations along the specified river."
    },
    "rmPlacePlayer": {
        "name": "rmPlacePlayer",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets one player location."
    },
    "rmSetPlayerArea": {
        "name": "rmSetPlayerArea",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets a player's 'official' area."
    },
    "rmPlayerLocXFraction": {
        "name": "rmPlayerLocXFraction",
        "return_type": "float",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets a player's start location x fraction."
    },
    "rmPlayerLocZFraction": {
        "name": "rmPlayerLocZFraction",
        "return_type": "float",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets a player's start location z fraction."
    },
    "rmAddFairLoc": {
        "name": "rmAddFairLoc",
        "return_type": "int",
        "params": [
            {
                "name": "unitName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "forward",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "inside",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minPlayerDist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxPlayerDist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "locDist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "edgeDist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerArea",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "teamArea",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds some fairLoc placement info."
    },
    "rmPlaceFairLocs": {
        "name": "rmPlaceFairLocs",
        "return_type": "bool",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets fairLoc placement locations."
    },
    "rmResetFairLocs": {
        "name": "rmResetFairLocs",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets fairLoc placment info."
    },
    "rmGetNumberFairLocs": {
        "name": "rmGetNumberFairLocs",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets a player's number of fairLocs."
    },
    "rmFairLocXFraction": {
        "name": "rmFairLocXFraction",
        "return_type": "float",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets a player's fairLoc x fraction."
    },
    "rmFairLocZFraction": {
        "name": "rmFairLocZFraction",
        "return_type": "float",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets a player's fairLoc z fraction."
    },
    "rmSetPlayerResource": {
        "name": "rmSetPlayerResource",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "amount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets a player's resource amount."
    },
    "rmAddPlayerResource": {
        "name": "rmAddPlayerResource",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "amount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds to a player's resource amount."
    },
    "rmMultiplyPlayerResource": {
        "name": "rmMultiplyPlayerResource",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "factor",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Multiplys a player's resource amount by the given factor."
    },
    "rmGetPlayerName": {
        "name": "rmGetPlayerName",
        "return_type": "string",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets a player's name."
    },
    "rmGetPlayerTeam": {
        "name": "rmGetPlayerTeam",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the team the specified player is on."
    },
    "rmGetPlayerCiv": {
        "name": "rmGetPlayerCiv",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the civilization the specified player is on."
    },
    "rmGetPlayerCulture": {
        "name": "rmGetPlayerCulture",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the culture the specified player is on."
    },
    "rmGetNumberPlayersOnTeam": {
        "name": "rmGetNumberPlayersOnTeam",
        "return_type": "int",
        "params": [
            {
                "name": "teamID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the number of players on the given team."
    },
    "rmSetTeamArea": {
        "name": "rmSetTeamArea",
        "return_type": "bool",
        "params": [
            {
                "name": "teamID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets a team's 'official' area."
    },
    "rmCreateBoxConstraint": {
        "name": "rmCreateBoxConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "startX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "startZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "endX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "endZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bufferFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a box constraint."
    },
    "rmCreatePieConstraint": {
        "name": "rmCreatePieConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "insideRadius",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "outsideRadius",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minAngle",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxAngle",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bufferFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes a 'pie' constraint."
    },
    "rmCreateAreaOverlapConstraint": {
        "name": "rmCreateAreaOverlapConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area overlap constraint."
    },
    "rmCreateAreaConstraint": {
        "name": "rmCreateAreaConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint that forces something to remain within an area."
    },
    "rmCreateAreaDistanceConstraint": {
        "name": "rmCreateAreaDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area distance constraint."
    },
    "rmCreateAreaMaxDistanceConstraint": {
        "name": "rmCreateAreaMaxDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area max distance constraint."
    },
    "rmCreateEdgeConstraint": {
        "name": "rmCreateEdgeConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint that forces something to remain within an area's edge."
    },
    "rmCreateEdgeDistanceConstraint": {
        "name": "rmCreateEdgeDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area edge distance constraint."
    },
    "rmCreateEdgeMaxDistanceConstraint": {
        "name": "rmCreateEdgeMaxDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area edge max distance constraint."
    },
    "rmCreateCliffEdgeConstraint": {
        "name": "rmCreateCliffEdgeConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint that forces something to remain within an area's cliff edge."
    },
    "rmCreateCliffEdgeDistanceConstraint": {
        "name": "rmCreateCliffEdgeDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area cliff edge distance constraint."
    },
    "rmCreateCliffEdgeMaxDistanceConstraint": {
        "name": "rmCreateCliffEdgeMaxDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area cliff edge max distance constraint."
    },
    "rmCreateCliffRampConstraint": {
        "name": "rmCreateCliffRampConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint that forces something to remain within an area's cliff ramp edge."
    },
    "rmCreateCliffRampDistanceConstraint": {
        "name": "rmCreateCliffRampDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area cliff ramp edge distance constraint."
    },
    "rmCreateCliffRampMaxDistanceConstraint": {
        "name": "rmCreateCliffRampMaxDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an area cliff ramp edge max distance constraint."
    },
    "rmCreateClassDistanceConstraint": {
        "name": "rmCreateClassDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a class distance constraint."
    },
    "rmCreateTypeDistanceConstraint": {
        "name": "rmCreateTypeDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a type distance constraint."
    },
    "rmCreateTerrainDistanceConstraint": {
        "name": "rmCreateTerrainDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "passable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint to avoid terrain with certain a passability."
    },
    "rmCreateTerrainMaxDistanceConstraint": {
        "name": "rmCreateTerrainMaxDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "passable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint to be close to terrain with certain a passability."
    },
    "rmCreateCornerConstraint": {
        "name": "rmCreateCornerConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "corner",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "outside",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint to pass if in or out of a corner."
    },
    "rmCreateTradeRouteDistanceConstraint": {
        "name": "rmCreateTradeRouteDistanceConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make a constraint to avoid trade routes."
    },
    "rmAddAreaConstraint": {
        "name": "rmAddAreaConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add specified constraint to an area."
    },
    "rmCreateHCGPConstraint": {
        "name": "rmCreateHCGPConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Create home city gather point constraint to avoid all HCGPs."
    },
    "rmCreateHCGPSelfConstraint": {
        "name": "rmCreateHCGPSelfConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Create home city gather point constraint to avoid given player's HCGP."
    },
    "rmCreateHCGPAllyConstraint": {
        "name": "rmCreateHCGPAllyConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Create home city gather point constraint to avoid given player's ally's HCGPs."
    },
    "rmCreateHCGPEnemyConstraint": {
        "name": "rmCreateHCGPEnemyConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Create home city gather point constraint to avoid given player's enemy's HCGPs."
    },
    "rmCreateMaxHeightConstraint": {
        "name": "rmCreateMaxHeightConstraint",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "height",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Make an max height constraint (terrain must be less than given height)."
    },
    "rmAddFairLocConstraint": {
        "name": "rmAddFairLocConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "fairLocID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add specified constraint to a fairLoc placement."
    },
    "rmAddObjectDefConstraint": {
        "name": "rmAddObjectDefConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add specified constraint to given object def."
    },
    "rmDefineClass": {
        "name": "rmDefineClass",
        "return_type": "int",
        "params": [
            {
                "name": "className",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Define a class with the given name."
    },
    "rmAddAreaToClass": {
        "name": "rmAddAreaToClass",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add given area to specified class."
    },
    "rmAddObjectDefToClass": {
        "name": "rmAddObjectDefToClass",
        "return_type": "bool",
        "params": [
            {
                "name": "objectDefID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add given object def to specified class."
    },
    "rmClassID": {
        "name": "rmClassID",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets class ID for given class name."
    },
    "rmConstraintID": {
        "name": "rmConstraintID",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets constraint ID for given constraint name."
    },
    "rmCreateObjectDef": {
        "name": "rmCreateObjectDef",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates an object definition."
    },
    "rmCreateStartingUnitsObjectDef": {
        "name": "rmCreateStartingUnitsObjectDef",
        "return_type": "int",
        "params": [
            {
                "name": "clusterDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates special object definition for starting units with the given cluster distance."
    },
    "rmSetObjectDefMinDistance": {
        "name": "rmSetObjectDefMinDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the minimum distance for the object definition (in meters)."
    },
    "rmSetObjectDefMaxDistance": {
        "name": "rmSetObjectDefMaxDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the maximum distance for the object definition (in meters)."
    },
    "rmSetObjectDefGarrisonSecondaryUnits": {
        "name": "rmSetObjectDefGarrisonSecondaryUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Turn on the garrison secondary units flag."
    },
    "rmSetObjectDefGarrisonStartingUnits": {
        "name": "rmSetObjectDefGarrisonStartingUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Turn on the garrison starting units flag."
    },
    "rmSetObjectDefCreateHerd": {
        "name": "rmSetObjectDefCreateHerd",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a herd out of all units placed in this object def."
    },
    "rmSetObjectDefHerdAngle": {
        "name": "rmSetObjectDefHerdAngle",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "angle",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set a herd angle(clockwise from +z) in the object def."
    },
    "rmSetObjectDefAllowOverlap": {
        "name": "rmSetObjectDefAllowOverlap",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Lets objects overlap within this object def."
    },
    "rmSetObjectDefForceFullRotation": {
        "name": "rmSetObjectDefForceFullRotation",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "on",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Forces things in this object def to get full arbitrary rotation."
    },
    "rmAddObjectDefItem": {
        "name": "rmAddObjectDefItem",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "clusterDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add item to object definition."
    },
    "rmAddObjectDefItemByTypeID": {
        "name": "rmAddObjectDefItemByTypeID",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "clusterDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add item to object definition."
    },
    "rmPlaceObjectDefAtLoc": {
        "name": "rmPlaceObjectDefAtLoc",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place object definition at specific location for given player."
    },
    "rmPlaceObjectDefAtPoint": {
        "name": "rmPlaceObjectDefAtPoint",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "point",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place object definition at specific point for given player."
    },
    "rmSetObjectDefTradeRouteID": {
        "name": "rmSetObjectDefTradeRouteID",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the trade route for all objects in this object definition."
    },
    "rmPlaceObjectDefPerPlayer": {
        "name": "rmPlaceObjectDefPerPlayer",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerOwned",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place object definition per player."
    },
    "rmPlaceObjectDefAtAreaLoc": {
        "name": "rmPlaceObjectDefAtAreaLoc",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place object definition for the player at the given area's location."
    },
    "rmPlaceObjectDefInArea": {
        "name": "rmPlaceObjectDefInArea",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place object definition for the player in the given area."
    },
    "rmPlaceObjectDefAtRandomAreaOfClass": {
        "name": "rmPlaceObjectDefAtRandomAreaOfClass",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place object definition for the player at the location of a random area in the given class."
    },
    "rmPlaceObjectDefInRandomAreaOfClass": {
        "name": "rmPlaceObjectDefInRandomAreaOfClass",
        "return_type": "int",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place object definition for the player in a random area in the given class."
    },
    "rmCreateConnection": {
        "name": "rmCreateConnection",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates an connection."
    },
    "rmSetConnectionType": {
        "name": "rmSetConnectionType",
        "return_type": "int",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "connectionType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "connectAll",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "connectPercentage",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the connection type."
    },
    "rmAddConnectionArea": {
        "name": "rmAddConnectionArea",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds an area to the connection."
    },
    "rmSetConnectionPositionVariance": {
        "name": "rmSetConnectionPositionVariance",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the position variance of a connection."
    },
    "rmSetConnectionWidth": {
        "name": "rmSetConnectionWidth",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "width",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the width of a connection."
    },
    "rmSetConnectionBaseHeight": {
        "name": "rmSetConnectionBaseHeight",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "width",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the base height of a connection."
    },
    "rmSetConnectionCoherence": {
        "name": "rmSetConnectionCoherence",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "width",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets area coherence (0-1)."
    },
    "rmSetConnectionWarnFailure": {
        "name": "rmSetConnectionWarnFailure",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "warn",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets whether a connection warns on failure."
    },
    "rmSetConnectionHeightBlend": {
        "name": "rmSetConnectionHeightBlend",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "width",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets how smoothly connection height blends into surroundings."
    },
    "rmSetConnectionSmoothDistance": {
        "name": "rmSetConnectionSmoothDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "width",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets connection edge smoothing distance (distance is number of neighboring points to consider in each direction)."
    },
    "rmAddConnectionTerrainReplacement": {
        "name": "rmAddConnectionTerrainReplacement",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrainTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "newTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a terrain replacement rule to the connection."
    },
    "rmSetConnectionTerrainCost": {
        "name": "rmSetConnectionTerrainCost",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrainTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cost",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the terrain cost for a connection."
    },
    "rmSetConnectionBaseTerrainCost": {
        "name": "rmSetConnectionBaseTerrainCost",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cost",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the base terrain cost for a connection."
    },
    "rmBuildConnection": {
        "name": "rmBuildConnection",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Builds the given connection."
    },
    "rmAddConnectionToClass": {
        "name": "rmAddConnectionToClass",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the connection to specified class."
    },
    "rmAddConnectionConstraint": {
        "name": "rmAddConnectionConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add specified constraint to a connection."
    },
    "rmAddConnectionStartConstraint": {
        "name": "rmAddConnectionStartConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add specified constraint for a connection start point."
    },
    "rmAddConnectionEndConstraint": {
        "name": "rmAddConnectionEndConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "connectionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add specified constraint for a connection end point."
    },
    "rmSetStatusText": {
        "name": "rmSetStatusText",
        "return_type": "void",
        "params": [
            {
                "name": "status",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "progress",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the friendly cool loading screen text."
    },
    "rmCreateGrouping": {
        "name": "rmCreateGrouping",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a grouping."
    },
    "rmAddGroupingConstraint": {
        "name": "rmAddGroupingConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "GroupingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add specified constraint to a grouping."
    },
    "rmPlaceGroupingAtLoc": {
        "name": "rmPlaceGroupingAtLoc",
        "return_type": "int",
        "params": [
            {
                "name": "groupingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place grouping at specified location."
    },
    "rmPlaceGroupingAtPoint": {
        "name": "rmPlaceGroupingAtPoint",
        "return_type": "int",
        "params": [
            {
                "name": "groupingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "point",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place grouping at specified point."
    },
    "rmPlaceGroupingInArea": {
        "name": "rmPlaceGroupingInArea",
        "return_type": "int",
        "params": [
            {
                "name": "groupingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "placeCount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Place grouping for the player in the given area."
    },
    "rmSetGroupingMinDistance": {
        "name": "rmSetGroupingMinDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the minimum distance for the grouping (in meters)."
    },
    "rmSetGroupingMaxDistance": {
        "name": "rmSetGroupingMaxDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "defID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the maximum distance for the grouping (in meters)."
    },
    "rmAddGroupingToClass": {
        "name": "rmAddGroupingToClass",
        "return_type": "bool",
        "params": [
            {
                "name": "GroupingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add given grouping to specified class."
    },
    "rmCreateTradeRoute": {
        "name": "rmCreateTradeRoute",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a trade route."
    },
    "rmAddTradeRouteWaypoint": {
        "name": "rmAddTradeRouteWaypoint",
        "return_type": "bool",
        "params": [
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the given waypoint to the specified trade route."
    },
    "rmAddTradeRouteWaypointVector": {
        "name": "rmAddTradeRouteWaypointVector",
        "return_type": "bool",
        "params": [
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the given waypoint to the specified trade route."
    },
    "rmAddRandomTradeRouteWaypoints": {
        "name": "rmAddRandomTradeRouteWaypoints",
        "return_type": "bool",
        "params": [
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "endXFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "endZFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds random waypoints to the specified trade route."
    },
    "rmAddRandomTradeRouteWaypointsVector": {
        "name": "rmAddRandomTradeRouteWaypointsVector",
        "return_type": "bool",
        "params": [
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds random waypoints to the specified trade route."
    },
    "rmCreateTradeRouteWaypointsInArea": {
        "name": "rmCreateTradeRouteWaypointsInArea",
        "return_type": "bool",
        "params": [
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "length",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a trade route in the specified area."
    },
    "rmGetTradeRouteWayPoint": {
        "name": "rmGetTradeRouteWayPoint",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Retrieves a waypoint along the trade route based on the fraction."
    },
    "rmBuildTradeRoute": {
        "name": "rmBuildTradeRoute",
        "return_type": "bool",
        "params": [
            {
                "name": "tradeRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "terrainTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Builds the trade route with the given terrain type."
    },
    "rmSetHomeCityGatherPoint": {
        "name": "rmSetHomeCityGatherPoint",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "point",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the HCGP for the given player."
    },
    "rmSetHomeCityWaterSpawnPoint": {
        "name": "rmSetHomeCityWaterSpawnPoint",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "point",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the HCWSP for the given player."
    },
    "rmGetLowHomeCityLevel": {
        "name": "rmGetLowHomeCityLevel",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the lowest HC Level of the players in the game."
    },
    "rmGetAverageHomeCityLevel": {
        "name": "rmGetAverageHomeCityLevel",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the average (rounded down) HC Level of the players in the game."
    },
    "rmGetHighHomeCityLevel": {
        "name": "rmGetHighHomeCityLevel",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the highest HC Level of the players in the game."
    },
    "rmGetHomeCityLevel": {
        "name": "rmGetHomeCityLevel",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the HC Level of the given player."
    },
    "rmGetUnitPosition": {
        "name": "rmGetUnitPosition",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the position of the unit."
    },
    "rmSetMapType": {
        "name": "rmSetMapType",
        "return_type": "void",
        "params": [
            {
                "name": "type",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Indicates that this map is of a certain type (it can be multiple types simultaneously."
    },
    "rmIsMapType": {
        "name": "rmIsMapType",
        "return_type": "bool",
        "params": [
            {
                "name": "type",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the map belongs to the given type."
    },
    "rmAddClosestPointConstraint": {
        "name": "rmAddClosestPointConstraint",
        "return_type": "bool",
        "params": [
            {
                "name": "constraintID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds constraint to closest point finder."
    },
    "rmClearClosestPointConstraints": {
        "name": "rmClearClosestPointConstraints",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Clears constraints for closest point finder."
    },
    "rmFindClosestPoint": {
        "name": "rmFindClosestPoint",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Finds closest point satisfying the preset constraints."
    },
    "rmFindClosestPointVector": {
        "name": "rmFindClosestPointVector",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Finds closest point satisfying the preset constraints."
    },
    "rmFindCloserArea": {
        "name": "rmFindCloserArea",
        "return_type": "int",
        "params": [
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "area1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "area2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns which area is closer."
    },
    "rmAddAreaCliffWaypoint": {
        "name": "rmAddAreaCliffWaypoint",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "xFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "zFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the given waypoint to the specified cliff area (for valleys)."
    },
    "rmAddAreaCliffRandomWaypoints": {
        "name": "rmAddAreaCliffRandomWaypoints",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "endXFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "endZFraction",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxVariation",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds random waypoints to the specified cliff valley area."
    },
    "rmSetNuggetDifficulty": {
        "name": "rmSetNuggetDifficulty",
        "return_type": "void",
        "params": [
            {
                "name": "minLevel",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxLevel",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the min/max difficulty levels for placing nuggets."
    },
    "rmSetOceanReveal": {
        "name": "rmSetOceanReveal",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets whether or not to reveal oceans."
    },
    "hcSetXSHandler": {
        "name": "hcSetXSHandler",
        "return_type": "bool",
        "params": [
            {
                "name": "handlerFunctionName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the handler for given type of event."
    },
    "hcSetUnitXSHandler": {
        "name": "hcSetUnitXSHandler",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "handlerFunctionName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the handler for a unit for a given type of event."
    },
    "hcRandInt": {
        "name": "hcRandInt",
        "return_type": "int",
        "params": [
            {
                "name": "max",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a random number (mod'ed by max if provided)."
    },
    "hcRandPosition": {
        "name": "hcRandPosition",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a random position guaranteed to be on the map."
    },
    "hcGetMyUnitID": {
        "name": "hcGetMyUnitID",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the HomeCity Unit ID for this unit."
    },
    "hcUnitGetGroupID": {
        "name": "hcUnitGetGroupID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the HomeCity group ID for this unit."
    },
    "hcUnitGetPosition": {
        "name": "hcUnitGetPosition",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the position of the unit."
    },
    "hcUnitGetActionType": {
        "name": "hcUnitGetActionType",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the action type of the unit."
    },
    "hcUnitGoIdle": {
        "name": "hcUnitGoIdle",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes the unit go into idle mode forever."
    },
    "hcUnitGetScript": {
        "name": "hcUnitGetScript",
        "return_type": "string",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the script for the unit."
    },
    "hcGetNumUnlockedUnits": {
        "name": "hcGetNumUnlockedUnits",
        "return_type": "int",
        "params": [
            {
                "name": "regularUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "performerUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of unlocked units available."
    },
    "hcGetUnlockedUnitProtoUnitID": {
        "name": "hcGetUnlockedUnitProtoUnitID",
        "return_type": "int",
        "params": [
            {
                "name": "unitIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "regularUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "performerUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the proto unit ID for an unlocked unit."
    },
    "hcGetUnlockedUnitVisualFilename": {
        "name": "hcGetUnlockedUnitVisualFilename",
        "return_type": "string",
        "params": [
            {
                "name": "unitIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "regularUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "performerUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the visual file name for an unlocked unit."
    },
    "hcGetUnlockedUnitScriptFilename": {
        "name": "hcGetUnlockedUnitScriptFilename",
        "return_type": "string",
        "params": [
            {
                "name": "unitIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "regularUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "performerUnits",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the script file name for an unlocked unit."
    },
    "hcUnitGetPerformPosFromGroup": {
        "name": "hcUnitGetPerformPosFromGroup",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "groupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the performance position for a unit."
    },
    "hcUnitGetPerformForwardFromGroup": {
        "name": "hcUnitGetPerformForwardFromGroup",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "groupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the performance forward vector for a unit."
    },
    "hcUnitCreateUsingPos": {
        "name": "hcUnitCreateUsingPos",
        "return_type": "int",
        "params": [
            {
                "name": "protoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "visualFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "aiFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "forward",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "visible",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a unit; specify either protoUnitID or visualFilename; returns the new unit's ID."
    },
    "hcUnitCreate": {
        "name": "hcUnitCreate",
        "return_type": "int",
        "params": [
            {
                "name": "protoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "visualFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "aiFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waypoint",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a unit; specify either protoUnitID or visualFilename; returns the new unit's ID."
    },
    "hcUnitCreateAtBone": {
        "name": "hcUnitCreateAtBone",
        "return_type": "int",
        "params": [
            {
                "name": "protoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "visualFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "aiFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "boneName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a unit at the bone position; specify either protoUnitID or visualFilename; returns the new unit's ID."
    },
    "hcPopulateHomeCity": {
        "name": "hcPopulateHomeCity",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Populates the home city with all units needed."
    },
    "hcUnitGetInitialPauseTime": {
        "name": "hcUnitGetInitialPauseTime",
        "return_type": "float",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the initial time a unit should pause before spawning."
    },
    "hcUnitSetInitialPauseTime": {
        "name": "hcUnitSetInitialPauseTime",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pauseTime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the initial time a unit should pause before spawning."
    },
    "hcUnitSetFlag": {
        "name": "hcUnitSetFlag",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitFlag",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "enable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Enables / disables a unit's flag."
    },
    "hcCreatePerformerGroup": {
        "name": "hcCreatePerformerGroup",
        "return_type": "int",
        "params": [
            {
                "name": "numPerformers",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "attentionRadius",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a performer group."
    },
    "hcReservePerformerArea": {
        "name": "hcReservePerformerArea",
        "return_type": "bool",
        "params": [
            {
                "name": "groupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Reserves a performer area."
    },
    "hcGetNumPerformerGroups": {
        "name": "hcGetNumPerformerGroups",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns how many performer groups are currently playing."
    },
    "hcAddUnitToPerformerGroup": {
        "name": "hcAddUnitToPerformerGroup",
        "return_type": "void",
        "params": [
            {
                "name": "groupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a unit to a group of performers."
    },
    "hcUnitExit": {
        "name": "hcUnitExit",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Exits the unit (this will kill the unit)."
    },
    "hcUnitDestroyAll": {
        "name": "hcUnitDestroyAll",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Nukes all HC units."
    },
    "hcUnitPlayAnim": {
        "name": "hcUnitPlayAnim",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "animation",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "seconds",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "loop",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the anim for the unit."
    },
    "hcUnitMoveToWPID": {
        "name": "hcUnitMoveToWPID",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "startWPID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalWPID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "speed",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalTolerance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Walks the unit to the WPID."
    },
    "hcUnitMoveToPos": {
        "name": "hcUnitMoveToPos",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "startWPID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "BVector",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalPos",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "speed",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalTolerance",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Walks the unit to the position."
    },
    "hcUnitTurn": {
        "name": "hcUnitTurn",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "BVector",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "forward",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "turnRateInDegreesPerSec",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Turns the unit towards the forward vector."
    },
    "hcUnitTeleportToWPID": {
        "name": "hcUnitTeleportToWPID",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "WPID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves the unit to the given waypoint immediately."
    },
    "hcUnitFollow": {
        "name": "hcUnitFollow",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitToFollowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "speed",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Unit follows another unit."
    },
    "hcUnitExitBuilding": {
        "name": "hcUnitExitBuilding",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pauseTime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "speed",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Unit exits a building."
    },
    "hcUnitEnterBuilding": {
        "name": "hcUnitEnterBuilding",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "speed",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Unit enters a building."
    },
    "hcUnitSetVisible": {
        "name": "hcUnitSetVisible",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "state",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes unit visible/invisible."
    },
    "hcUnitWait": {
        "name": "hcUnitWait",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pauseTime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes script wait a number of seconds"
    },
    "hcUnitFreeWPID": {
        "name": "hcUnitFreeWPID",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "wpid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "queue",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Frees the given waypoint."
    },
    "hcOccupyWPID": {
        "name": "hcOccupyWPID",
        "return_type": "void",
        "params": [
            {
                "name": "wpid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Occupies the given waypoint."
    },
    "hcGetNumberUnitsWithAI": {
        "name": "hcGetNumberUnitsWithAI",
        "return_type": "int",
        "params": [
            {
                "name": "aiFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of units with a given AI filename."
    },
    "hcGetUnitWithAI": {
        "name": "hcGetUnitWithAI",
        "return_type": "int",
        "params": [
            {
                "name": "aiFilename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the index-th unit with the given AI filename."
    },
    "hcGetPerformerInProximity": {
        "name": "hcGetPerformerInProximity",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the index-th performer unit in the proximity."
    },
    "hcGetNumberWaypoints": {
        "name": "hcGetNumberWaypoints",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of waypoints."
    },
    "hcGetWaypointPos": {
        "name": "hcGetWaypointPos",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waypoint",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the position for a waypoint."
    },
    "hcGetWaypointDir": {
        "name": "hcGetWaypointDir",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waypoint",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the direction for a waypoint."
    },
    "hcGetNearestWPID": {
        "name": "hcGetNearestWPID",
        "return_type": "int",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the WPID closest to the position."
    },
    "hcGetRandomWPID": {
        "name": "hcGetRandomWPID",
        "return_type": "int",
        "params": [
            {
                "name": "waypointMask",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the WPID of a random waypoint."
    },
    "hcGetRandomFreeWPID": {
        "name": "hcGetRandomFreeWPID",
        "return_type": "int",
        "params": [
            {
                "name": "waypointMask",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the WPID of a random waypoint."
    },
    "hcGetBuildingIDByName": {
        "name": "hcGetBuildingIDByName",
        "return_type": "int",
        "params": [
            {
                "name": "buildingName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID for a building with the specified name."
    },
    "aiEcho": {
        "name": "aiEcho",
        "return_type": "void",
        "params": [
            {
                "name": "echoString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "CP AI echo."
    },
    "aiErrorMessage": {
        "name": "aiErrorMessage",
        "return_type": "void",
        "params": [
            {
                "name": "errorString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "CP AI error."
    },
    "aiRandSetSeed": {
        "name": "aiRandSetSeed",
        "return_type": "void",
        "params": [
            {
                "name": "seed",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the seed of the random number generator."
    },
    "aiRandInt": {
        "name": "aiRandInt",
        "return_type": "int",
        "params": [
            {
                "name": "max",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a random number (mod'ed by max if provided)."
    },
    "aiRandLocation": {
        "name": "aiRandLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a random location guaranteed to be on the map."
    },
    "aiSet": {
        "name": "aiSet",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets playerID's AI to the given filename."
    },
    "aiBreakpointSet": {
        "name": "aiBreakpointSet",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "d",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets a breakpoint."
    },
    "aiBreakpointGo": {
        "name": "aiBreakpointGo",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Restart XS execution after the current breakpoint."
    },
    "aiGetPersonality": {
        "name": "aiGetPersonality",
        "return_type": "string",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the player's personality."
    },
    "aiPersonalityGetRushBoom": {
        "name": "aiPersonalityGetRushBoom",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the rush boom scale for this ai."
    },
    "aiPersonalityGetNumberPlayerHistories": {
        "name": "aiPersonalityGetNumberPlayerHistories",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of player's in the Personality's history."
    },
    "aiPersonalityCreatePlayerHistory": {
        "name": "aiPersonalityCreatePlayerHistory",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates are player history for the given playername."
    },
    "aiPersonalityResetPlayerHistory": {
        "name": "aiPersonalityResetPlayerHistory",
        "return_type": "bool",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the given player history."
    },
    "aiPersonalityGetPlayerHistoryName": {
        "name": "aiPersonalityGetPlayerHistoryName",
        "return_type": "string",
        "params": [
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the name of the index'th player in the Personality's history."
    },
    "aiPersonalityGetPlayerHistoryIndex": {
        "name": "aiPersonalityGetPlayerHistoryIndex",
        "return_type": "int",
        "params": [
            {
                "name": "searchPlayerName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a playerHistoryIndex if this personality has played searchPlayerName before."
    },
    "aiPersonalityGetPlayerUserVar": {
        "name": "aiPersonalityGetPlayerUserVar",
        "return_type": "float",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "userVarName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the user value, given the playerHistoryIndex and the userVarName."
    },
    "aiPersonalitySetPlayerUserVar": {
        "name": "aiPersonalitySetPlayerUserVar",
        "return_type": "bool",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "userVarName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "val",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the value, given the playerHistoryIndex, userVarName (max 255 chars), and value."
    },
    "aiPersonalityGetPlayerGamesPlayed": {
        "name": "aiPersonalityGetPlayerGamesPlayed",
        "return_type": "int",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerRelation",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of games played against/with the given the playerHistoryIndex."
    },
    "aiPersonalityGetGameResource": {
        "name": "aiPersonalityGetGameResource",
        "return_type": "float",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "gameIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the given resource from the gameIndex game. If gameIndex is -1, this will return the avg of all games played."
    },
    "aiPersonalityGetGameUnitCount": {
        "name": "aiPersonalityGetGameUnitCount",
        "return_type": "int",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "gameIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the unit count from the gameIndex game. If gameIndex is -1, this will return the avg of all games played."
    },
    "aiPersonalityGetGameFirstAttackTime": {
        "name": "aiPersonalityGetGameFirstAttackTime",
        "return_type": "int",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "gameIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the 1st attacktime from the gameIndex game."
    },
    "aiPersonalityGetTotalGameWins": {
        "name": "aiPersonalityGetTotalGameWins",
        "return_type": "int",
        "params": [
            {
                "name": "playerHistoryIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerRelation",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the total games the given player has won against this AI"
    },
    "aiGetMostHatedPlayerID": {
        "name": "aiGetMostHatedPlayerID",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the script-defined most hated player ID for this player."
    },
    "aiCalculateMostHatedPlayerID": {
        "name": "aiCalculateMostHatedPlayerID",
        "return_type": "int",
        "params": [
            {
                "name": "comparePlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the playerID for the player the AI thinks it should be attacking."
    },
    "aiSetMostHatedPlayerID": {
        "name": "aiSetMostHatedPlayerID",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the script-defined most hated player ID for this player."
    },
    "aiGetAvailableEconomyPop": {
        "name": "aiGetAvailableEconomyPop",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the available economy pop for this player."
    },
    "aiGetCurrentEconomyPop": {
        "name": "aiGetCurrentEconomyPop",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current economy pop for this player."
    },
    "aiGetEconomyPop": {
        "name": "aiGetEconomyPop",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the script-defined economy pop for this player."
    },
    "aiSetEconomyPop": {
        "name": "aiSetEconomyPop",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the script-defined economy pop for this player."
    },
    "aiGetAvailableMilitaryPop": {
        "name": "aiGetAvailableMilitaryPop",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the script-defined military pop for this player."
    },
    "aiGetMilitaryPop": {
        "name": "aiGetMilitaryPop",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the script-defined military pop for this player."
    },
    "aiSetMilitaryPop": {
        "name": "aiSetMilitaryPop",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the script-defined military pop for this player."
    },
    "aiGetEconomyPercentage": {
        "name": "aiGetEconomyPercentage",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the economy priority percentage."
    },
    "aiSetEconomyPercentage": {
        "name": "aiSetEconomyPercentage",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the economy priority percentage."
    },
    "aiGetMilitaryPercentage": {
        "name": "aiGetMilitaryPercentage",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the militarypriority percentage."
    },
    "aiSetMilitaryPercentage": {
        "name": "aiSetMilitaryPercentage",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the military priority percentage."
    },
    "aiGetAttackResponseDistance": {
        "name": "aiGetAttackResponseDistance",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the attack response distance."
    },
    "aiSetAttackResponseDistance": {
        "name": "aiSetAttackResponseDistance",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Set the attack response distance."
    },
    "aiGoalGetNumber": {
        "name": "aiGoalGetNumber",
        "return_type": "int",
        "params": [
            {
                "name": "goalType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of matching goals."
    },
    "aiGoalGetIDByIndex": {
        "name": "aiGoalGetIDByIndex",
        "return_type": "int",
        "params": [
            {
                "name": "goalType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of matching goal."
    },
    "aiPlanGetNumber": {
        "name": "aiPlanGetNumber",
        "return_type": "int",
        "params": [
            {
                "name": "planType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of matching plans."
    },
    "aiPlanGetIDByIndex": {
        "name": "aiPlanGetIDByIndex",
        "return_type": "int",
        "params": [
            {
                "name": "planType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of matching plan."
    },
    "aiPlanCreate": {
        "name": "aiPlanCreate",
        "return_type": "int",
        "params": [
            {
                "name": "planName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "typeName",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a plan of the given name and type."
    },
    "aiPlanDestroy": {
        "name": "aiPlanDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the given plan."
    },
    "aiPlanDestroyByName": {
        "name": "aiPlanDestroyByName",
        "return_type": "bool",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the plan of the given name."
    },
    "aiPlanGetID": {
        "name": "aiPlanGetID",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the plan with the given name."
    },
    "aiPlanGetIDSubStr": {
        "name": "aiPlanGetIDSubStr",
        "return_type": "int",
        "params": [
            {
                "name": "searchStr",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the first plan containing the given string in its name."
    },
    "aiPlanGetIDByTypeAndVariableType": {
        "name": "aiPlanGetIDByTypeAndVariableType",
        "return_type": "int",
        "params": [
            {
                "name": "planType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "varType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "varID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the plan with the given parms."
    },
    "aiPlanGetIDByActiveIndex": {
        "name": "aiPlanGetIDByActiveIndex",
        "return_type": "int",
        "params": [
            {
                "name": "activeIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the plan with the given active index."
    },
    "aiPlanGetName": {
        "name": "aiPlanGetName",
        "return_type": "string",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the name of the given plan."
    },
    "aiPlanGetType": {
        "name": "aiPlanGetType",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the type of the given plan."
    },
    "aiPlanGetState": {
        "name": "aiPlanGetState",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the state of the given plan."
    },
    "aiPlanGetActualPriority": {
        "name": "aiPlanGetActualPriority",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the priority of the given plan."
    },
    "aiPlanGetDesiredPriority": {
        "name": "aiPlanGetDesiredPriority",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the priority of the given plan."
    },
    "aiPlanSetDesiredPriority": {
        "name": "aiPlanSetDesiredPriority",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "priority",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the priority of the given plan."
    },
    "aiPlanAddUnitType": {
        "name": "aiPlanAddUnitType",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberNeed",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberWant",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberMax",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a unit type to the plan."
    },
    "aiPlanGetNumberUnits": {
        "name": "aiPlanGetNumberUnits",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of units currently assigned in the given plan."
    },
    "aiPlanAddUnit": {
        "name": "aiPlanAddUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds a unit to the plan."
    },
    "aiPlanGetLocation": {
        "name": "aiPlanGetLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the location for this plan."
    },
    "aiPlanGetInitialPosition": {
        "name": "aiPlanGetInitialPosition",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the initial positon that was set for this plan."
    },
    "aiPlanSetInitialPosition": {
        "name": "aiPlanSetInitialPosition",
        "return_type": "void",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "initialPosition",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the initial positon for this plan."
    },
    "aiPlanSetWaypoints": {
        "name": "aiPlanSetWaypoints",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the waypoints of the given plan to the waypoints of the given path."
    },
    "aiPlanAddWaypoint": {
        "name": "aiPlanAddWaypoint",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waypoint",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the waypoint to the given plan."
    },
    "aiPlanGetNumberVariableValues": {
        "name": "aiPlanGetNumberVariableValues",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of values for this variable index."
    },
    "aiPlanSetNumberVariableValues": {
        "name": "aiPlanSetNumberVariableValues",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberValues",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "clearCurrentValues",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the number of values for this variable."
    },
    "aiPlanRemoveVariableValue": {
        "name": "aiPlanRemoveVariableValue",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes the index-th value of the variable."
    },
    "aiPlanSetVariableInt": {
        "name": "aiPlanSetVariableInt",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetVariableInt": {
        "name": "aiPlanGetVariableInt",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanSetVariableFloat": {
        "name": "aiPlanSetVariableFloat",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetVariableFloat": {
        "name": "aiPlanGetVariableFloat",
        "return_type": "float",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanSetVariableVector": {
        "name": "aiPlanSetVariableVector",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetVariableVector": {
        "name": "aiPlanGetVariableVector",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanSetVariableBool": {
        "name": "aiPlanSetVariableBool",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetVariableBool": {
        "name": "aiPlanGetVariableBool",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanSetVariableString": {
        "name": "aiPlanSetVariableString",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetVariableString": {
        "name": "aiPlanGetVariableString",
        "return_type": "string",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanGetNumberUserVariableValues": {
        "name": "aiPlanGetNumberUserVariableValues",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of values for this variable index."
    },
    "aiPlanSetNumberUserVariableValues": {
        "name": "aiPlanSetNumberUserVariableValues",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberValues",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "clearCurrentValues",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the number of values for this variable."
    },
    "aiPlanRemoveUserVariables": {
        "name": "aiPlanRemoveUserVariables",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes all of the user variables from the given plan."
    },
    "aiPlanRemoveUserVariable": {
        "name": "aiPlanRemoveUserVariable",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes the user variable."
    },
    "aiPlanRemoveUserVariableValue": {
        "name": "aiPlanRemoveUserVariableValue",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "variableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes the index-th value of the user variable."
    },
    "aiPlanAddUserVariableInt": {
        "name": "aiPlanAddUserVariableInt",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberValues",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the variable to the given plan."
    },
    "aiPlanSetUserVariableInt": {
        "name": "aiPlanSetUserVariableInt",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetUserVariableInt": {
        "name": "aiPlanGetUserVariableInt",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanAddUserVariableFloat": {
        "name": "aiPlanAddUserVariableFloat",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberValues",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the variable to the given plan."
    },
    "aiPlanSetUserVariableFloat": {
        "name": "aiPlanSetUserVariableFloat",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetUserVariableFloat": {
        "name": "aiPlanGetUserVariableFloat",
        "return_type": "float",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanAddUserVariableVector": {
        "name": "aiPlanAddUserVariableVector",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberValues",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the variable to the given plan."
    },
    "aiPlanSetUserVariableVector": {
        "name": "aiPlanSetUserVariableVector",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetUserVariableVector": {
        "name": "aiPlanGetUserVariableVector",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanAddUserVariableBool": {
        "name": "aiPlanAddUserVariableBool",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberValues",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the variable to the given plan."
    },
    "aiPlanSetUserVariableBool": {
        "name": "aiPlanSetUserVariableBool",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetUserVariableBool": {
        "name": "aiPlanGetUserVariableBool",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanAddUserVariableString": {
        "name": "aiPlanAddUserVariableString",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberValues",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the variable to the given plan."
    },
    "aiPlanSetUserVariableString": {
        "name": "aiPlanSetUserVariableString",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the given variable of the given plan."
    },
    "aiPlanGetUserVariableString": {
        "name": "aiPlanGetUserVariableString",
        "return_type": "string",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planVariableIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "valueIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the given variable of the given plan."
    },
    "aiPlanGetActive": {
        "name": "aiPlanGetActive",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the active-ness of the given plan."
    },
    "aiPlanSetActive": {
        "name": "aiPlanSetActive",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets active on/off for the given plan."
    },
    "aiPlanGetNoMoreUnits": {
        "name": "aiPlanGetNoMoreUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the noMoreUnits-ness of the given plan."
    },
    "aiPlanSetNoMoreUnits": {
        "name": "aiPlanSetNoMoreUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets noMoreUnits on/off for the given plan."
    },
    "aiPlanGetOrphan": {
        "name": "aiPlanGetOrphan",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the orphan-ness of the given plan."
    },
    "aiPlanSetOrphan": {
        "name": "aiPlanSetOrphan",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "orphan",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets orphan on/off for the given plan."
    },
    "aiPlanGetAllowUnderAttackResponse": {
        "name": "aiPlanGetAllowUnderAttackResponse",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the UA response-ness of the given plan."
    },
    "aiPlanSetAllowUnderAttackResponse": {
        "name": "aiPlanSetAllowUnderAttackResponse",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "uAR",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets under attack response on/off for the given plan."
    },
    "aiPlanGetUnitStance": {
        "name": "aiPlanGetUnitStance",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit stance of the given plan."
    },
    "aiPlanSetUnitStance": {
        "name": "aiPlanSetUnitStance",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stance",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets unit stance for the given plan."
    },
    "aiPlanSetRequiresAllNeedUnits": {
        "name": "aiPlanSetRequiresAllNeedUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "rANU",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets 'requiresAllNeedUnits' on/off for the given plan."
    },
    "aiPlanSetEventHandler": {
        "name": "aiPlanSetEventHandler",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "handlerName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets event handler function for the given plan and event."
    },
    "aiPlanSetEscrowID": {
        "name": "aiPlanSetEscrowID",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the escrow for the plan."
    },
    "aiPlanGetEscrowID": {
        "name": "aiPlanGetEscrowID",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the escrow for the plan."
    },
    "aiPlanGetEconomy": {
        "name": "aiPlanGetEconomy",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the economy flag of the given plan."
    },
    "aiPlanSetEconomy": {
        "name": "aiPlanSetEconomy",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets economy on/off for the given plan."
    },
    "aiPlanGetMilitary": {
        "name": "aiPlanGetMilitary",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the military flag of the given plan."
    },
    "aiPlanSetMilitary": {
        "name": "aiPlanSetMilitary",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets military on/off for the given plan."
    },
    "aiPlanGetAttack": {
        "name": "aiPlanGetAttack",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the attack flag of the given plan."
    },
    "aiPlanSetAttack": {
        "name": "aiPlanSetAttack",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets attack flag on/off for the given plan."
    },
    "aiPlanSetBaseID": {
        "name": "aiPlanSetBaseID",
        "return_type": "bool",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the plan's base id."
    },
    "aiPlanGetBaseID": {
        "name": "aiPlanGetBaseID",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the plan's base id."
    },
    "aiGetNumberIdlePlans": {
        "name": "aiGetNumberIdlePlans",
        "return_type": "int",
        "params": [
            {
                "name": "planType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the of idle plans of the given type."
    },
    "aiPlanGetUnitCost": {
        "name": "aiPlanGetUnitCost",
        "return_type": "float",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "considerHitPoints",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets total aiCost of plan's units, weighted for HP if requested."
    },
    "aiCommsAllowChat": {
        "name": "aiCommsAllowChat",
        "return_type": "void",
        "params": [
            {
                "name": "flag",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "enables or disables the chats from this ai player."
    },
    "aiCommsSendStatement": {
        "name": "aiCommsSendStatement",
        "return_type": "int",
        "params": [
            {
                "name": "targetPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "promptType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sends a statement to the designated player."
    },
    "aiCommsSendStatementWithVector": {
        "name": "aiCommsSendStatementWithVector",
        "return_type": "int",
        "params": [
            {
                "name": "targetPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "promptType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sends a statement to the designated player. Adds a location flare."
    },
    "aiCommsSetEventHandler": {
        "name": "aiCommsSetEventHandler",
        "return_type": "bool",
        "params": [
            {
                "name": "handlerFunctionName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the handler for the communications system (invalid name unsets the handler)."
    },
    "aiCommsGetSendingPlayer": {
        "name": "aiCommsGetSendingPlayer",
        "return_type": "int",
        "params": [
            {
                "name": "sentenceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "get sending player for specified sentence."
    },
    "aiCommsGetChatVerb": {
        "name": "aiCommsGetChatVerb",
        "return_type": "int",
        "params": [
            {
                "name": "sentenceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "get chat verb for specified sentence."
    },
    "aiCommsGetChatTargetType": {
        "name": "aiCommsGetChatTargetType",
        "return_type": "int",
        "params": [
            {
                "name": "sentenceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "get target type for specified sentence."
    },
    "aiCommsGetTargetListCount": {
        "name": "aiCommsGetTargetListCount",
        "return_type": "int",
        "params": [
            {
                "name": "sentenceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "get number of items in target list for specified sentence."
    },
    "aiCommsGetTargetListItem": {
        "name": "aiCommsGetTargetListItem",
        "return_type": "int",
        "params": [
            {
                "name": "sentenceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "get index item from specified sentence."
    },
    "aiCommsGetTargetLocation": {
        "name": "aiCommsGetTargetLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "sentenceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "get target location from specified sentence."
    },
    "aiCommsSendReply": {
        "name": "aiCommsSendReply",
        "return_type": "void",
        "params": [
            {
                "name": "sentenceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "responseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "send a reply to a sentence."
    },
    "aiSetHandler": {
        "name": "aiSetHandler",
        "return_type": "bool",
        "params": [
            {
                "name": "handlerFunctionName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the handler for given type of event."
    },
    "aiTaskUnitMove": {
        "name": "aiTaskUnitMove",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Does a lightweight (no plan) move tasking of the given unit to the given location."
    },
    "aiTaskUnitWork": {
        "name": "aiTaskUnitWork",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targetUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Does a lightweight (no plan) work tasking of the given unit on the given target unit."
    },
    "aiTaskUnitBuild": {
        "name": "aiTaskUnitBuild",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "buildingTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Does a lightweight (no plan) build tasking of the given unit to build the given building."
    },
    "aiTaskUnitTrain": {
        "name": "aiTaskUnitTrain",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Does a lightweight (no plan) train tasking of the given unit for the given target unit type."
    },
    "aiTaskUnitResearch": {
        "name": "aiTaskUnitResearch",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Does a lightweight (no plan) research tasking of the given unit for the given tech ID."
    },
    "aiTaskUnitDelete": {
        "name": "aiTaskUnitDelete",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Deletes the given unit."
    },
    "aiTribute": {
        "name": "aiTribute",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "amount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Tributes the given player."
    },
    "aiSellResourceOnMarket": {
        "name": "aiSellResourceOnMarket",
        "return_type": "bool",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sells (+100) the given resource."
    },
    "aiBuyResourceOnMarket": {
        "name": "aiBuyResourceOnMarket",
        "return_type": "bool",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "buys (+100) the given resource."
    },
    "aiGetMarketBuyCost": {
        "name": "aiGetMarketBuyCost",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the amount required to buy 100 units of the given resource."
    },
    "aiGetMarketSellCost": {
        "name": "aiGetMarketSellCost",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the amount received for selling 100 units of the given resource."
    },
    "aiGetResourceGathererPercentageWeight": {
        "name": "aiGetResourceGathererPercentageWeight",
        "return_type": "float",
        "params": [
            {
                "name": "rgpIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the RGP weight."
    },
    "aiSetResourceGathererPercentageWeight": {
        "name": "aiSetResourceGathererPercentageWeight",
        "return_type": "void",
        "params": [
            {
                "name": "rgpIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "weight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the RGP weight."
    },
    "aiNormalizeResourceGathererPercentageWeights": {
        "name": "aiNormalizeResourceGathererPercentageWeights",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Normalizes all of the resource gatherer percentages weights to 1.0."
    },
    "aiGetResourceGathererPercentage": {
        "name": "aiGetResourceGathererPercentage",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "rgpIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the resource gatherer percentage for the given resource."
    },
    "aiSetResourceGathererPercentage": {
        "name": "aiSetResourceGathererPercentage",
        "return_type": "void",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "normalize",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "rgpIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the resource gatherer percentage for the given resource (if normalized is true, the percentages will be normalized to 1.0)."
    },
    "aiNormalizeResourceGathererPercentages": {
        "name": "aiNormalizeResourceGathererPercentages",
        "return_type": "void",
        "params": [
            {
                "name": "rgpIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Normalizes all of the resource gatherer percentages to 1.0."
    },
    "aiGetResourceBreakdownNumberPlans": {
        "name": "aiGetResourceBreakdownNumberPlans",
        "return_type": "int",
        "params": [
            {
                "name": "resourceTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the number of plans for the given breakdown."
    },
    "aiGetResourceBreakdownPlanPriority": {
        "name": "aiGetResourceBreakdownPlanPriority",
        "return_type": "int",
        "params": [
            {
                "name": "resourceTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the priority of the plans for the given breakdown."
    },
    "aiGetResourceBreakdownPercentage": {
        "name": "aiGetResourceBreakdownPercentage",
        "return_type": "float",
        "params": [
            {
                "name": "resourceTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the percentage for the given breakdown."
    },
    "aiSetResourceBreakdown": {
        "name": "aiSetResourceBreakdown",
        "return_type": "bool",
        "params": [
            {
                "name": "resourceTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberPlans",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planPriority",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "percentage",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets a subtype breakdown for a resource."
    },
    "aiRemoveResourceBreakdown": {
        "name": "aiRemoveResourceBreakdown",
        "return_type": "bool",
        "params": [
            {
                "name": "resourceTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes the given breakdown."
    },
    "aiGetAutoGatherEscrowID": {
        "name": "aiGetAutoGatherEscrowID",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the auto gather escrow ID."
    },
    "aiSetAutoGatherEscrowID": {
        "name": "aiSetAutoGatherEscrowID",
        "return_type": "void",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the auto gather escrow ID."
    },
    "aiGetAutoFarmEscrowID": {
        "name": "aiGetAutoFarmEscrowID",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the auto Farm escrow ID."
    },
    "aiSetAutoFarmEscrowID": {
        "name": "aiSetAutoFarmEscrowID",
        "return_type": "void",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the auto Farm escrow ID."
    },
    "aiGetFarmLimit": {
        "name": "aiGetFarmLimit",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the per plan farm build limit."
    },
    "aiSetFarmLimit": {
        "name": "aiSetFarmLimit",
        "return_type": "void",
        "params": [
            {
                "name": "limit",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the per plan farm build limit."
    },
    "aiGetAllowBuildings": {
        "name": "aiGetAllowBuildings",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns allow buildings on/off."
    },
    "aiSetAllowBuildings": {
        "name": "aiSetAllowBuildings",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets allow buildings on/off."
    },
    "aiChat": {
        "name": "aiChat",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "chatString",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "CP AI chat to playerID."
    },
    "aiNumberUnassignedUnits": {
        "name": "aiNumberUnassignedUnits",
        "return_type": "int",
        "params": [
            {
                "name": "typeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of unassigned units of the given type."
    },
    "aiNumberUnassignedUnitsByGoal": {
        "name": "aiNumberUnassignedUnitsByGoal",
        "return_type": "int",
        "params": [
            {
                "name": "goalID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of unassigned units based on the goal's unit type(s)."
    },
    "aiCreateOpportunity": {
        "name": "aiCreateOpportunity",
        "return_type": "int",
        "params": [
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targettype",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targetID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targetPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "source",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adds an opportunity to the list and returns the id."
    },
    "aiActivateOpportunity": {
        "name": "aiActivateOpportunity",
        "return_type": "void",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flag",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "activates or deactivates an opportunity on the player's opp list."
    },
    "aiDestroyOpportunity": {
        "name": "aiDestroyOpportunity",
        "return_type": "void",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "remove an opportunity on the player's opp list."
    },
    "aiFindBestOpportunity": {
        "name": "aiFindBestOpportunity",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "finds the best currently scored opp."
    },
    "aiGetOpportunitySourceID": {
        "name": "aiGetOpportunitySourceID",
        "return_type": "int",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the source id from this opportunity"
    },
    "aiGetOpportunitySourceType": {
        "name": "aiGetOpportunitySourceType",
        "return_type": "int",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the source type from this opportunity"
    },
    "aiGetOpportunityRadius": {
        "name": "aiGetOpportunityRadius",
        "return_type": "float",
        "params": [
            {
                "name": "opportunityID",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the radius from this opportunity"
    },
    "aiGetOpportunityTargetPlayerID": {
        "name": "aiGetOpportunityTargetPlayerID",
        "return_type": "int",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the target playerID from this opportunity"
    },
    "aiGetOpportunityTargetType": {
        "name": "aiGetOpportunityTargetType",
        "return_type": "int",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the target type from this opportunity"
    },
    "aiGetOpportunityType": {
        "name": "aiGetOpportunityType",
        "return_type": "int",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the type from this opportunity"
    },
    "aiGetOpportunityLocation": {
        "name": "aiGetOpportunityLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the location from this opportunity"
    },
    "aiGetOpportunityTargetID": {
        "name": "aiGetOpportunityTargetID",
        "return_type": "int",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the target id from this opportunity"
    },
    "aiSetOpportunityTargetType": {
        "name": "aiSetOpportunityTargetType",
        "return_type": "void",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targetType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the target type for this opp."
    },
    "aiSetOpportunityTargetID": {
        "name": "aiSetOpportunityTargetID",
        "return_type": "void",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "targetType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the target id for this opp."
    },
    "aiSetOpportunityRadius": {
        "name": "aiSetOpportunityRadius",
        "return_type": "void",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "radius",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the radius for this opp."
    },
    "aiSetOpportunityLocation": {
        "name": "aiSetOpportunityLocation",
        "return_type": "void",
        "params": [
            {
                "name": "opportunityID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "location",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the location for this opp."
    },
    "aiSetOpportunityScore": {
        "name": "aiSetOpportunityScore",
        "return_type": "bool",
        "params": [
            {
                "name": "oppID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "permission",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "affordable",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "classscore",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "instance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "total",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the score for this opp."
    },
    "aiCastGodPowerAtPosition": {
        "name": "aiCastGodPowerAtPosition",
        "return_type": "bool",
        "params": [
            {
                "name": "godPowerTechID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pos",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Casts the given God power tech, at the specified position."
    },
    "aiGetGodPowerTechIDForSlot": {
        "name": "aiGetGodPowerTechIDForSlot",
        "return_type": "int",
        "params": [
            {
                "name": "slotID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Get the god power tech id from the given slot."
    },
    "aiGetGodPowerProtoIDForTechID": {
        "name": "aiGetGodPowerProtoIDForTechID",
        "return_type": "int",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "translate a granted tech id into a protopower id"
    },
    "aiGetGodPowerType": {
        "name": "aiGetGodPowerType",
        "return_type": "int",
        "params": [
            {
                "name": "protoPowerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "get the type for a ProtoPower"
    },
    "aiFindBestAttackGodPowerPlan": {
        "name": "aiFindBestAttackGodPowerPlan",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "find a valid god power plan to attach to an attack plan"
    },
    "aiFindBestTownDefenseGodPowerPlan": {
        "name": "aiFindBestTownDefenseGodPowerPlan",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "find a valid god power plan to use for town defense"
    },
    "aiGetWorldDifficulty": {
        "name": "aiGetWorldDifficulty",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the world difficulty level."
    },
    "aiSetWorldDifficulty": {
        "name": "aiSetWorldDifficulty",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the world difficulty level."
    },
    "aiGetWorldDifficultyName": {
        "name": "aiGetWorldDifficultyName",
        "return_type": "string",
        "params": [
            {
                "name": "level",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the name of the level."
    },
    "aiGetGameMode": {
        "name": "aiGetGameMode",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the game's mode."
    },
    "aiGetCaptainPlayerID": {
        "name": "aiGetCaptainPlayerID",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the captain for the given player's team."
    },
    "aiGetAutosaveOn": {
        "name": "aiGetAutosaveOn",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns whether or not its cool to turn ai autosaves on."
    },
    "aiGetCurrentResourceNeed": {
        "name": "aiGetCurrentResourceNeed",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the current resource need for the given resource."
    },
    "aiSetAutoGatherMilitaryUnits": {
        "name": "aiSetAutoGatherMilitaryUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Turns auto gathering of military units at bases on/off."
    },
    "aiSetExploreDangerThreshold": {
        "name": "aiSetExploreDangerThreshold",
        "return_type": "bool",
        "params": [
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the ai's Explore Danger Threshold value."
    },
    "aiGetExploreDangerThreshold": {
        "name": "aiGetExploreDangerThreshold",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the ai's Explore Danger Threshold value."
    },
    "aiSetRandomMap": {
        "name": "aiSetRandomMap",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the RM bool in the AI."
    },
    "aiSetPauseAllAgeUpgrades": {
        "name": "aiSetPauseAllAgeUpgrades",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the pause all age upgrades flag in the AI."
    },
    "aiGetPauseAllAgeUpgrades": {
        "name": "aiGetPauseAllAgeUpgrades",
        "return_type": "bool",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the pause all age upgrades flag from the AI."
    },
    "aiSetMinArmySize": {
        "name": "aiSetMinArmySize",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the min number of units in an attack army."
    },
    "aiSetMinNumberNeedForGatheringAggressvies": {
        "name": "aiSetMinNumberNeedForGatheringAggressvies",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the min number of needed units to gather aggressive animals."
    },
    "aiGetMinNumberNeedForGatheringAggressives": {
        "name": "aiGetMinNumberNeedForGatheringAggressives",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the min number of needed units to gather aggressive animals."
    },
    "aiSetMinNumberWantForGatheringAggressives": {
        "name": "aiSetMinNumberWantForGatheringAggressives",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the min number of wanted units to gather aggressive animals."
    },
    "aiGetMinNumberWantForGatheringAggressives": {
        "name": "aiGetMinNumberWantForGatheringAggressives",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the min number of wanted units to gather aggressive animals."
    },
    "aiResign": {
        "name": "aiResign",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "reigns the current player.."
    },
    "aiAttemptResign": {
        "name": "aiAttemptResign",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "asks the player if its ok to resign"
    },
    "aiSetMaxLOSProtoUnitLimit": {
        "name": "aiSetMaxLOSProtoUnitLimit",
        "return_type": "void",
        "params": [
            {
                "name": "limit",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the limit for how many LOS Protounits the AI can build"
    },
    "aiGetMaxLOSProtoUnitLimit": {
        "name": "aiGetMaxLOSProtoUnitLimit",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the limit for how many LOS Protounits the AI can build"
    },
    "aiGetPopNeeds": {
        "name": "aiGetPopNeeds",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the current Pop needs of all the plans."
    },
    "aiSwitchMainBase": {
        "name": "aiSwitchMainBase",
        "return_type": "void",
        "params": [
            {
                "name": "newBaseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "force",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "switch the newBaseID to be the main base."
    },
    "aiSetDefaultStance": {
        "name": "aiSetDefaultStance",
        "return_type": "void",
        "params": [
            {
                "name": "defaultStance",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets your default stance for all of your units."
    },
    "aiSetWaterMap": {
        "name": "aiSetWaterMap",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Tells the AI if this is a water map or not."
    },
    "aiGetWaterMap": {
        "name": "aiGetWaterMap",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Tells us if the AI thinks this is a water map or not."
    },
    "aiIsMapType": {
        "name": "aiIsMapType",
        "return_type": "bool",
        "params": [
            {
                "name": "mapType",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Is this a certain maptype or not. (AIFishingUseful, AITransportRequired, AITransportUseful)"
    },
    "aiHCCardsGetTotal": {
        "name": "aiHCCardsGetTotal",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of cards in the Current HC."
    },
    "aiHCCardsIsCardBought": {
        "name": "aiHCCardsIsCardBought",
        "return_type": "bool",
        "params": [
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Has the cardindex been bought yet?"
    },
    "aiHCCardsCanIBuyThisCard": {
        "name": "aiHCCardsCanIBuyThisCard",
        "return_type": "bool",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Can I buy this card now?"
    },
    "aiHCCardsBuyCard": {
        "name": "aiHCCardsBuyCard",
        "return_type": "bool",
        "params": [
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Buy this card now"
    },
    "aiHCCardsGetCardAgePrereq": {
        "name": "aiHCCardsGetCardAgePrereq",
        "return_type": "int",
        "params": [
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this cardIndex, get the age prereq."
    },
    "aiHCCardsGetCardLevel": {
        "name": "aiHCCardsGetCardLevel",
        "return_type": "int",
        "params": [
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this cardIndex, get the age prereq."
    },
    "aiHCCardsGetCardTechID": {
        "name": "aiHCCardsGetCardTechID",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this cardIndex, get the TechID."
    },
    "aiHCCardsGetCardUnitType": {
        "name": "aiHCCardsGetCardUnitType",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this cardIndex, get the UnitType."
    },
    "aiHCCardsGetCardUnitCount": {
        "name": "aiHCCardsGetCardUnitCount",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this cardIndex, get the UnitCount."
    },
    "aiHCCardsGetCardCount": {
        "name": "aiHCCardsGetCardCount",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this cardIndex, get the CardCount, -1 is Infinite."
    },
    "aiHCCardsFindBestCard": {
        "name": "aiHCCardsFindBestCard",
        "return_type": "int",
        "params": [
            {
                "name": "cardType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "levelPref",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourcePref",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Get the best card using the optional cardtype and optional resourcePreference"
    },
    "aiHCGetNumberDecks": {
        "name": "aiHCGetNumberDecks",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of decks in the Current HC."
    },
    "aiHCDeckCreate": {
        "name": "aiHCDeckCreate",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Create a new HC Deck with the given name."
    },
    "aiHCDeckActivate": {
        "name": "aiHCDeckActivate",
        "return_type": "bool",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes the deckIndex the current active HC deck."
    },
    "aiHCDeckAddCardToDeck": {
        "name": "aiHCDeckAddCardToDeck",
        "return_type": "bool",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the card given to the givenHC Deck."
    },
    "aiHCDeckGetNumberCards": {
        "name": "aiHCDeckGetNumberCards",
        "return_type": "int",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of cards in the Current HC Deck."
    },
    "aiHCDeckPlayCard": {
        "name": "aiHCDeckPlayCard",
        "return_type": "bool",
        "params": [
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "play this card."
    },
    "aiHCDeckGetCardAgePrereq": {
        "name": "aiHCDeckGetCardAgePrereq",
        "return_type": "int",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this card, get the age prereq"
    },
    "aiHCDeckGetCardLevel": {
        "name": "aiHCDeckGetCardLevel",
        "return_type": "int",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this card, get the level"
    },
    "aiHCDeckGetCardTechID": {
        "name": "aiHCDeckGetCardTechID",
        "return_type": "int",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this card, get the techID"
    },
    "aiHCDeckGetCardUnitType": {
        "name": "aiHCDeckGetCardUnitType",
        "return_type": "int",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this card, get the unitType"
    },
    "aiHCDeckGetCardUnitCount": {
        "name": "aiHCDeckGetCardUnitCount",
        "return_type": "int",
        "params": [
            {
                "name": "deckIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "For this card, get the unit Count"
    },
    "aiHCDeckCanPlayCard": {
        "name": "aiHCDeckCanPlayCard",
        "return_type": "bool",
        "params": [
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Can we play this card from the given deck?"
    },
    "aiHCDeckCardGetCardCount": {
        "name": "aiHCDeckCardGetCardCount",
        "return_type": "int",
        "params": [
            {
                "name": "deskIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cardIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets how many cards of this type we can send. -1 mean infinite."
    },
    "aiGetHCGatherPoint": {
        "name": "aiGetHCGatherPoint",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the HCGP."
    },
    "aiSetHCGatherPoint": {
        "name": "aiSetHCGatherPoint",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the HCGP."
    },
    "aiGetScore": {
        "name": "aiGetScore",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the score for the given player."
    },
    "aiGetNumberTeams": {
        "name": "aiGetNumberTeams",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of teams in the game."
    },
    "aiQueueAutoSavegame": {
        "name": "aiQueueAutoSavegame",
        "return_type": "void",
        "params": [
            {
                "name": "saveNumber",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Queues the auto savegame."
    },
    "aiIsMultiplayer": {
        "name": "aiIsMultiplayer",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true, if this is a multiplayer game."
    },
    "aiGetFallenExplorerID": {
        "name": "aiGetFallenExplorerID",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the ID of the fallen explorer; if there isn't one, returns -1"
    },
    "aiRansomExplorer": {
        "name": "aiRansomExplorer",
        "return_type": "bool",
        "params": [
            {
                "name": "explorerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "sourceBuildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "ransoms the specified explorer using funds from the specified escrow account and spawns it from the specified building."
    },
    "aiBuildWall": {
        "name": "aiBuildWall",
        "return_type": "bool",
        "params": [
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "builds walls around the specified building's colony using the specified escrow."
    },
    "aiCanBuildWall": {
        "name": "aiCanBuildWall",
        "return_type": "bool",
        "params": [
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns whether it is allowed to build a wall around the specified building's colony, and whether the player can afford it from the specified escrow."
    },
    "aiGetWallRadius": {
        "name": "aiGetWallRadius",
        "return_type": "float",
        "params": [
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the wall radius for the specified building's colony."
    },
    "aiDoesWallExist": {
        "name": "aiDoesWallExist",
        "return_type": "bool",
        "params": [
            {
                "name": "buildingID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns whether a wall exists around the specified building's colony."
    },
    "aiGetGameType": {
        "name": "aiGetGameType",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the current game type (e.g., cGameTypeScenario, cGameTypeRandom, etc)."
    },
    "aiUnitSetTactic": {
        "name": "aiUnitSetTactic",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "tacticID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the specified tactic on the specified unit."
    },
    "aiUnitGetTactic": {
        "name": "aiUnitGetTactic",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the specified unit's current tactic."
    },
    "aiResourceLock": {
        "name": "aiResourceLock",
        "return_type": "void",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Prevent a resource from being spent by the AI."
    },
    "aiResourceUnlock": {
        "name": "aiResourceUnlock",
        "return_type": "void",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Allow a resource to be spent by the AI."
    },
    "aiResourceIsLocked": {
        "name": "aiResourceIsLocked",
        "return_type": "bool",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Is this Escrow resource locked."
    },
    "aiBreakTreaty": {
        "name": "aiBreakTreaty",
        "return_type": "bool",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "breaks the treaty using funds from the given escrow."
    },
    "aiTreatyActive": {
        "name": "aiTreatyActive",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "checks whether the given player has a treaty."
    },
    "aiSetPoliticianChoice": {
        "name": "aiSetPoliticianChoice",
        "return_type": "void",
        "params": [
            {
                "name": "age",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "puid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the scripts choice for the AgeX Politician."
    },
    "aiGetPoliticianChoice": {
        "name": "aiGetPoliticianChoice",
        "return_type": "int",
        "params": [
            {
                "name": "age",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the scripts choice for the AgeX Politician."
    },
    "aiPopulatePoliticianList": {
        "name": "aiPopulatePoliticianList",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Call this to make the AI fill out what Politicians are available."
    },
    "aiGetPoliticianListCount": {
        "name": "aiGetPoliticianListCount",
        "return_type": "int",
        "params": [
            {
                "name": "age",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the number of Politicans avaiable for AgeX."
    },
    "aiGetPoliticianListByIndex": {
        "name": "aiGetPoliticianListByIndex",
        "return_type": "int",
        "params": [
            {
                "name": "age",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the index'th Politicans avaiable for AgeX."
    },
    "aiGetLastCollectedNuggetType": {
        "name": "aiGetLastCollectedNuggetType",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the last collected nugget's type"
    },
    "aiGetLastCollectedNuggetEffect": {
        "name": "aiGetLastCollectedNuggetEffect",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the last collected nugget's effect"
    },
    "aiGetNumberTradePostsControlled": {
        "name": "aiGetNumberTradePostsControlled",
        "return_type": "int",
        "params": [
            {
                "name": "teamID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the number of tradeposts controlled by this team (for monopoly victory)."
    },
    "aiGetNumberTradePostsNeededForMonopoly": {
        "name": "aiGetNumberTradePostsNeededForMonopoly",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the number of tradeposts needed to make a monopoly win possible."
    },
    "aiReadyForTradeMonopoly": {
        "name": "aiReadyForTradeMonopoly",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the monopoly command can be given now.  Does not check cost."
    },
    "aiDoTradeMonopoly": {
        "name": "aiDoTradeMonopoly",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Executes a trade monopoly command, returns false if it fails."
    },
    "aiIsMonopolyAllowed": {
        "name": "aiIsMonopolyAllowed",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if a trade monopoly is possible in this game type."
    },
    "aiGetNumberRelicsControlled": {
        "name": "aiGetNumberRelicsControlled",
        "return_type": "int",
        "params": [
            {
                "name": "teamID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the number of relics controlled by this team (for relic victory)."
    },
    "aiGetNumberRelicsNeededForVictory": {
        "name": "aiGetNumberRelicsNeededForVictory",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the number of relics needed to make a relic win possible."
    },
    "aiIsRelicCaptureAllowed": {
        "name": "aiIsRelicCaptureAllowed",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if a relic capture victory is possible in this game type."
    },
    "aiIsKOTHAllowed": {
        "name": "aiIsKOTHAllowed",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if a King of the Hill victory is possible in this game type."
    },
    "aiGetKOTHController": {
        "name": "aiGetKOTHController",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the team that is king of the hill."
    },
    "aiIsTeamKOTH": {
        "name": "aiIsTeamKOTH",
        "return_type": "bool",
        "params": [
            {
                "name": "teamID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if this team is king of the hill."
    },
    "kbDump": {
        "name": "kbDump",
        "return_type": "void",
        "params": [
            {
                "name": "player1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "player2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "KB dump for player2's units from player1's perspective."
    },
    "kbDumpType": {
        "name": "kbDumpType",
        "return_type": "void",
        "params": [
            {
                "name": "player1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "player2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "typeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "KB dump for player2's units of the given type from player1's perspective."
    },
    "kbLookAtAllUnitsOnMap": {
        "name": "kbLookAtAllUnitsOnMap",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Cheats and looks at all of the units on the map.  This will format your harddrive if you're not authorized to use it."
    },
    "kbGetPop": {
        "name": "kbGetPop",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current population for the player."
    },
    "kbGetPopCap": {
        "name": "kbGetPopCap",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current population cap for the player."
    },
    "kbGetAge": {
        "name": "kbGetAge",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current age for the current player."
    },
    "kbGetAgeForPlayer": {
        "name": "kbGetAgeForPlayer",
        "return_type": "int",
        "params": [
            {
                "name": "id",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current age for the player specified."
    },
    "kbGetCulture": {
        "name": "kbGetCulture",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the culture for the player."
    },
    "kbGetCultureForPlayer": {
        "name": "kbGetCultureForPlayer",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the culture for the given player."
    },
    "kbGetCultureName": {
        "name": "kbGetCultureName",
        "return_type": "string",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the culture name for the given culture."
    },
    "kbGetCiv": {
        "name": "kbGetCiv",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the civilization for the player."
    },
    "kbGetCivName": {
        "name": "kbGetCivName",
        "return_type": "string",
        "params": [
            {
                "name": "civID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the civ name for the given civ."
    },
    "kbUnitQueryCreate": {
        "name": "kbUnitQueryCreate",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a unit query, returns the query ID."
    },
    "kbUnitQueryResetData": {
        "name": "kbUnitQueryResetData",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the given unit query data AND results."
    },
    "kbUnitQueryResetResults": {
        "name": "kbUnitQueryResetResults",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the given unit query results."
    },
    "kbUnitQueryDestroy": {
        "name": "kbUnitQueryDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the given unit query."
    },
    "kbUnitQueryNumberResults": {
        "name": "kbUnitQueryNumberResults",
        "return_type": "int",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of results in the current query."
    },
    "kbUnitQueryGetResult": {
        "name": "kbUnitQueryGetResult",
        "return_type": "int",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the UnitID of the index-th result in the current query."
    },
    "kbUnitQuerySetPlayerID": {
        "name": "kbUnitQuerySetPlayerID",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resetQueryData",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetPlayerRelation": {
        "name": "kbUnitQuerySetPlayerRelation",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerRelation",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetUnitType": {
        "name": "kbUnitQuerySetUnitType",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetActionType": {
        "name": "kbUnitQuerySetActionType",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "actionTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetState": {
        "name": "kbUnitQuerySetState",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "state",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetPosition": {
        "name": "kbUnitQuerySetPosition",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetMaximumDistance": {
        "name": "kbUnitQuerySetMaximumDistance",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetIgnoreKnockedOutUnits": {
        "name": "kbUnitQuerySetIgnoreKnockedOutUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetAscendingSort": {
        "name": "kbUnitQuerySetAscendingSort",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "If parm is true, results are sorted in ascending distance order from the query position."
    },
    "kbUnitQuerySetBaseID": {
        "name": "kbUnitQuerySetBaseID",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetAreaID": {
        "name": "kbUnitQuerySetAreaID",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetAreaGroupID": {
        "name": "kbUnitQuerySetAreaGroupID",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaGroupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetArmyID": {
        "name": "kbUnitQuerySetArmyID",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "armyID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQuerySetSeeableOnly": {
        "name": "kbUnitQuerySetSeeableOnly",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "seeableOnly",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets query data."
    },
    "kbUnitQueryExecute": {
        "name": "kbUnitQueryExecute",
        "return_type": "int",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Executes the current query; returns number of results."
    },
    "kbUnitQueryExecuteOnQuery": {
        "name": "kbUnitQueryExecuteOnQuery",
        "return_type": "int",
        "params": [
            {
                "name": "currentQueryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "previousQueryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Executes the current query on the previous query's results; returns the new number of results."
    },
    "kbUnitQueryExecuteOnQueryByName": {
        "name": "kbUnitQueryExecuteOnQueryByName",
        "return_type": "int",
        "params": [
            {
                "name": "currentQueryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "previousQueryName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Executes the current query on the previous query's results; returns the new number of results."
    },
    "kbUnitQueryGetUnitCost": {
        "name": "kbUnitQueryGetUnitCost",
        "return_type": "float",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "considerHealth",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets total aiCost of query's units, weighted for HP if requested."
    },
    "kbUnitQueryGetUnitHitpoints": {
        "name": "kbUnitQueryGetUnitHitpoints",
        "return_type": "float",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "considerHealth",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets HP of query's units, using current HP if requested."
    },
    "kbUnitGetPlayerID": {
        "name": "kbUnitGetPlayerID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the player ID for this unit ID."
    },
    "kbUnitGetPlanID": {
        "name": "kbUnitGetPlanID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the plan ID for this unit ID."
    },
    "kbUnitGetBaseID": {
        "name": "kbUnitGetBaseID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the base ID for this unit ID."
    },
    "kbUnitGetAreaID": {
        "name": "kbUnitGetAreaID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the area ID for this unit ID."
    },
    "kbUnitGetArmyID": {
        "name": "kbUnitGetArmyID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the army ID for this unit ID."
    },
    "kbUnitGetMovementType": {
        "name": "kbUnitGetMovementType",
        "return_type": "int",
        "params": [
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the movementType for this unitTypeID."
    },
    "kbUnitGetCurrentHitpoints": {
        "name": "kbUnitGetCurrentHitpoints",
        "return_type": "float",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current hitpoints for this unit ID."
    },
    "kbUnitGetMaximumHitpoints": {
        "name": "kbUnitGetMaximumHitpoints",
        "return_type": "float",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the maximum hitpoints for this unit ID."
    },
    "kbUnitGetHealth": {
        "name": "kbUnitGetHealth",
        "return_type": "float",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the health for this unit ID."
    },
    "kbUnitGetCurrentAICost": {
        "name": "kbUnitGetCurrentAICost",
        "return_type": "float",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current AI cost (worth) for this unit ID."
    },
    "kbUnitGetMaximumAICost": {
        "name": "kbUnitGetMaximumAICost",
        "return_type": "float",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the maximum AI cost (worth) for this unit ID."
    },
    "kbUnitGetPosition": {
        "name": "kbUnitGetPosition",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the position for this unit ID."
    },
    "kbUnitIsType": {
        "name": "kbUnitIsType",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the unit is of the unitTypeID."
    },
    "kbUnitGetActionType": {
        "name": "kbUnitGetActionType",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the actionTypeID of the unit."
    },
    "kbUnitGetTargetUnitID": {
        "name": "kbUnitGetTargetUnitID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the target unit ID of the given unit."
    },
    "kbUnitGetNumberWorkers": {
        "name": "kbUnitGetNumberWorkers",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of units currently working on the given unit."
    },
    "kbUnitGetWorkerID": {
        "name": "kbUnitGetWorkerID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the index-th worker unit ID."
    },
    "kbGetBuildLimit": {
        "name": "kbGetBuildLimit",
        "return_type": "int",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of the unit type you are allowed to have (ONLY WORKS ON BASE UNIT TYPES); returns -1 if there is no limit."
    },
    "kbGetPopCapAddition": {
        "name": "kbGetPopCapAddition",
        "return_type": "int",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns amount of pop cap addition provided by the given unit type (ONLY WORKS ON BASE UNIT TYPES)."
    },
    "kbGetPopSlots": {
        "name": "kbGetPopSlots",
        "return_type": "int",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of pop slots this unit takes (ONLY WORKS ON BASE UNIT TYPES)."
    },
    "kbGetPopulationSlotsByUnitTypeID": {
        "name": "kbGetPopulationSlotsByUnitTypeID",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of pop slots currently occupied by this unit type."
    },
    "kbGetPopulationSlotsByQueryID": {
        "name": "kbGetPopulationSlotsByQueryID",
        "return_type": "int",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of pop slots currently occupied by the results in the given query."
    },
    "kbUnitCount": {
        "name": "kbUnitCount",
        "return_type": "int",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stateID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a quick unit count of units for a player."
    },
    "kbUnitCountConsole": {
        "name": "kbUnitCountConsole",
        "return_type": "void",
        "params": [
            {
                "name": "playerID1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitType",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "state",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a quick unit count of player2's units from player1's perspective."
    },
    "kbGetMapCenter": {
        "name": "kbGetMapCenter",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the center vector of the map."
    },
    "kbGetMapXSize": {
        "name": "kbGetMapXSize",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the X size of the map."
    },
    "kbGetMapZSize": {
        "name": "kbGetMapZSize",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Z size of the map."
    },
    "kbAreaCalculate": {
        "name": "kbAreaCalculate",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "d",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "e",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "f",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates areas and area groups. DO THIS BEFORE ANYTHING ELSE IN YOUR SCRIPT."
    },
    "kbAreaGetNumber": {
        "name": "kbAreaGetNumber",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of areas."
    },
    "kbAreaGetIDByPosition": {
        "name": "kbAreaGetIDByPosition",
        "return_type": "int",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the given area."
    },
    "kbAreaGroupGetIDByPosition": {
        "name": "kbAreaGroupGetIDByPosition",
        "return_type": "int",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the given area group."
    },
    "kbAreaGroupGetCenter": {
        "name": "kbAreaGroupGetCenter",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "groupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the center of the given areaGroup."
    },
    "kbAreaGetCenter": {
        "name": "kbAreaGetCenter",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the center of the given area."
    },
    "kbAreaGetNumberTiles": {
        "name": "kbAreaGetNumberTiles",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of tiles in the given area."
    },
    "kbAreaGetNumberBlackTiles": {
        "name": "kbAreaGetNumberBlackTiles",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of black tiles in the given area."
    },
    "kbAreaGetNumberVisibleTiles": {
        "name": "kbAreaGetNumberVisibleTiles",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of visible tiles in the given area."
    },
    "kbAreaGetNumberFogTiles": {
        "name": "kbAreaGetNumberFogTiles",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of fog tiles in the given area."
    },
    "kbAreaGetVisibilityChangeTime": {
        "name": "kbAreaGetVisibilityChangeTime",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the gametime of the last visibility change for the given area."
    },
    "kbAreaGetNumberUnits": {
        "name": "kbAreaGetNumberUnits",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of units in the given area."
    },
    "kbAreaGetUnitID": {
        "name": "kbAreaGetUnitID",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Unit ID of the index-th unit in the given area."
    },
    "kbAreaGetNumberBorderAreas": {
        "name": "kbAreaGetNumberBorderAreas",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of border areas for the given area."
    },
    "kbAreaGetBorderAreaID": {
        "name": "kbAreaGetBorderAreaID",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Area ID of the index-th border area in the given area."
    },
    "kbAreaGetType": {
        "name": "kbAreaGetType",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Type of area."
    },
    "kbAreaGetVPSiteID": {
        "name": "kbAreaGetVPSiteID",
        "return_type": "int",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns an area's VP site ID (-1 if an area doesn't have a VP site)."
    },
    "kbVPSiteQuery": {
        "name": "kbVPSiteQuery",
        "return_type": "int",
        "params": [
            {
                "name": "scoreType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerRelationOrID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "siteState",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns ID for an array containing VP site IDs that match the specified parameters."
    },
    "kbDumpVPSiteInfo": {
        "name": "kbDumpVPSiteInfo",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "blogs out info about all VP sites."
    },
    "kbVPSiteGetType": {
        "name": "kbVPSiteGetType",
        "return_type": "int",
        "params": [
            {
                "name": "siteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the specified VP site's type (e.g., native, trade, etc)."
    },
    "kbVPSiteGetLocation": {
        "name": "kbVPSiteGetLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "siteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the specified VP site's world location."
    },
    "kbVPSiteGetOwnerPlayerID": {
        "name": "kbVPSiteGetOwnerPlayerID",
        "return_type": "int",
        "params": [
            {
                "name": "siteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the specified VP site's owning player."
    },
    "kbVPSiteGetState": {
        "name": "kbVPSiteGetState",
        "return_type": "int",
        "params": [
            {
                "name": "siteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the specified VP site's state."
    },
    "kbGetVPGeneratorByScoreType": {
        "name": "kbGetVPGeneratorByScoreType",
        "return_type": "int",
        "params": [
            {
                "name": "siteType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the protounit ID for the VP generator that corresponds to this type of VP site."
    },
    "kbAreaGetClosetArea": {
        "name": "kbAreaGetClosetArea",
        "return_type": "int",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "areaType1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minDistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Area ID of the closest area, of the given types, to given postion."
    },
    "kbPathCreate": {
        "name": "kbPathCreate",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a path with the given name."
    },
    "kbPathDestroy": {
        "name": "kbPathDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the given path."
    },
    "kbPathGetNumber": {
        "name": "kbPathGetNumber",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of paths."
    },
    "kbPathGetIDByIndex": {
        "name": "kbPathGetIDByIndex",
        "return_type": "int",
        "params": [
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the index-th path ID."
    },
    "kbPathGetName": {
        "name": "kbPathGetName",
        "return_type": "string",
        "params": [
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the name of the given path."
    },
    "kbPathGetLength": {
        "name": "kbPathGetLength",
        "return_type": "float",
        "params": [
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the length of the given path."
    },
    "kbPathGetNumberWaypoints": {
        "name": "kbPathGetNumberWaypoints",
        "return_type": "int",
        "params": [
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of waypoints in the given path."
    },
    "kbPathAddWaypoint": {
        "name": "kbPathAddWaypoint",
        "return_type": "bool",
        "params": [
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waypoint",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the waypoint to the given path."
    },
    "kbPathGetWaypoint": {
        "name": "kbPathGetWaypoint",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "waypointNumber",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the appropriate waypoint from the given path."
    },
    "kbCanSimPath": {
        "name": "kbCanSimPath",
        "return_type": "bool",
        "params": [
            {
                "name": "pointA",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pointB",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protoUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "range",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given unit type can path from pointA to pointB."
    },
    "kbCanPath2": {
        "name": "kbCanPath2",
        "return_type": "bool",
        "params": [
            {
                "name": "pointA",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pointB",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protoUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "range",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given unit type can path from pointA to pointB."
    },
    "kbCreateAttackRoute": {
        "name": "kbCreateAttackRoute",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "startAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numInitialRoutes",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Route ID if successful."
    },
    "kbCreateAttackRouteWithPath": {
        "name": "kbCreateAttackRouteWithPath",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "startPt",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "endPt",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the Route ID if successful."
    },
    "kbDestroyAttackRoute": {
        "name": "kbDestroyAttackRoute",
        "return_type": "bool",
        "params": [
            {
                "name": "routeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the route was deleted."
    },
    "kbAddAttackRouteSector": {
        "name": "kbAddAttackRouteSector",
        "return_type": "bool",
        "params": [
            {
                "name": "sector",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "add a new sector to path to."
    },
    "kbAddAttackRouteIgnoreID": {
        "name": "kbAddAttackRouteIgnoreID",
        "return_type": "bool",
        "params": [
            {
                "name": "ignoreAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "ignore this area when finding the route."
    },
    "kbAddAttackRouteIgnoreType": {
        "name": "kbAddAttackRouteIgnoreType",
        "return_type": "bool",
        "params": [
            {
                "name": "ignoreAreaTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "ignore this areatype when finding the route."
    },
    "kbAttackRouteAddPath": {
        "name": "kbAttackRouteAddPath",
        "return_type": "bool",
        "params": [
            {
                "name": "attackRouteID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "pathID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Rreturns true if path was added to attack route."
    },
    "kbMakeAttackRoutes": {
        "name": "kbMakeAttackRoutes",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "find all the paths to the sector specified."
    },
    "kbGetNumAttackRoutes": {
        "name": "kbGetNumAttackRoutes",
        "return_type": "int",
        "params": [
            {
                "name": "startAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns num paths from start to goal area."
    },
    "kbGetAttackRouteID": {
        "name": "kbGetAttackRouteID",
        "return_type": "int",
        "params": [
            {
                "name": "startAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "goalAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the id of the routes from area1 to area2."
    },
    "kbEscrowCreate": {
        "name": "kbEscrowCreate",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "percentage",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "parentID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates an escrow."
    },
    "kbEscrowDestroy": {
        "name": "kbEscrowDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "promoteChildren",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys an escrow."
    },
    "kbEscrowGetID": {
        "name": "kbEscrowGetID",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the named escrow."
    },
    "kbEscrowGetPercentage": {
        "name": "kbEscrowGetPercentage",
        "return_type": "float",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the percentage of the escrow."
    },
    "kbEscrowSetPercentage": {
        "name": "kbEscrowSetPercentage",
        "return_type": "bool",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "percentage",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the percentage of the escrow."
    },
    "kbEscrowSetCap": {
        "name": "kbEscrowSetCap",
        "return_type": "bool",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "cap",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the cap of the escrow."
    },
    "kbEscrowGetAmount": {
        "name": "kbEscrowGetAmount",
        "return_type": "float",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the amount of credits in the given escrow for the given resource."
    },
    "kbEscrowFlush": {
        "name": "kbEscrowFlush",
        "return_type": "bool",
        "params": [
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flushChildren",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes all credits (and puts them into the root escrow) of the given resource type from the given escrow."
    },
    "kbEscrowAllocateCurrentResources": {
        "name": "kbEscrowAllocateCurrentResources",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Reallocates the current resource stockpile into the escrows."
    },
    "kbBuildingPlacementCreate": {
        "name": "kbBuildingPlacementCreate",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a building placement; returns the ID."
    },
    "kbBuildingPlacementDestroy": {
        "name": "kbBuildingPlacementDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "id",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the given building placement."
    },
    "kbBuildingPlacementResetResults": {
        "name": "kbBuildingPlacementResetResults",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the current building placement."
    },
    "kbBuildingPlacementSelect": {
        "name": "kbBuildingPlacementSelect",
        "return_type": "bool",
        "params": [
            {
                "name": "id",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Selects the given building placement."
    },
    "kbBuildingPlacementSetEventHandler": {
        "name": "kbBuildingPlacementSetEventHandler",
        "return_type": "bool",
        "params": [
            {
                "name": "eventType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "handlerName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets event handler function for the current BP and event."
    },
    "kbBuildingPlacementSetBuildingType": {
        "name": "kbBuildingPlacementSetBuildingType",
        "return_type": "bool",
        "params": [
            {
                "name": "buildingTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the building type for the current building placement."
    },
    "kbBuildingPlacementSetBaseID": {
        "name": "kbBuildingPlacementSetBaseID",
        "return_type": "bool",
        "params": [
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "locationPref",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the base ID and location preference for the current building placement."
    },
    "kbBuildingPlacementAddAreaID": {
        "name": "kbBuildingPlacementAddAreaID",
        "return_type": "bool",
        "params": [
            {
                "name": "areaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberBorderAreaLayers",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "addCenterInfluence",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the Area ID to the current BP (with the given number of border area layers), addCenterInfluence - adds a positional influence from the area center."
    },
    "kbBuildingPlacementAddAreaGroupID": {
        "name": "kbBuildingPlacementAddAreaGroupID",
        "return_type": "bool",
        "params": [
            {
                "name": "areaGroupID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the AreaGroup ID to the current BP."
    },
    "kbBuildingPlacementSetCenterPosition": {
        "name": "kbBuildingPlacementSetCenterPosition",
        "return_type": "bool",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "obstructionRadius",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets up center position-based BP."
    },
    "kbBuildingPlacementAddUnitInfluence": {
        "name": "kbBuildingPlacementAddUnitInfluence",
        "return_type": "bool",
        "params": [
            {
                "name": "typeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "kbResourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the unit influence for the current building placement."
    },
    "kbBuildingPlacementAddPositionInfluence": {
        "name": "kbBuildingPlacementAddPositionInfluence",
        "return_type": "bool",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the position influence for the current building placement."
    },
    "kbBuildingPlacementSetMinimumValue": {
        "name": "kbBuildingPlacementSetMinimumValue",
        "return_type": "bool",
        "params": [
            {
                "name": "minimumValue",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the minimum acceptable value for evaluated spots in the BP."
    },
    "kbBuildingPlacementStart": {
        "name": "kbBuildingPlacementStart",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Starts the placement of current building."
    },
    "kbBuildingPlacementGetResultPosition": {
        "name": "kbBuildingPlacementGetResultPosition",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bpID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the vector result position for given BP ID."
    },
    "kbBuildingPlacementGetResultValue": {
        "name": "kbBuildingPlacementGetResultValue",
        "return_type": "float",
        "params": [
            {
                "name": "bpID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the result value for given BP ID."
    },
    "kbTargetSelectorCreate": {
        "name": "kbTargetSelectorCreate",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a target selector; returns the ID."
    },
    "kbTargetSelectorDestroy": {
        "name": "kbTargetSelectorDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "id",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the given target selector."
    },
    "kbTargetSelectorResetResults": {
        "name": "kbTargetSelectorResetResults",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the current target selector."
    },
    "kbTargetSelectorSelect": {
        "name": "kbTargetSelectorSelect",
        "return_type": "bool",
        "params": [
            {
                "name": "id",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Selects the given target selector."
    },
    "kbTargetSelectorAddUnitType": {
        "name": "kbTargetSelectorAddUnitType",
        "return_type": "bool",
        "params": [
            {
                "name": "protoUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Add the UAIT for the given BASE unit type as a filter."
    },
    "kbTargetSelectorAddQueryResults": {
        "name": "kbTargetSelectorAddQueryResults",
        "return_type": "bool",
        "params": [
            {
                "name": "queryID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the list of potential targets to the results in the given query."
    },
    "kbTargetSelectorGetNumberResults": {
        "name": "kbTargetSelectorGetNumberResults",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of results in the given target selector."
    },
    "kbTargetSelectorGetResultValue": {
        "name": "kbTargetSelectorGetResultValue",
        "return_type": "int",
        "params": [
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the result value for given index of the current target selector."
    },
    "kbTargetSelectorStart": {
        "name": "kbTargetSelectorStart",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Starts the current target selector."
    },
    "kbSetupForResource": {
        "name": "kbSetupForResource",
        "return_type": "bool",
        "params": [
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "amount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if amount of resource is within distance of a dropsite."
    },
    "kbGetHCLevel": {
        "name": "kbGetHCLevel",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current HomeCity Level of the given player."
    },
    "kbResourceGetXP": {
        "name": "kbResourceGetXP",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current amount XP the given player has."
    },
    "kbResourceGet": {
        "name": "kbResourceGet",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current amount of the given resource."
    },
    "kbMaximumResourceGet": {
        "name": "kbMaximumResourceGet",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the maximum amount of the given resource you can have."
    },
    "kbTotalResourceGet": {
        "name": "kbTotalResourceGet",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the total amount of the given resource gathered to this point in the game."
    },
    "kbGetNumberValidResourcesByPlan": {
        "name": "kbGetNumberValidResourcesByPlan",
        "return_type": "int",
        "params": [
            {
                "name": "planID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of valid KB resources for the given plan/base."
    },
    "kbGetNumberValidResources": {
        "name": "kbGetNumberValidResources",
        "return_type": "int",
        "params": [
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of valid KB resources for the resource types."
    },
    "kbGetAmountValidResources": {
        "name": "kbGetAmountValidResources",
        "return_type": "float",
        "params": [
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the resource amount of valid KB resources for the resource types."
    },
    "kbGetResourceIncome": {
        "name": "kbGetResourceIncome",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "seconds",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "relative",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the resource income over the last X seconds."
    },
    "kbProtoUnitAvailable": {
        "name": "kbProtoUnitAvailable",
        "return_type": "bool",
        "params": [
            {
                "name": "protoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the protoUnit is currently available."
    },
    "kbGetProtoUnitID": {
        "name": "kbGetProtoUnitID",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the protounit."
    },
    "kbUnitGetProtoUnitID": {
        "name": "kbUnitGetProtoUnitID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the unit's protounit ID."
    },
    "kbCanAffordUnit": {
        "name": "kbCanAffordUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "protoUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the player can afford the proto unit."
    },
    "kbUnitCostPerResource": {
        "name": "kbUnitCostPerResource",
        "return_type": "float",
        "params": [
            {
                "name": "protoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the cost of the protounit for the given resource."
    },
    "kbCanAffordTech": {
        "name": "kbCanAffordTech",
        "return_type": "bool",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the player can afford the tech."
    },
    "kbTechCostPerResource": {
        "name": "kbTechCostPerResource",
        "return_type": "float",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the cost of the tech for the given resource."
    },
    "kbProtoUnitIsType": {
        "name": "kbProtoUnitIsType",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protoUnitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the protounit is of the unitTypeID."
    },
    "kbTechGetStatus": {
        "name": "kbTechGetStatus",
        "return_type": "int",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current tech status for the current player of the requested tech."
    },
    "kbGetTechPercentComplete": {
        "name": "kbGetTechPercentComplete",
        "return_type": "float",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the percent complete for the the requested tech of the current player."
    },
    "kbGetCombatEfficiency": {
        "name": "kbGetCombatEfficiency",
        "return_type": "float",
        "params": [
            {
                "name": "playerID1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the combat efficiency of the comparison (in terms of playerID1's units)."
    },
    "kbGetAICostWeight": {
        "name": "kbGetAICostWeight",
        "return_type": "float",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the AI cost weight for the given resource."
    },
    "kbSetAICostWeight": {
        "name": "kbSetAICostWeight",
        "return_type": "bool",
        "params": [
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "weight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the weight this resource type is given during AI cost calculuations."
    },
    "kbGetProtoUnitAICost": {
        "name": "kbGetProtoUnitAICost",
        "return_type": "float",
        "params": [
            {
                "name": "protoUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the AI cost for the given protoUnit type ID."
    },
    "kbGetTechAICost": {
        "name": "kbGetTechAICost",
        "return_type": "float",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the AI cost for the given tech ID."
    },
    "kbIsPlayerResigned": {
        "name": "kbIsPlayerResigned",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the player's resigned status."
    },
    "kbHasPlayerLost": {
        "name": "kbHasPlayerLost",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the player's lost status."
    },
    "kbGetPlayerTeam": {
        "name": "kbGetPlayerTeam",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the player's team number."
    },
    "kbGetPlayerName": {
        "name": "kbGetPlayerName",
        "return_type": "string",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the player's name."
    },
    "kbIsPlayerEnemy": {
        "name": "kbIsPlayerEnemy",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given player is an enemy."
    },
    "kbIsPlayerNeutral": {
        "name": "kbIsPlayerNeutral",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given player is a neutral player."
    },
    "kbIsPlayerAlly": {
        "name": "kbIsPlayerAlly",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given player is an ally."
    },
    "kbIsPlayerMutualAlly": {
        "name": "kbIsPlayerMutualAlly",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given player is a mutual ally."
    },
    "kbGetNumberMutualAllies": {
        "name": "kbGetNumberMutualAllies",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of mutual allies."
    },
    "kbIsPlayerValid": {
        "name": "kbIsPlayerValid",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given player is a valid player (i.e. it exists in the game)."
    },
    "kbIsPlayerHuman": {
        "name": "kbIsPlayerHuman",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the given player is a a human player."
    },
    "kbGetPlayerHandicap": {
        "name": "kbGetPlayerHandicap",
        "return_type": "float",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the player's handicap multiplier (ie., 1.0 = no handicap)."
    },
    "kbSetPlayerHandicap": {
        "name": "kbSetPlayerHandicap",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "handicap",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the indicated player's handicap multiplier (ie., 1.0 = no handicap)."
    },
    "kbIsGameOver": {
        "name": "kbIsGameOver",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns whether the game is over or not."
    },
    "kbGetTownLocation": {
        "name": "kbGetTownLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the location of the main town."
    },
    "kbGetTownAreaID": {
        "name": "kbGetTownAreaID",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the area ID of the main town."
    },
    "kbSetTownLocation": {
        "name": "kbSetTownLocation",
        "return_type": "bool",
        "params": [
            {
                "name": "location",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the location of the main town."
    },
    "kbGetAutoBaseCreate": {
        "name": "kbGetAutoBaseCreate",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the auto base creation value."
    },
    "kbSetAutoBaseCreate": {
        "name": "kbSetAutoBaseCreate",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the auto base creation value."
    },
    "kbGetAutoBaseCreateDistance": {
        "name": "kbGetAutoBaseCreateDistance",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the auto base creation distance."
    },
    "kbSetAutoBaseCreateDistance": {
        "name": "kbSetAutoBaseCreateDistance",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the auto base creation distance."
    },
    "kbGetAutoBaseDetect": {
        "name": "kbGetAutoBaseDetect",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the auto base detection value."
    },
    "kbSetAutoBaseDetect": {
        "name": "kbSetAutoBaseDetect",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the auto base detection value."
    },
    "kbGetAutoBaseDetectDistance": {
        "name": "kbGetAutoBaseDetectDistance",
        "return_type": "float",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the auto base creation distance."
    },
    "kbSetAutoBaseDetectDistance": {
        "name": "kbSetAutoBaseDetectDistance",
        "return_type": "void",
        "params": [
            {
                "name": "v",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the auto base creation distance."
    },
    "kbFindClosestBase": {
        "name": "kbFindClosestBase",
        "return_type": "int",
        "params": [
            {
                "name": "playerRelation",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "location",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the nearest base of player relation from the location."
    },
    "kbBaseGetNextID": {
        "name": "kbBaseGetNextID",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the ID of the next base that will be created."
    },
    "kbBaseGetNumber": {
        "name": "kbBaseGetNumber",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of bases for the given player."
    },
    "kbBaseGetIDByIndex": {
        "name": "kbBaseGetIDByIndex",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the BaseID for the given base."
    },
    "kbBaseCreate": {
        "name": "kbBaseCreate",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a base."
    },
    "kbBaseFindCreateResourceBase": {
        "name": "kbBaseFindCreateResourceBase",
        "return_type": "int",
        "params": [
            {
                "name": "resourceType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceSubType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "parentBaseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Finds/Creates a resource base."
    },
    "kbBaseFindForwardMilitaryBase": {
        "name": "kbBaseFindForwardMilitaryBase",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Finds/Creates a 'forward' military base against the given enemy base."
    },
    "kbBaseDestroy": {
        "name": "kbBaseDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the given base."
    },
    "kbBaseDestroyAll": {
        "name": "kbBaseDestroyAll",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys all of the bases for the given player."
    },
    "kbBaseGetLocation": {
        "name": "kbBaseGetLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the location of the base."
    },
    "kbBaseGetLastKnownDamageLocation": {
        "name": "kbBaseGetLastKnownDamageLocation",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the last known damage location of the base."
    },
    "kbBaseGetOwner": {
        "name": "kbBaseGetOwner",
        "return_type": "int",
        "params": [
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the player ID of the specified base's owner."
    },
    "kbBaseSetFrontVector": {
        "name": "kbBaseSetFrontVector",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "frontVector",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the front (and back) of the base."
    },
    "kbBaseGetFrontVector": {
        "name": "kbBaseGetFrontVector",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the front vector of the base."
    },
    "kbBaseGetBackVector": {
        "name": "kbBaseGetBackVector",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the back vector of the base."
    },
    "kbBaseGetTimeUnderAttack": {
        "name": "kbBaseGetTimeUnderAttack",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of continuous seconds the base has been under attack."
    },
    "kbBaseGetUnderAttack": {
        "name": "kbBaseGetUnderAttack",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the under attack flag of the base."
    },
    "kbBaseSetActive": {
        "name": "kbBaseSetActive",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the active flag of the base."
    },
    "kbBaseGetActive": {
        "name": "kbBaseGetActive",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the active flag of the base."
    },
    "kbBaseGetMainID": {
        "name": "kbBaseGetMainID",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the main base ID for the player."
    },
    "kbBaseSetMain": {
        "name": "kbBaseSetMain",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "main",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the main flag of the base."
    },
    "kbBaseGetMain": {
        "name": "kbBaseGetMain",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the main flag of the base."
    },
    "kbBaseSetForward": {
        "name": "kbBaseSetForward",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "forward",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the forward flag of the base."
    },
    "kbBaseGetForward": {
        "name": "kbBaseGetForward",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the forward flag of the base."
    },
    "kbBaseSetSettlement": {
        "name": "kbBaseSetSettlement",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "settlement",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the settlement flag of the base."
    },
    "kbBaseGetSettlement": {
        "name": "kbBaseGetSettlement",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the settlement flag of the base."
    },
    "kbBaseSetMilitary": {
        "name": "kbBaseSetMilitary",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "military",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the military flag of the base."
    },
    "kbBaseGetMilitary": {
        "name": "kbBaseGetMilitary",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the military flag of the base."
    },
    "kbBaseGetMilitaryGatherPoint": {
        "name": "kbBaseGetMilitaryGatherPoint",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the military gather point of the base."
    },
    "kbBaseSetMilitaryGatherPoint": {
        "name": "kbBaseSetMilitaryGatherPoint",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "gatherPoint",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the military gather point of the base."
    },
    "kbBaseSetEconomy": {
        "name": "kbBaseSetEconomy",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Economy",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the economy flag of the base."
    },
    "kbBaseGetEconomy": {
        "name": "kbBaseGetEconomy",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the economy flag of the base."
    },
    "kbBaseGetMaximumResourceDistance": {
        "name": "kbBaseGetMaximumResourceDistance",
        "return_type": "float",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the maximum resource distance of the base."
    },
    "kbBaseSetMaximumResourceDistance": {
        "name": "kbBaseSetMaximumResourceDistance",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the maximum resource distance of the base."
    },
    "kbBaseAddUnit": {
        "name": "kbBaseAddUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the given unit to the base."
    },
    "kbBaseRemoveUnit": {
        "name": "kbBaseRemoveUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes the given unit to the base."
    },
    "kbBaseGetNumberUnits": {
        "name": "kbBaseGetNumberUnits",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "relation",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of units that match the criteria."
    },
    "kbUnitVisible": {
        "name": "kbUnitVisible",
        "return_type": "bool",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the unit is currently visible to the player."
    },
    "kbLocationVisible": {
        "name": "kbLocationVisible",
        "return_type": "bool",
        "params": [
            {
                "name": "location",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the location is currently visible to the player."
    },
    "kbGetBlockPosition": {
        "name": "kbGetBlockPosition",
        "return_type": "vector",
        "params": [
            {
                "name": "result",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "blockName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the position of the cinematic block."
    },
    "kbGetBlockID": {
        "name": "kbGetBlockID",
        "return_type": "int",
        "params": [
            {
                "name": "blockName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the UnitID of the cinematic block."
    },
    "kbGetRandomEnabledPUID": {
        "name": "kbGetRandomEnabledPUID",
        "return_type": "int",
        "params": [
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "escrowID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns a random, valid PUID that's of the given type."
    },
    "kbUnitPickCreate": {
        "name": "kbUnitPickCreate",
        "return_type": "int",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a unit pick."
    },
    "kbUnitPickDestroy": {
        "name": "kbUnitPickDestroy",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Destroys the given unit pick."
    },
    "kbUnitPickResetAll": {
        "name": "kbUnitPickResetAll",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets all of the unit pick data."
    },
    "kbUnitPickResetResults": {
        "name": "kbUnitPickResetResults",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the unit pick results."
    },
    "kbUnitPickGetPreferenceWeight": {
        "name": "kbUnitPickGetPreferenceWeight",
        "return_type": "float",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick preference weight."
    },
    "kbUnitPickSetPreferenceWeight": {
        "name": "kbUnitPickSetPreferenceWeight",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "v",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick preference weight."
    },
    "kbUnitPickSetEnemyPlayerID": {
        "name": "kbUnitPickSetEnemyPlayerID",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick enemy player ID."
    },
    "kbUnitPickSetCombatEfficiencyWeight": {
        "name": "kbUnitPickSetCombatEfficiencyWeight",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick combat efficiency weight."
    },
    "kbUnitPickResetCombatEfficiencyTypes": {
        "name": "kbUnitPickResetCombatEfficiencyTypes",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the enemy unit typeIDs for the unit pick combat efficiency calculation."
    },
    "kbUnitPickAddCombatEfficiencyType": {
        "name": "kbUnitPickAddCombatEfficiencyType",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "typeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "weight",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds an enemy unit typeID to the unit pick combat efficiency calculation."
    },
    "kbUnitPickSetCostWeight": {
        "name": "kbUnitPickSetCostWeight",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick cost weight."
    },
    "kbUnitPickSetMovementType": {
        "name": "kbUnitPickSetMovementType",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "movementType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick movement type."
    },
    "kbUnitPickSetDesiredNumberUnitTypes": {
        "name": "kbUnitPickSetDesiredNumberUnitTypes",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "number",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberBuildings",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "degradeNumberBuildings",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick desired number unit types."
    },
    "kbUnitPickGetDesiredNumberUnitTypes": {
        "name": "kbUnitPickGetDesiredNumberUnitTypes",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick desired number unit types."
    },
    "kbUnitPickSetDesiredNumberBuildings": {
        "name": "kbUnitPickSetDesiredNumberBuildings",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "numberBuildings",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick desired number buildings for the index-th unit type."
    },
    "kbUnitPickGetDesiredNumberBuildings": {
        "name": "kbUnitPickGetDesiredNumberBuildings",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the unit pick desired number buildings for the index-th unit type."
    },
    "kbUnitPickSetMinimumNumberUnits": {
        "name": "kbUnitPickSetMinimumNumberUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "number",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick desired number unit types."
    },
    "kbUnitPickGetMinimumNumberUnits": {
        "name": "kbUnitPickGetMinimumNumberUnits",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick minimum number units."
    },
    "kbUnitPickSetMaximumNumberUnits": {
        "name": "kbUnitPickSetMaximumNumberUnits",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "number",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick desired number unit types."
    },
    "kbUnitPickGetMaximumNumberUnits": {
        "name": "kbUnitPickGetMaximumNumberUnits",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick maximum number units."
    },
    "kbUnitPickSetMinimumPop": {
        "name": "kbUnitPickSetMinimumPop",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "number",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick desired min pop."
    },
    "kbUnitPickGetMinimumPop": {
        "name": "kbUnitPickGetMinimumPop",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick minimum pop."
    },
    "kbUnitPickSetMaximumPop": {
        "name": "kbUnitPickSetMaximumPop",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "number",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick desired max pop."
    },
    "kbUnitPickGetMaximumPop": {
        "name": "kbUnitPickGetMaximumPop",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick maximum pop."
    },
    "kbUnitPickSetAttackUnitType": {
        "name": "kbUnitPickSetAttackUnitType",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick attack unit type."
    },
    "kbUnitPickGetAttackUnitType": {
        "name": "kbUnitPickGetAttackUnitType",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick attack unit type."
    },
    "kbUnitPickSetGoalCombatEfficiencyType": {
        "name": "kbUnitPickSetGoalCombatEfficiencyType",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit pick attack unit type."
    },
    "kbUnitPickGetGoalCombatEfficiencyType": {
        "name": "kbUnitPickGetGoalCombatEfficiencyType",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Gets the unit pick attack unit type."
    },
    "kbUnitPickSetPreferenceFactor": {
        "name": "kbUnitPickSetPreferenceFactor",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "preferenceFactor",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the preferenceFactor for that unit type."
    },
    "kbUnitPickAdjustPreferenceFactor": {
        "name": "kbUnitPickAdjustPreferenceFactor",
        "return_type": "bool",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "baseFactorAdjustment",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adjusts the preferenceFactor for that unit type (uses 50.0 as the base if the UP doesn't exist yet)."
    },
    "kbUnitPickRun": {
        "name": "kbUnitPickRun",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Runs the unit pick."
    },
    "kbUnitPickGetNumberResults": {
        "name": "kbUnitPickGetNumberResults",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of unit pick results."
    },
    "kbUnitPickGetResult": {
        "name": "kbUnitPickGetResult",
        "return_type": "int",
        "params": [
            {
                "name": "upID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "index",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the index-th ProtoUnitID."
    },
    "kbFindAreaGroup": {
        "name": "kbFindAreaGroup",
        "return_type": "int",
        "params": [
            {
                "name": "groupType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "surfaceAreaRatio",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "compareAreaID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the visible area group that matches the given criteria."
    },
    "kbFindAreaGroupByLocation": {
        "name": "kbFindAreaGroupByLocation",
        "return_type": "int",
        "params": [
            {
                "name": "groupType",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "relativeX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "relativeZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the visible area group that matches the given criteria."
    },
    "kbFindBestBuildingToRepair": {
        "name": "kbFindBestBuildingToRepair",
        "return_type": "int",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "healthRatio",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "repairUnderAttackUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the id of the best building to repair."
    },
    "kbSetForwardBasePosition": {
        "name": "kbSetForwardBasePosition",
        "return_type": "void",
        "params": [
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set the explicit position that every forward base will use."
    },
    "kbSetTargetSelectorFactor": {
        "name": "kbSetTargetSelectorFactor",
        "return_type": "void",
        "params": [
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "val",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the TargetSelector Factor value."
    },
    "kbGetTargetSelectorFactor": {
        "name": "kbGetTargetSelectorFactor",
        "return_type": "float",
        "params": [
            {
                "name": "type",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the TargetSelector Factor value."
    },
    "kbGetTechName": {
        "name": "kbGetTechName",
        "return_type": "string",
        "params": [
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the name of the tech ID."
    },
    "kbGetProtoUnitName": {
        "name": "kbGetProtoUnitName",
        "return_type": "string",
        "params": [
            {
                "name": "protoUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the name of the protounit ID."
    },
    "kbGetUnitBaseTypeID": {
        "name": "kbGetUnitBaseTypeID",
        "return_type": "int",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the base type ID of the unit."
    },
    "kbGetUnitTypeName": {
        "name": "kbGetUnitTypeName",
        "return_type": "string",
        "params": [
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the name of the unit type."
    },
    "kbCreateUnitProgression": {
        "name": "kbCreateUnitProgression",
        "return_type": "int",
        "params": [
            {
                "name": "unitName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a unit progression of the given name."
    },
    "kbCreateTechProgression": {
        "name": "kbCreateTechProgression",
        "return_type": "int",
        "params": [
            {
                "name": "techName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a tech progression of the given name."
    },
    "kbTechTreeGetCheapestUnitUpgrade": {
        "name": "kbTechTreeGetCheapestUnitUpgrade",
        "return_type": "int",
        "params": [
            {
                "name": "unitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets cheapest researchable unit upgrade, optionally for specified unit/unit line."
    },
    "kbTechTreeGetCheapestEconUpgrade": {
        "name": "kbTechTreeGetCheapestEconUpgrade",
        "return_type": "int",
        "params": [
            {
                "name": "resourceUnitTypeID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets cheapest researchable econ upgrade, optionally for specified resource unit type."
    },
    "kbTechTreeDump": {
        "name": "kbTechTreeDump",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Dumps the current state of the KBTT."
    },
    "kbProgressionGetTotalNodes": {
        "name": "kbProgressionGetTotalNodes",
        "return_type": "int",
        "params": [
            {
                "name": "progressionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the total number of steps to complete the progression."
    },
    "kbProgessionGetTotalResourceCost": {
        "name": "kbProgessionGetTotalResourceCost",
        "return_type": "float",
        "params": [
            {
                "name": "progressionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resourceID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the total cost of the given resource for this progressionID. A resourceID of -1 will return the total Cost."
    },
    "kbProgressionGetNodeType": {
        "name": "kbProgressionGetNodeType",
        "return_type": "int",
        "params": [
            {
                "name": "progressionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "nodeIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the type of node at the given index, either Unit type or Tech type."
    },
    "kbProgressionGetNodeData": {
        "name": "kbProgressionGetNodeData",
        "return_type": "int",
        "params": [
            {
                "name": "progressionID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "nodeIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the data at nodeIndex, either UnitID or TechID, depending on the type."
    },
    "trDelayedRuleActivation": {
        "name": "trDelayedRuleActivation",
        "return_type": "void",
        "params": [
            {
                "name": "rulename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adds a rule to the runtime to be activated on the next update."
    },
    "trTime": {
        "name": "trTime",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current gametime in Seconds."
    },
    "trTimeMS": {
        "name": "trTimeMS",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current gametime in Milliseconds."
    },
    "trUnitSelectClear": {
        "name": "trUnitSelectClear",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Clears the units in the trigger selection system."
    },
    "trUnitSelect": {
        "name": "trUnitSelect",
        "return_type": "void",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "'Selects' the unit in the trigger selection system."
    },
    "trUnitSelectByID": {
        "name": "trUnitSelectByID",
        "return_type": "void",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "'Selects' the unit in the trigger selection system."
    },
    "trPlayerControlsSocket": {
        "name": "trPlayerControlsSocket",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "objectScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the specified player is built on the specified socket."
    },
    "trIsPlayerVisitingHC": {
        "name": "trIsPlayerVisitingHC",
        "return_type": "bool",
        "params": [
            {
                "name": "targetHCPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the current player is looking at (visiting) the home city of the player specified by the player ID passed in."
    },
    "trIsPlayerSelectingHCBuilding": {
        "name": "trIsPlayerSelectingHCBuilding",
        "return_type": "bool",
        "params": [
            {
                "name": "hcBuildingName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the current player is selecting the building in their HC which has the specified name."
    },
    "trHasPlayerSentHCShipment": {
        "name": "trHasPlayerSentHCShipment",
        "return_type": "bool",
        "params": [
            {
                "name": "targetHCPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true when the player has sent a shipment from the home city."
    },
    "trIsPlayerSendingHCShipment": {
        "name": "trIsPlayerSendingHCShipment",
        "return_type": "bool",
        "params": [
            {
                "name": "targetHCPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true when the player sends a shipment from home city."
    },
    "trObjectGettingWorked": {
        "name": "trObjectGettingWorked",
        "return_type": "bool",
        "params": [
            {
                "name": "objectScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the object is currently being worked."
    },
    "trUnitMoveToPoint": {
        "name": "trUnitMoveToPoint",
        "return_type": "bool",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bAttackMove",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bUnitRun",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "runSpeedMultiplier",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves the selected unit(s) to the given position."
    },
    "trUnitMoveToUnit": {
        "name": "trUnitMoveToUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bAttackMove",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bUnitRun",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "runSpeedMultiplier",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves the selected unit(s) to the spot occupied by the given unit."
    },
    "trSetRevealerActiveState": {
        "name": "trSetRevealerActiveState",
        "return_type": "void",
        "params": [
            {
                "name": "revealerName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Finds the specified revealer and sets it to active or inactive."
    },
    "trCreateRevealer": {
        "name": "trCreateRevealer",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "revealerName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "revealerLOS",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "blackmapOnly",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Creates a revealer with the given attributes."
    },
    "trUnitMoveFromArea": {
        "name": "trUnitMoveFromArea",
        "return_type": "bool",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "bAttackMove",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitType",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "radius",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves all matching units near the selected unit(s) to the given position."
    },
    "trUnitBuildUnit": {
        "name": "trUnitBuildUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "protoUnitName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "BVector",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Selects units and makes the build a unit at specified location"
    },
    "trUnitDoWorkOnUnit": {
        "name": "trUnitDoWorkOnUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Tasks the selected unit(s) to perform work on the given unit."
    },
    "trUnitGarrison": {
        "name": "trUnitGarrison",
        "return_type": "bool",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Tasks the selected unit(s) to garrision into another unit."
    },
    "trPlayerSetAge": {
        "name": "trPlayerSetAge",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "age",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "displayEffect",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the age of the specified player."
    },
    "trPlayerSetHCAccess": {
        "name": "trPlayerSetHCAccess",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "hcAccess",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets whether the player has access to the HC."
    },
    "trShowHCView": {
        "name": "trShowHCView",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the view to the HC if the player specified is the current player."
    },
    "trShowWorldView": {
        "name": "trShowWorldView",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the view to the world if the player specified is the current player."
    },
    "trImmediateUnitGarrison": {
        "name": "trImmediateUnitGarrison",
        "return_type": "bool",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Instantly garrisons units inside another unit without considering distance."
    },
    "trUnitDistanceToPoint": {
        "name": "trUnitDistanceToPoint",
        "return_type": "float",
        "params": [
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the shortest distance between the trRT units and the point."
    },
    "trUnitDistanceToUnit": {
        "name": "trUnitDistanceToUnit",
        "return_type": "float",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the shortest distance between the trRT units and the given unit."
    },
    "trUnitDistanceToUnitID": {
        "name": "trUnitDistanceToUnitID",
        "return_type": "float",
        "params": [
            {
                "name": "unitID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the shortest distance between the trRT units and the given unit."
    },
    "trUnitCinematicRemoveControlAction": {
        "name": "trUnitCinematicRemoveControlAction",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Removes the current control action so the next thing can take effect immediately.  (For IGC)"
    },
    "trUnitSetAnimation": {
        "name": "trUnitSetAnimation",
        "return_type": "bool",
        "params": [
            {
                "name": "AnimName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "versionIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "loop",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "destroyOnNextControlAction",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the cinematic animation version for the selected unit(s)."
    },
    "trUnitAlive": {
        "name": "trUnitAlive",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if all selected units are alive."
    },
    "trUnitDead": {
        "name": "trUnitDead",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if all selected units are dead."
    },
    "trUnitDelete": {
        "name": "trUnitDelete",
        "return_type": "bool",
        "params": [
            {
                "name": "remove",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "removes or kills the selected unit(s)."
    },
    "trUnitDestroy": {
        "name": "trUnitDestroy",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "destroys the selected unit(s)."
    },
    "trUnitCreate": {
        "name": "trUnitCreate",
        "return_type": "bool",
        "params": [
            {
                "name": "protoName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "scenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "x",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "z",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "heading",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "creates a new unit."
    },
    "trUnitGetHeading": {
        "name": "trUnitGetHeading",
        "return_type": "int",
        "params": [
            {
                "name": "scenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the units heading."
    },
    "trUnitSetHeading": {
        "name": "trUnitSetHeading",
        "return_type": "bool",
        "params": [
            {
                "name": "degrees",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the units heading."
    },
    "trUnitSetHP": {
        "name": "trUnitSetHP",
        "return_type": "int",
        "params": [
            {
                "name": "hitpoints",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set the hitpoints for all selected units."
    },
    "trUnitVisToPlayer": {
        "name": "trUnitVisToPlayer",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if the player can see the selected unit, and it is on screen."
    },
    "trUnitHasLOS": {
        "name": "trUnitHasLOS",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if the player can see the selected unit, otherwise returns false."
    },
    "trUnitConvert": {
        "name": "trUnitConvert",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "converts the selected units to player."
    },
    "trUnitPercentComplete": {
        "name": "trUnitPercentComplete",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the percent complete as 0 to 100"
    },
    "trUnitPercentDamaged": {
        "name": "trUnitPercentDamaged",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the percent damaged as 0 to 100"
    },
    "trUnitTeleport": {
        "name": "trUnitTeleport",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "moves units from current position to position specified"
    },
    "trUnitHighlight": {
        "name": "trUnitHighlight",
        "return_type": "void",
        "params": [
            {
                "name": "seconds",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does something to highlight the units selected."
    },
    "trUnitChangeProtoUnit": {
        "name": "trUnitChangeProtoUnit",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "changes the proto unit for a given set of units."
    },
    "trUnitGetContained": {
        "name": "trUnitGetContained",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of units contained."
    },
    "trUnitGetIsContained": {
        "name": "trUnitGetIsContained",
        "return_type": "bool",
        "params": [
            {
                "name": "protounit",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if this unit is contained by the specified protounit."
    },
    "trUnitEjectContained": {
        "name": "trUnitEjectContained",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "ejects all contained units."
    },
    "trUnitIsSelected": {
        "name": "trUnitIsSelected",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns if the specified unit is selected."
    },
    "trUnitTypeIsSelected": {
        "name": "trUnitTypeIsSelected",
        "return_type": "bool",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns if the specified unit is selected."
    },
    "trUnitIsOwnedBy": {
        "name": "trUnitIsOwnedBy",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "determines if the selected units are owned by the player specified."
    },
    "trUnitSetStance": {
        "name": "trUnitSetStance",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set the stance for the given set of units."
    },
    "trCameraCut": {
        "name": "trCameraCut",
        "return_type": "void",
        "params": [
            {
                "name": "pos",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dir",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "up",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "right",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "puts the camera in the specified location."
    },
    "trWaypointClear": {
        "name": "trWaypointClear",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Clears the waypoints in the trigger selection system."
    },
    "trWaypointAddPoint": {
        "name": "trWaypointAddPoint",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the waypoint into the trigger selection system."
    },
    "trWaypointAddUnit": {
        "name": "trWaypointAddUnit",
        "return_type": "void",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the unit's position as a waypoint in the trigger selection system."
    },
    "trCurrentPlayer": {
        "name": "trCurrentPlayer",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the current player."
    },
    "trSetCurrentPlayerStatus": {
        "name": "trSetCurrentPlayerStatus",
        "return_type": "void",
        "params": [
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the current player as active or inactive."
    },
    "trSetUserControls": {
        "name": "trSetUserControls",
        "return_type": "void",
        "params": [
            {
                "name": "active",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the player controls on or off."
    },
    "trPlayerUnitCount": {
        "name": "trPlayerUnitCount",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of units for the player."
    },
    "trPlayerBuildingCount": {
        "name": "trPlayerBuildingCount",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of buildings for the player."
    },
    "trPlayerUnitAndBuildingCount": {
        "name": "trPlayerUnitAndBuildingCount",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of units and buildings for the player."
    },
    "trPlayerUnitCountSpecific": {
        "name": "trPlayerUnitCountSpecific",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protoName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of units for the player."
    },
    "trPlayerTribute": {
        "name": "trPlayerTribute",
        "return_type": "int",
        "params": [
            {
                "name": "from",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resource",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "amount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "to",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "tributes resources to a player."
    },
    "trPlayerToggleAllowTCSpawning": {
        "name": "trPlayerToggleAllowTCSpawning",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "allowSpawning",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles whether the player's TC can spawn units."
    },
    "trPlayerToggleAllowNewCWSpawning": {
        "name": "trPlayerToggleAllowNewCWSpawning",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "allowSpawning",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Toggles whether the player can spawn new covered wagons."
    },
    "trPlayerResourceCount": {
        "name": "trPlayerResourceCount",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resource",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of resources for the player."
    },
    "trPlayerCurrentXPCount": {
        "name": "trPlayerCurrentXPCount",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the current (not total) XP for the player."
    },
    "trPlayerDefeated": {
        "name": "trPlayerDefeated",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true/false if the player has been defeated."
    },
    "trPlayerActive": {
        "name": "trPlayerActive",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true/false if the player is active."
    },
    "trSetPlayerDefeated": {
        "name": "trSetPlayerDefeated",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "call this when a player is defeated on the local machine (meaning that this func must be called synchronously on all machines, it will not pass around a command.)"
    },
    "trSetPlayerWon": {
        "name": "trSetPlayerWon",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "call this when a player has won on the local machine (meaning that this func must be called synchronously on all machines, it will not pass around a command.)"
    },
    "trEndGame": {
        "name": "trEndGame",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Signal that the game has ended."
    },
    "trPlayerSetDiplomacy": {
        "name": "trPlayerSetDiplomacy",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "player2ID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "status",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the diplomacy status between players."
    },
    "trPlayerGetDiplomacy": {
        "name": "trPlayerGetDiplomacy",
        "return_type": "string",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "player2ID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "gets the diplomacy status between players."
    },
    "trPlayerModifyLOS": {
        "name": "trPlayerModifyLOS",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds/removes LOS between players."
    },
    "trPlayerCountBuildingInProgress": {
        "name": "trPlayerCountBuildingInProgress",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protoname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if building is being built."
    },
    "trBuildingIsOnCursor": {
        "name": "trBuildingIsOnCursor",
        "return_type": "bool",
        "params": [
            {
                "name": "protoname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the proto unit specified is on the cursor and is a building."
    },
    "trPlayerSetActive": {
        "name": "trPlayerSetActive",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the active player."
    },
    "trObjectiveComplete": {
        "name": "trObjectiveComplete",
        "return_type": "void",
        "params": [
            {
                "name": "objectiveID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "forceComplete",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playSound",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Completes the specified objective.  Forces a reoccurring objective complete if forceComplete is true."
    },
    "trObjectiveHide": {
        "name": "trObjectiveHide",
        "return_type": "void",
        "params": [
            {
                "name": "objectiveID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Hides the specified objective on the UI."
    },
    "trObjectiveShow": {
        "name": "trObjectiveShow",
        "return_type": "void",
        "params": [
            {
                "name": "objectiveID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Shows the specified objective on the UI."
    },
    "trObjectiveDiscover": {
        "name": "trObjectiveDiscover",
        "return_type": "void",
        "params": [
            {
                "name": "objectiveID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playSound",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "'Discovers' a previously unknown (to the player) objective."
    },
    "trPlayerAtPopCap": {
        "name": "trPlayerAtPopCap",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if player is at pop cap."
    },
    "trPlayerGetPopulation": {
        "name": "trPlayerGetPopulation",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the player population."
    },
    "trSetCinematicUnitSpeaking": {
        "name": "trSetCinematicUnitSpeaking",
        "return_type": "void",
        "params": [
            {
                "name": "objectScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "speaking",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "duration",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the unit as speaking or not."
    },
    "trEventSetHandler": {
        "name": "trEventSetHandler",
        "return_type": "bool",
        "params": [
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "handler",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets a handler function for an event id."
    },
    "trEventFire": {
        "name": "trEventFire",
        "return_type": "void",
        "params": [
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "cause an event to occur."
    },
    "trSetUnitIdleProcessing": {
        "name": "trSetUnitIdleProcessing",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets whether or not units can do their idle processing."
    },
    "trSetObscuredUnits": {
        "name": "trSetObscuredUnits",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets whether or not units can be drawn obscured or not."
    },
    "trLetterBox": {
        "name": "trLetterBox",
        "return_type": "void",
        "params": [
            {
                "name": "onOff",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Turns letter box mode on or off."
    },
    "trSoundPlayFN": {
        "name": "trSoundPlayFN",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "d",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the sound associated with the filename."
    },
    "trSoundPlayPaused": {
        "name": "trSoundPlayPaused",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "d",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the sound associated with the filename."
    },
    "trSoundTimer": {
        "name": "trSoundTimer",
        "return_type": "void",
        "params": [
            {
                "name": "milliseconds",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "creates a high performance sound timer and passes the eventID as data."
    },
    "trFadeOutMusic": {
        "name": "trFadeOutMusic",
        "return_type": "void",
        "params": [
            {
                "name": "duration",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Fades out current music over a given duration."
    },
    "trPlayNextMusicTrack": {
        "name": "trPlayNextMusicTrack",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the next song in the music play list."
    },
    "trFadeOutAllSounds": {
        "name": "trFadeOutAllSounds",
        "return_type": "void",
        "params": [
            {
                "name": "duration",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Fades out all sounds over a given duration"
    },
    "trBlockAllSounds": {
        "name": "trBlockAllSounds",
        "return_type": "void",
        "params": [
            {
                "name": "excludeDialog",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Blocks all sounds from playing from this point forward"
    },
    "trUnblockAllSounds": {
        "name": "trUnblockAllSounds",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Unblocks all sounds that were previously blocked from playing"
    },
    "trBlockAllAmbientSounds": {
        "name": "trBlockAllAmbientSounds",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "blocks all ambient sounds from this point forward"
    },
    "trUnBlockAllAmbientSounds": {
        "name": "trUnBlockAllAmbientSounds",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Unblocks all ambient sounds that were previously blocked from playing"
    },
    "trSoundPlayDialog": {
        "name": "trSoundPlayDialog",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "event",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "ignoreOnAbort",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "subtitle",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "portrait",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the sound associated with the filename."
    },
    "trSoundPlayDialogue": {
        "name": "trSoundPlayDialogue",
        "return_type": "void",
        "params": [
            {
                "name": "stringID",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "ignoreOnAbort",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "seconds",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the sound associated with the dialogue."
    },
    "trMusicPlay": {
        "name": "trMusicPlay",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "duration",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the music file."
    },
    "trMusicPlayCurrent": {
        "name": "trMusicPlayCurrent",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Plays the current music."
    },
    "trMusicStop": {
        "name": "trMusicStop",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Stops the current music."
    },
    "trMusicSetCurrentMusicSet": {
        "name": "trMusicSetCurrentMusicSet",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the current music set."
    },
    "trMusicSetMood": {
        "name": "trMusicSetMood",
        "return_type": "void",
        "params": [
            {
                "name": "moodID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Changes the music to mood associated with mood id."
    },
    "trCamTrackLoad": {
        "name": "trCamTrackLoad",
        "return_type": "void",
        "params": [
            {
                "name": "filename",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Loads a camera track."
    },
    "trCamTrackPlay": {
        "name": "trCamTrackPlay",
        "return_type": "void",
        "params": [
            {
                "name": "duration",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "plays the current camera track."
    },
    "trMessageSetText": {
        "name": "trMessageSetText",
        "return_type": "void",
        "params": [
            {
                "name": "text",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "timeout",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "displays the message text."
    },
    "trChatSetStatus": {
        "name": "trChatSetStatus",
        "return_type": "void",
        "params": [
            {
                "name": "onOff",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Changes the chat status."
    },
    "trChatSend": {
        "name": "trChatSend",
        "return_type": "void",
        "params": [
            {
                "name": "fromID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Changes the chat status."
    },
    "trChatSendToPlayer": {
        "name": "trChatSendToPlayer",
        "return_type": "void",
        "params": [
            {
                "name": "fromID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "toID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Changes the chat status for one specific player."
    },
    "trChatSendSpoofed": {
        "name": "trChatSendSpoofed",
        "return_type": "void",
        "params": [
            {
                "name": "fromID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Changes the chat status, but does not append player."
    },
    "trChatSendSpoofedToPlayer": {
        "name": "trChatSendSpoofedToPlayer",
        "return_type": "void",
        "params": [
            {
                "name": "fromID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "toID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Changes the chat status, but does not append player.  Goes to specific player."
    },
    "trWriteToLog": {
        "name": "trWriteToLog",
        "return_type": "void",
        "params": [
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Writes text to the Age3Log"
    },
    "trGamePause": {
        "name": "trGamePause",
        "return_type": "void",
        "params": [
            {
                "name": "pause",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "pause or unpause the game."
    },
    "trGameLoadScenario": {
        "name": "trGameLoadScenario",
        "return_type": "void",
        "params": [
            {
                "name": "scenario",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "start a game using scenario."
    },
    "trBranchScenario": {
        "name": "trBranchScenario",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "pop up a dialog allowing choice to load a scenario."
    },
    "trTechStatusActive": {
        "name": "trTechStatusActive",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if tech is active for player."
    },
    "trTechStatusResearching": {
        "name": "trTechStatusResearching",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if tech is being researched for player."
    },
    "trTechStatusCheck": {
        "name": "trTechStatusCheck",
        "return_type": "bool",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techStatus",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if tech's status is techStatus."
    },
    "trTechSetStatus": {
        "name": "trTechSetStatus",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "techID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "status",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets the tech status for the player."
    },
    "trYouWin": {
        "name": "trYouWin",
        "return_type": "void",
        "params": [
            {
                "name": "directToMenu",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "player wins.  If you set directToMenu to true, you go directly to Campaign Menu."
    },
    "trYouLose": {
        "name": "trYouLose",
        "return_type": "void",
        "params": [
            {
                "name": "text",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "player loses, specifies message."
    },
    "trShowWinLose": {
        "name": "trShowWinLose",
        "return_type": "void",
        "params": [
            {
                "name": "text",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "soundfile",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "message and sound."
    },
    "trRenderSky": {
        "name": "trRenderSky",
        "return_type": "void",
        "params": [
            {
                "name": "render",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "skyName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turn sky rendering on/off and set which sky to use."
    },
    "trRenderSnow": {
        "name": "trRenderSnow",
        "return_type": "void",
        "params": [
            {
                "name": "percent",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "controls snow rendering."
    },
    "trRenderRain": {
        "name": "trRenderRain",
        "return_type": "void",
        "params": [
            {
                "name": "percent",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "controls rain rendering."
    },
    "trSetFogAndBlackmap": {
        "name": "trSetFogAndBlackmap",
        "return_type": "void",
        "params": [
            {
                "name": "fog",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "blackMap",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "turn fog and black map on/off."
    },
    "trStartGameRecord": {
        "name": "trStartGameRecord",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "add help string."
    },
    "trStopGameRecord": {
        "name": "trStopGameRecord",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "add help string."
    },
    "trArmySelect": {
        "name": "trArmySelect",
        "return_type": "void",
        "params": [
            {
                "name": "army",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "selects the units in the army specified."
    },
    "trArmySelectInt": {
        "name": "trArmySelectInt",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "armyID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "selects the units in the army specified."
    },
    "trArmyDispatch": {
        "name": "trArmyDispatch",
        "return_type": "bool",
        "params": [
            {
                "name": "parameters",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "d",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "e",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "f",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "g",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "creates the units in the army specified."
    },
    "trSetLighting": {
        "name": "trSetLighting",
        "return_type": "void",
        "params": [
            {
                "name": "setname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fadetime",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "fades to the specified lighting set over fadetime."
    },
    "trCounterAddTime": {
        "name": "trCounterAddTime",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "start",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stop",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "event",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "start a counter that may or may not fire an event."
    },
    "trCounterAddTimeMs": {
        "name": "trCounterAddTimeMs",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "start",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stop",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "event",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "start a counter that may or may not fire an event."
    },
    "trCounterAddUnit": {
        "name": "trCounterAddUnit",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "playerid",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "count",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protounit",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "event",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "start a counter that may or may not fire an event."
    },
    "trCounterAddXP": {
        "name": "trCounterAddXP",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "d",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "e",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "start a counter that may or may not fire an event."
    },
    "trCounterAbort": {
        "name": "trCounterAbort",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "abort a counter."
    },
    "trCinematicAbort": {
        "name": "trCinematicAbort",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the abort cinematic status."
    },
    "trCinematicDoAbort": {
        "name": "trCinematicDoAbort",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "aborts the cinematic."
    },
    "trForceNonCinematicModels": {
        "name": "trForceNonCinematicModels",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "forces models to be in non cinematic mode"
    },
    "trFormationScale": {
        "name": "trFormationScale",
        "return_type": "void",
        "params": [
            {
                "name": "scale",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "scales the formation size of formations in the game."
    },
    "trGetNumberNuggetsGathered": {
        "name": "trGetNumberNuggetsGathered",
        "return_type": "int",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns the number of nuggets gathered by the specified player."
    },
    "trHasNuggetBeenCollected": {
        "name": "trHasNuggetBeenCollected",
        "return_type": "bool",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Returns true if the nugget has been collected, the playerID is an optional parameter for querying if the specific player has collected it."
    },
    "trUIFlash": {
        "name": "trUIFlash",
        "return_type": "void",
        "params": [
            {
                "name": "gadget",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "name",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flashLimit",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "colorR",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "colorG",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "flashes a UI element."
    },
    "trUIStopFlash": {
        "name": "trUIStopFlash",
        "return_type": "void",
        "params": [
            {
                "name": "gadget",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "stops the flashing of a UI element."
    },
    "trUIFlashTech": {
        "name": "trUIFlashTech",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "flashes a UI element (maybe)."
    },
    "trUIFlashTrain": {
        "name": "trUIFlashTrain",
        "return_type": "void",
        "params": [
            {
                "name": "a",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "flashes a UI element (maybe)."
    },
    "trUIFadeToColor": {
        "name": "trUIFadeToColor",
        "return_type": "void",
        "params": [
            {
                "name": "r",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "g",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "duration",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "delay",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "inout",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "fade in/out using color specified."
    },
    "trRateConstruction": {
        "name": "trRateConstruction",
        "return_type": "void",
        "params": [
            {
                "name": "rate",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "modify construction rate."
    },
    "trRateTrain": {
        "name": "trRateTrain",
        "return_type": "void",
        "params": [
            {
                "name": "rate",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "modify training rate."
    },
    "trRateResearch": {
        "name": "trRateResearch",
        "return_type": "void",
        "params": [
            {
                "name": "rate",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "modify research rate."
    },
    "trRatesNormal": {
        "name": "trRatesNormal",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "restore all rates to normal."
    },
    "trMinimapFlare": {
        "name": "trMinimapFlare",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "duration",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "position",
                "type": "vector",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "flash",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sends a Minimap flare to a certain player."
    },
    "trCameraShake": {
        "name": "trCameraShake",
        "return_type": "void",
        "params": [
            {
                "name": "duration",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "strength",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes the camera shake."
    },
    "trPlayerResetBlackMap": {
        "name": "trPlayerResetBlackMap",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the black map for a given HUMAN player."
    },
    "trPlayerResetBlackMapForAllPlayers": {
        "name": "trPlayerResetBlackMapForAllPlayers",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Resets the black map for all HUMAN players."
    },
    "trPlayerKillAllUnits": {
        "name": "trPlayerKillAllUnits",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Kills all of the units of a given player."
    },
    "trPlayerKillAllBuildings": {
        "name": "trPlayerKillAllBuildings",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Kills all of the buildings of a given player."
    },
    "trIsGadgetVisible": {
        "name": "trIsGadgetVisible",
        "return_type": "bool",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns true if gadget is real."
    },
    "trModeEnter": {
        "name": "trModeEnter",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "enters the mode specified."
    },
    "trPlayerGrantResources": {
        "name": "trPlayerGrantResources",
        "return_type": "void",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resource",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "amount",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "advances the campaign."
    },
    "trUnitPlayerFakify": {
        "name": "trUnitPlayerFakify",
        "return_type": "void",
        "params": [
            {
                "name": "fakePlayerIndex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the selected unit as having the fake player with the specified index (0-7)"
    },
    "trArmyPlayerFakify": {
        "name": "trArmyPlayerFakify",
        "return_type": "void",
        "params": [
            {
                "name": "armyname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "fakeplayerindex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Fakifies the army to the specified fake player index."
    },
    "trUnitPlayerDefakify": {
        "name": "trUnitPlayerDefakify",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the selected unit as not having a fake player"
    },
    "trArmyPlayerDefakify": {
        "name": "trArmyPlayerDefakify",
        "return_type": "void",
        "params": [
            {
                "name": "armyname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Defakifies the army."
    },
    "trAIFunc": {
        "name": "trAIFunc",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "functionName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "param",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes the camera shake."
    },
    "trUnforbidProtounit": {
        "name": "trUnforbidProtounit",
        "return_type": "bool",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protoname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "removes protounit from the forbidden list"
    },
    "trForbidProtounit": {
        "name": "trForbidProtounit",
        "return_type": "bool",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "protoname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "adds protounit to the forbidden list"
    },
    "trPlayMovie": {
        "name": "trPlayMovie",
        "return_type": "void",
        "params": [
            {
                "name": "fileName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "plays movies from the AVI directory"
    },
    "trIsMovieNotPlaying": {
        "name": "trIsMovieNotPlaying",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns false if a movie is currently playing"
    },
    "trRevealEntireMap": {
        "name": "trRevealEntireMap",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "shows whole map, similar to how revealed mode works"
    },
    "trUnitChangeName": {
        "name": "trUnitChangeName",
        "return_type": "void",
        "params": [
            {
                "name": "name",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "set an override name for a specific unit"
    },
    "trChatHistoryContains": {
        "name": "trChatHistoryContains",
        "return_type": "bool",
        "params": [
            {
                "name": "text",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns whether or not the current chat history has any instance (substring) of this text"
    },
    "trChatHistoryClear": {
        "name": "trChatHistoryClear",
        "return_type": "void",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "forces the chat history to reset"
    },
    "trGetStatValue": {
        "name": "trGetStatValue",
        "return_type": "int",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stat",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "fetch a stat value from the KB"
    },
    "trEchoStatValue": {
        "name": "trEchoStatValue",
        "return_type": "void",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "stat",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "fetch a stat value from the KB and echo to chat"
    },
    "trShowImageDialog": {
        "name": "trShowImageDialog",
        "return_type": "void",
        "params": [
            {
                "name": "texture",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "subtitle",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "displays a custom image in a dialog, with a subtitle"
    },
    "trShowChoiceDialog": {
        "name": "trShowChoiceDialog",
        "return_type": "void",
        "params": [
            {
                "name": "maintext",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "choice1",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "event1",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "choice2",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "event2",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "displays dialog with 2 choices, and activates a trigger in response"
    },
    "trModifyProtounit": {
        "name": "trModifyProtounit",
        "return_type": "void",
        "params": [
            {
                "name": "unit",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "field",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "delta",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "modifies proto unit data for this scenario only."
    },
    "trDamageUnitPercent": {
        "name": "trDamageUnitPercent",
        "return_type": "void",
        "params": [
            {
                "name": "percent",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does % percent of a unit's total HP in instant typeless damage."
    },
    "trDamageUnit": {
        "name": "trDamageUnit",
        "return_type": "void",
        "params": [
            {
                "name": "amt",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "does a specific amount of damage to HP in instant typeless damage."
    },
    "trDamageUnitsInArea": {
        "name": "trDamageUnitsInArea",
        "return_type": "void",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitType",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "dist",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "damage",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "All units within dist of the selected ref object that match type take dmg"
    },
    "trOverlayText": {
        "name": "trOverlayText",
        "return_type": "void",
        "params": [
            {
                "name": "message",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "time",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "x",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "y",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "width",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "background",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "puts up a big movie-credits style text overlay, optionally in a strange location, and now with a background"
    },
    "trQuestVarSet": {
        "name": "trQuestVarSet",
        "return_type": "void",
        "params": [
            {
                "name": "varname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "value",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets one of the trigger scratch variables"
    },
    "trQuestVarCopy": {
        "name": "trQuestVarCopy",
        "return_type": "void",
        "params": [
            {
                "name": "var1",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "var2",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "copies value of one of the trigger scratch variables"
    },
    "trQuestVarSetFromRand": {
        "name": "trQuestVarSetFromRand",
        "return_type": "void",
        "params": [
            {
                "name": "varname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "minval",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "maxval",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "round",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "sets one of the trigger scratch variables within a random range"
    },
    "trQuestVarGet": {
        "name": "trQuestVarGet",
        "return_type": "float",
        "params": [
            {
                "name": "varname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "retrieve value of a trigger scratch variable, returns zero if unset"
    },
    "trQuestVarEcho": {
        "name": "trQuestVarEcho",
        "return_type": "void",
        "params": [
            {
                "name": "varname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "chats out the value of one of the trigger scratch variables"
    },
    "trGrantVP": {
        "name": "trGrantVP",
        "return_type": "void",
        "params": [
            {
                "name": "player",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "number",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Grants a number of Scenario VP to a player"
    },
    "trPlayerVPCount": {
        "name": "trPlayerVPCount",
        "return_type": "int",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the number of victory points for the player."
    },
    "trVPAnnualAwards": {
        "name": "trVPAnnualAwards",
        "return_type": "void",
        "params": [
            {
                "name": "enable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "enables/disables the award of VP's each year."
    },
    "vcGetGameplayMode": {
        "name": "vcGetGameplayMode",
        "return_type": "int",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "returns the current gameplay mode index"
    },
    "vcCheckConquestVictory": {
        "name": "vcCheckConquestVictory",
        "return_type": "bool",
        "params": [
            {
                "type": "",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "checks for victory by being the last allied-unit alive"
    },
    "trUnitFaceUnit": {
        "name": "trUnitFaceUnit",
        "return_type": "bool",
        "params": [
            {
                "name": "unitScenarioName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves the selected unit(s) to face the given unit."
    },
    "trCameraLockOnUnit": {
        "name": "trCameraLockOnUnit",
        "return_type": "void",
        "params": [
            {
                "name": "enable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "time",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "to",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Orients the camera to the selected unit, and keeps it locked on that unit. ): puts the camera in the specified location."
    },
    "trCameraPanWithUnit": {
        "name": "trCameraPanWithUnit",
        "return_type": "void",
        "params": [
            {
                "name": "enable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "trigger",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Moves the camera in the same direction that a particular unit moves."
    },
    "trDisableTrigger": {
        "name": "trDisableTrigger",
        "return_type": "void",
        "params": [
            {
                "name": "eventID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Disables (sets active = false) the trigger specified by the given eventID."
    },
    "trUnitMakeInvulnerable": {
        "name": "trUnitMakeInvulnerable",
        "return_type": "void",
        "params": [
            {
                "name": "enable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes a unit invulnerable to damage.  Turn it off to return the unit to normal."
    },
    "trUnitSuspendAction": {
        "name": "trUnitSuspendAction",
        "return_type": "void",
        "params": [
            {
                "name": "actionName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "suspend",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Makes an action on a unit suspened or not."
    },
    "trCreateDefendPlan": {
        "name": "trCreateDefendPlan",
        "return_type": "void",
        "params": [
            {
                "name": "armyName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendPlanName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendY",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "engageRange",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "evaluationFrequency",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "gatherdistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "No help "
    },
    "trCreateAttackPlan": {
        "name": "trCreateAttackPlan",
        "return_type": "void",
        "params": [
            {
                "name": "armyName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "PlanName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "attackPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "attackX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "attackY",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "attackZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "engageRange",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "evaluationFrequency",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "No help "
    },
    "trKillAIPlan": {
        "name": "trKillAIPlan",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "No help "
    },
    "trAddArmyToPlan": {
        "name": "trAddArmyToPlan",
        "return_type": "void",
        "params": [
            {
                "name": "armyname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Adds the units in the specified army to the specified plan."
    },
    "trDefendUnits": {
        "name": "trDefendUnits",
        "return_type": "void",
        "params": [
            {
                "name": "srcArmyname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendedArmyname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "evaluationFrequency",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "gatherdistance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "srcArmy units will defend defendedArmyUnits in the given planname."
    },
    "trAttackUnits": {
        "name": "trAttackUnits",
        "return_type": "void",
        "params": [
            {
                "name": "srcArmyname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "armyToAttack",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "planname",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "srcArmy units will attack armyToAttack in the given planname."
    },
    "trAICommsAttackUnits": {
        "name": "trAICommsAttackUnits",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "armyToAttack",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "playerID will attack armyToAttack, sent via player Comms."
    },
    "trAICommsDefendPoint": {
        "name": "trAICommsDefendPoint",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendX",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendY",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "defendZ",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "playerID will defend point(defendX, defendY, defendZ), sent via player Comms."
    },
    "trAICommsRequestTribute": {
        "name": "trAICommsRequestTribute",
        "return_type": "void",
        "params": [
            {
                "name": "fromPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "resource",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "amount",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "fromPlayerID will send resource of x amount, sent via player Comms."
    },
    "trAICommsCancelOrder": {
        "name": "trAICommsCancelOrder",
        "return_type": "void",
        "params": [
            {
                "name": "sendToPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "tell player sendToPlayerID to cancel order, sent via player Comms."
    },
    "trAICommsClaim": {
        "name": "trAICommsClaim",
        "return_type": "void",
        "params": [
            {
                "name": "sendToPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "b",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "c",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "tell player sendToPlayerID to claim TradePost at (locX, locY, locZ), sent via player Comms."
    },
    "trAICommsTrain": {
        "name": "trAICommsTrain",
        "return_type": "void",
        "params": [
            {
                "name": "sendToPlayerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "unitTypeName",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "tell player sendToPlayerID to train Units of type unitTypeName, sent via player Comms."
    },
    "trTradeRouteSetPosition": {
        "name": "trTradeRouteSetPosition",
        "return_type": "void",
        "params": [
            {
                "name": "position",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Places train on a specified position on the route."
    },
    "trTradeRouteToggleState": {
        "name": "trTradeRouteToggleState",
        "return_type": "void",
        "params": [
            {
                "name": "position",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "a",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Enable or disables the unit from showing."
    },
    "trTradeRouteSetLevel": {
        "name": "trTradeRouteSetLevel",
        "return_type": "void",
        "params": [
            {
                "name": "traderouteindex",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "level",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Sets the specified trade route to the specified level from a trigger."
    },
    "trSetShadowFarClip": {
        "name": "trSetShadowFarClip",
        "return_type": "void",
        "params": [
            {
                "name": "enable",
                "type": "bool",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "distance",
                "type": "float",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Enable or disables the shadow far clippping plane."
    },
    "trShowSPCNote": {
        "name": "trShowSPCNote",
        "return_type": "void",
        "params": [
            {
                "name": "Title",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "Text",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Displays the SPC Note Dlg with the specified title and text."
    },
    "trPlayerOverrideArtCulture": {
        "name": "trPlayerOverrideArtCulture",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "culture",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Overrides the culture used for choosing the player's art."
    },
    "trPlayerOverrideSoundCiv": {
        "name": "trPlayerOverrideSoundCiv",
        "return_type": "void",
        "params": [
            {
                "name": "playerID",
                "type": "int",
                "required": true,
                "desc": "No description yet."
            },
            {
                "name": "civilization",
                "type": "string",
                "required": true,
                "desc": "No description yet."
            }
        ],
        "desc": "Overrides the civilization used for choosing the player's vocal sound effects."
    }
}